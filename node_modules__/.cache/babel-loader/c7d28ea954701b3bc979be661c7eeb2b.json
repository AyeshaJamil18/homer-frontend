{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\ayesh\\\\Desktop\\\\TUM\\\\semester 3\\\\Final Presentation\\\\dedas-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"C:\\\\Users\\\\ayesh\\\\Desktop\\\\TUM\\\\semester 3\\\\Final Presentation\\\\dedas-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\ayesh\\\\Desktop\\\\TUM\\\\semester 3\\\\Final Presentation\\\\dedas-frontend\\\\src\\\\views\\\\SignIn\\\\SignIn.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport { Link as RouterLink, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport validate from 'validate.js';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button, Grid, IconButton, Link, TextField, Typography } from '@material-ui/core';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { AuthService } from '../../service';\nlet ErrorMessage = '';\nconst schema = {\n  email: {\n    presence: {\n      allowEmpty: false,\n      message: 'is required'\n    },\n    email: true,\n    length: {\n      maximum: 64\n    }\n  },\n  password: {\n    presence: {\n      allowEmpty: false,\n      message: 'is required'\n    },\n    length: {\n      maximum: 128\n    }\n  }\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: theme.palette.background.default,\n    height: '100%'\n  },\n  grid: {\n    height: '100%'\n  },\n  quoteContainer: {\n    [theme.breakpoints.down('md')]: {\n      display: 'none'\n    }\n  },\n  quote: {\n    backgroundColor: theme.palette.neutral,\n    height: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundImage: 'url(/images/auth.jpg)',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center'\n  },\n  quoteInner: {\n    textAlign: 'center',\n    flexBasis: '600px'\n  },\n  quoteText: {\n    color: theme.palette.white,\n    fontWeight: 300\n  },\n  name: {\n    marginTop: theme.spacing(3),\n    color: theme.palette.white\n  },\n  bio: {\n    color: theme.palette.white\n  },\n  contentContainer: {},\n  content: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  contentHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    paddingTop: theme.spacing(5),\n    paddingBototm: theme.spacing(2),\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2)\n  },\n  logoImage: {\n    marginLeft: theme.spacing(4)\n  },\n  contentBody: {\n    flexGrow: 1,\n    display: 'flex',\n    alignItems: 'center',\n    [theme.breakpoints.down('md')]: {\n      justifyContent: 'center'\n    }\n  },\n  form: {\n    paddingLeft: 100,\n    paddingRight: 100,\n    paddingBottom: 125,\n    flexBasis: 700,\n    [theme.breakpoints.down('sm')]: {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2)\n    }\n  },\n  title: {\n    marginTop: theme.spacing(3)\n  },\n  socialButtons: {\n    marginTop: theme.spacing(3)\n  },\n  socialIcon: {\n    marginRight: theme.spacing(1)\n  },\n  sugestion: {\n    marginTop: theme.spacing(2)\n  },\n  textField: {\n    marginTop: theme.spacing(2)\n  },\n  signInButton: {\n    margin: theme.spacing(2, 0)\n  }\n}));\n\nconst SignIn = props => {\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        open = _React$useState2[0],\n        setOpen = _React$useState2[1];\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const history = props.history;\n  const classes = useStyles();\n\n  const _useState = useState({\n    isValid: false,\n    values: {},\n    touched: {},\n    errors: {}\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        formState = _useState2[0],\n        setFormState = _useState2[1];\n\n  useEffect(() => {\n    const errors = validate(formState.values, schema);\n    setFormState(formState => _objectSpread({}, formState, {\n      isValid: errors ? false : true,\n      errors: errors || {}\n    }));\n  }, [formState.values]);\n\n  const handleBack = () => {\n    history.goBack();\n  };\n\n  const handleChange = event => {\n    event.persist();\n    setFormState(formState => _objectSpread({}, formState, {\n      values: _objectSpread({}, formState.values, {\n        [event.target.name]: event.target.type === 'checkbox' ? event.target.checked : event.target.value\n      }),\n      touched: _objectSpread({}, formState.touched, {\n        [event.target.name]: true\n      })\n    }));\n  };\n\n  const handleSignIn = event => {\n    event.preventDefault();\n    AuthService.login(formState.values.email, formState.values.password).then(data => {\n      history.push({\n        pathname: '/dashboard'\n      });\n    }).catch(res => {\n      if (res.status === 404) {\n        ErrorMessage = 'User Not Found';\n      } else if (res.status === 401) {\n        ErrorMessage = 'Incorrect Password';\n      } else {\n        ErrorMessage = 'Internal Server Error';\n      }\n\n      handleClickOpen();\n    });\n  };\n\n  const hasError = field => !!(formState.touched[field] && formState.errors[field]);\n\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, React.createElement(Dialog, {\n    \"aria-describedby\": \"alert-dialog-description\",\n    \"aria-labelledby\": \"alert-dialog-title\",\n    onClose: handleClose,\n    open: open,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"alert-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }, 'Sign up Error'), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214\n    },\n    __self: this\n  }, React.createElement(DialogContentText, {\n    id: \"alert-dialog-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, ErrorMessage)), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }, React.createElement(Button, {\n    autoFocus: true,\n    color: \"primary\",\n    onClick: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }, \"Close\"))), React.createElement(Grid, {\n    className: classes.grid,\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    className: classes.content,\n    item: true,\n    lg: 7,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.contentHeader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    onClick: handleBack,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  }, React.createElement(ArrowBackIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: classes.contentBody,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: classes.form,\n    onSubmit: handleSignIn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.title,\n    variant: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253\n    },\n    __self: this\n  }, \"Sign in\"), React.createElement(TextField, {\n    className: classes.textField,\n    error: hasError('email'),\n    fullWidth: true,\n    helperText: hasError('email') ? formState.errors.email[0] : null,\n    label: \"Email address\",\n    name: \"email\",\n    onChange: handleChange,\n    type: \"text\",\n    value: formState.values.email || '',\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    className: classes.textField,\n    error: hasError('password'),\n    fullWidth: true,\n    helperText: hasError('password') ? formState.errors.password[0] : null,\n    label: \"Password\",\n    name: \"password\",\n    onChange: handleChange,\n    type: \"password\",\n    value: formState.values.password || '',\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274\n    },\n    __self: this\n  }), React.createElement(Button, {\n    className: classes.signInButton,\n    color: \"primary\",\n    disabled: !formState.isValid,\n    fullWidth: true,\n    size: \"large\",\n    type: \"submit\",\n    variant: \"contained\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288\n    },\n    __self: this\n  }, \"Sign in now\"), React.createElement(Typography, {\n    color: \"textSecondary\",\n    variant: \"body1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299\n    },\n    __self: this\n  }, \"Don't have an account?\", ' ', React.createElement(Link, {\n    component: RouterLink,\n    to: \"/sign-up\",\n    variant: \"h6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304\n    },\n    __self: this\n  }, \"Sign up\"))))))));\n};\n\nSignIn.propTypes = {\n  history: PropTypes.object\n};\nexport default withRouter(SignIn);","map":{"version":3,"sources":["C:/Users/ayesh/Desktop/TUM/semester 3/Final Presentation/dedas-frontend/src/views/SignIn/SignIn.js"],"names":["React","useEffect","useState","Link","RouterLink","withRouter","PropTypes","validate","makeStyles","Button","Grid","IconButton","TextField","Typography","ArrowBackIcon","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","AuthService","ErrorMessage","schema","email","presence","allowEmpty","message","length","maximum","password","useStyles","theme","root","backgroundColor","palette","background","default","height","grid","quoteContainer","breakpoints","down","display","quote","neutral","justifyContent","alignItems","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","quoteInner","textAlign","flexBasis","quoteText","color","white","fontWeight","name","marginTop","spacing","bio","contentContainer","content","flexDirection","contentHeader","paddingTop","paddingBototm","paddingLeft","paddingRight","logoImage","marginLeft","contentBody","flexGrow","form","paddingBottom","title","socialButtons","socialIcon","marginRight","sugestion","textField","signInButton","margin","SignIn","props","open","setOpen","handleClickOpen","handleClose","history","classes","isValid","values","touched","errors","formState","setFormState","handleBack","goBack","handleChange","event","persist","target","type","checked","value","handleSignIn","preventDefault","login","then","data","push","pathname","catch","res","status","hasError","field","propTypes","object"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Link as RouterLink, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport validate from 'validate.js';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Button, Grid, IconButton, Link, TextField, Typography } from '@material-ui/core';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\n\r\nimport { AuthService } from '../../service';\r\n\r\nlet ErrorMessage = '';\r\nconst schema = {\r\n    email: {\r\n        presence: { allowEmpty: false, message: 'is required' },\r\n        email: true,\r\n        length: {\r\n            maximum: 64\r\n        }\r\n    },\r\n    password: {\r\n        presence: { allowEmpty: false, message: 'is required' },\r\n        length: {\r\n            maximum: 128\r\n        }\r\n    }\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        backgroundColor: theme.palette.background.default,\r\n        height: '100%'\r\n    },\r\n    grid: {\r\n        height: '100%'\r\n    },\r\n    quoteContainer: {\r\n        [theme.breakpoints.down('md')]: {\r\n            display: 'none'\r\n        }\r\n    },\r\n    quote: {\r\n        backgroundColor: theme.palette.neutral,\r\n        height: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        backgroundImage: 'url(/images/auth.jpg)',\r\n        backgroundSize: 'cover',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundPosition: 'center'\r\n    },\r\n    quoteInner: {\r\n        textAlign: 'center',\r\n        flexBasis: '600px'\r\n    },\r\n    quoteText: {\r\n        color: theme.palette.white,\r\n        fontWeight: 300\r\n    },\r\n    name: {\r\n        marginTop: theme.spacing(3),\r\n        color: theme.palette.white\r\n    },\r\n    bio: {\r\n        color: theme.palette.white\r\n    },\r\n    contentContainer: {},\r\n    content: {\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column'\r\n    },\r\n    contentHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        paddingTop: theme.spacing(5),\r\n        paddingBototm: theme.spacing(2),\r\n        paddingLeft: theme.spacing(2),\r\n        paddingRight: theme.spacing(2)\r\n    },\r\n    logoImage: {\r\n        marginLeft: theme.spacing(4)\r\n    },\r\n    contentBody: {\r\n        flexGrow: 1,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        [theme.breakpoints.down('md')]: {\r\n            justifyContent: 'center'\r\n        }\r\n    },\r\n    form: {\r\n        paddingLeft: 100,\r\n        paddingRight: 100,\r\n        paddingBottom: 125,\r\n        flexBasis: 700,\r\n        [theme.breakpoints.down('sm')]: {\r\n            paddingLeft: theme.spacing(2),\r\n            paddingRight: theme.spacing(2)\r\n        }\r\n    },\r\n    title: {\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    socialButtons: {\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    socialIcon: {\r\n        marginRight: theme.spacing(1)\r\n    },\r\n    sugestion: {\r\n        marginTop: theme.spacing(2)\r\n    },\r\n    textField: {\r\n        marginTop: theme.spacing(2)\r\n    },\r\n    signInButton: {\r\n        margin: theme.spacing(2, 0)\r\n    }\r\n}));\r\n\r\nconst SignIn = props => {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const { history } = props;\r\n\r\n    const classes = useStyles();\r\n\r\n    const [formState, setFormState] = useState({\r\n        isValid: false,\r\n        values: {},\r\n        touched: {},\r\n        errors: {}\r\n    });\r\n\r\n    useEffect(() => {\r\n        const errors = validate(formState.values, schema);\r\n\r\n        setFormState(formState => ({\r\n            ...formState,\r\n            isValid: errors ? false : true,\r\n            errors: errors || {}\r\n        }));\r\n    }, [formState.values]);\r\n\r\n    const handleBack = () => {\r\n        history.goBack();\r\n    };\r\n\r\n    const handleChange = event => {\r\n        event.persist();\r\n\r\n        setFormState(formState => ({\r\n            ...formState,\r\n            values: {\r\n                ...formState.values,\r\n                [event.target.name]:\r\n                    event.target.type === 'checkbox'\r\n                        ? event.target.checked\r\n                        : event.target.value\r\n            },\r\n            touched: {\r\n                ...formState.touched,\r\n                [event.target.name]: true\r\n            }\r\n        }));\r\n    };\r\n\r\n\r\n    const handleSignIn = event => {\r\n        event.preventDefault();\r\n        AuthService.login(formState.values.email, formState.values.password).then((data) => {\r\n            history.push({\r\n                pathname: '/dashboard'\r\n            });\r\n        }).catch((res) => {\r\n            if (res.status === 404)\r\n            {\r\n                ErrorMessage ='User Not Found'\r\n            }\r\n            else if (res.status === 401) {\r\n                ErrorMessage = 'Incorrect Password';\r\n            } else {\r\n                ErrorMessage = 'Internal Server Error';\r\n            }\r\n            handleClickOpen();\r\n        })\r\n    };\r\n    const hasError = field =>\r\n        !!(formState.touched[field] && formState.errors[field]);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Dialog\r\n                aria-describedby=\"alert-dialog-description\"\r\n                aria-labelledby=\"alert-dialog-title\"\r\n\r\n                onClose={handleClose}\r\n                open={open}\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">{'Sign up Error'}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n\r\n                        {ErrorMessage}\r\n\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        autoFocus\r\n                        color=\"primary\"\r\n                        onClick={handleClose}\r\n                    >\r\n                        Close\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <Grid\r\n                className={classes.grid}\r\n                container\r\n            >\r\n                {}\r\n                <Grid\r\n                    className={classes.content}\r\n                    item\r\n                    lg={7}\r\n                    xs={12}\r\n                >\r\n                    <div className={classes.content}>\r\n                        <div className={classes.contentHeader}>\r\n                            <IconButton onClick={handleBack}>\r\n                                <ArrowBackIcon/>\r\n                            </IconButton>\r\n                        </div>\r\n                        <div className={classes.contentBody}>\r\n                            <form\r\n                                className={classes.form}\r\n                                onSubmit={handleSignIn}\r\n                            >\r\n                                <Typography\r\n                                    className={classes.title}\r\n                                    variant=\"h2\"\r\n                                >\r\n                                    Sign in\r\n                                </Typography>\r\n                                {}\r\n                                <TextField\r\n                                    className={classes.textField}\r\n                                    error={hasError('email')}\r\n                                    fullWidth\r\n                                    helperText={\r\n                                        hasError('email') ? formState.errors.email[0] : null\r\n                                    }\r\n                                    label=\"Email address\"\r\n                                    name=\"email\"\r\n                                    onChange={handleChange}\r\n                                    type=\"text\"\r\n                                    value={formState.values.email || ''}\r\n                                    variant=\"outlined\"\r\n                                />\r\n                                <TextField\r\n                                    className={classes.textField}\r\n                                    error={hasError('password')}\r\n                                    fullWidth\r\n                                    helperText={\r\n                                        hasError('password') ? formState.errors.password[0] : null\r\n                                    }\r\n                                    label=\"Password\"\r\n                                    name=\"password\"\r\n                                    onChange={handleChange}\r\n                                    type=\"password\"\r\n                                    value={formState.values.password || ''}\r\n                                    variant=\"outlined\"\r\n                                />\r\n                                <Button\r\n                                    className={classes.signInButton}\r\n                                    color=\"primary\"\r\n                                    disabled={!formState.isValid}\r\n                                    fullWidth\r\n                                    size=\"large\"\r\n                                    type=\"submit\"\r\n                                    variant=\"contained\"\r\n                                >\r\n                                    Sign in now\r\n                                </Button>\r\n                                <Typography\r\n                                    color=\"textSecondary\"\r\n                                    variant=\"body1\"\r\n                                >\r\n                                    Don't have an account?{' '}\r\n                                    <Link\r\n                                        component={RouterLink}\r\n                                        to=\"/sign-up\"\r\n                                        variant=\"h6\"\r\n                                    >\r\n                                        Sign up\r\n                                    </Link>\r\n                                </Typography>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n};\r\n\r\nSignIn.propTypes = {\r\n    history: PropTypes.object\r\n};\r\n\r\nexport default withRouter(SignIn);\r\n"]},"metadata":{},"sourceType":"module"}