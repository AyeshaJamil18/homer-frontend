{"ast":null,"code":"import HttpService from './HttpService';\nconst baseURL = process.env.REACT_APP_BACKEND_API_URL + '/auth';\n\nconst jwtDecode = require('jwt-decode');\n\nconst register = (username, email, firstName, lastName, password) => {\n  const userObject = {\n    username: username,\n    email: email,\n    firstName: firstName,\n    lastName: lastName,\n    password: password\n  };\n  return HttpService.post(baseURL + '/register', userObject).then(resp => {\n    if (resp.status === 200) {\n      // This should be 201\n      return resp.json().then(json => {\n        handleBearerToken(json);\n        return Promise.resolve(resp);\n      });\n    } else {\n      return Promise.reject(resp);\n    }\n  });\n};\n\nconst login = (email, password) => {\n  const loginObject = {\n    email: email,\n    password: password\n  };\n  return HttpService.post(baseURL + '/login', loginObject).then(resp => {\n    if (resp.status === 200) {\n      return resp.json().then(json => {\n        handleBearerToken(json);\n        return Promise.resolve(resp);\n      });\n    } else {\n      return Promise.reject(resp);\n    }\n  });\n};\n\nconst logout = () => {\n  window.localStorage.removeItem('bearerToken');\n};\n\nconst hasBearerToken = () => {\n  return !!window.localStorage['bearerToken'];\n};\n\nconst isBearerTokenStillValid = () => {\n  if (hasBearerToken()) {\n    const token = window.localStorage['bearerToken'];\n    var decoded = jwtDecode(token);\n    const current_time = Date.now() / 1000;\n    return decoded.exp >= current_time;\n  } else {\n    return false;\n  }\n};\n\nconst handleBearerToken = resp => {\n  if (resp.hasOwnProperty('token')) {\n    window.localStorage['bearerToken'] = resp.token;\n  } else {\n    throw 'Bearer token was not in response';\n  }\n};\n\nexport default {\n  register,\n  login,\n  logout,\n  hasBearerToken,\n  isBearerTokenStillValid\n};","map":{"version":3,"sources":["C:/Users/ayesh/Desktop/TUM/semester 3/Final Presentation/dedas-frontend/src/service/AuthService.js"],"names":["HttpService","baseURL","process","env","REACT_APP_BACKEND_API_URL","jwtDecode","require","register","username","email","firstName","lastName","password","userObject","post","then","resp","status","json","handleBearerToken","Promise","resolve","reject","login","loginObject","logout","window","localStorage","removeItem","hasBearerToken","isBearerTokenStillValid","token","decoded","current_time","Date","now","exp","hasOwnProperty"],"mappings":"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","sourcesContent":["import HttpService from './HttpService';\r\n\r\nconst baseURL = process.env.REACT_APP_BACKEND_API_URL + '/auth';\r\n\r\nconst jwtDecode = require('jwt-decode');\r\n\r\nconst register = (username, email, firstName, lastName, password) => {\r\n    const userObject = {\r\n        username: username,\r\n        email: email,\r\n        firstName: firstName,\r\n        lastName: lastName,\r\n        password: password\r\n    };\r\n\r\n    return HttpService.post(baseURL + '/register', userObject)\r\n        .then(resp => {\r\n            if (resp.status === 200) { // This should be 201\r\n                return resp.json()\r\n                    .then(json => {\r\n                        handleBearerToken(json);\r\n\r\n                        return Promise.resolve(resp);\r\n                    });\r\n            } else {\r\n                return Promise.reject(resp);\r\n            }\r\n        });\r\n};\r\n\r\nconst login = (email, password) => {\r\n    const loginObject = { email: email, password: password };\r\n\r\n    return HttpService.post(baseURL + '/login', loginObject)\r\n        .then(resp => {\r\n            if (resp.status === 200) {\r\n                return resp.json()\r\n                    .then(json => {\r\n                        handleBearerToken(json);\r\n\r\n                        return Promise.resolve(resp);\r\n                    });\r\n            } else {\r\n                return Promise.reject(resp);\r\n            }\r\n        });\r\n};\r\n\r\nconst logout = () => {\r\n    window.localStorage.removeItem('bearerToken');\r\n};\r\n\r\nconst hasBearerToken = () => {\r\n    return !!window.localStorage['bearerToken'];\r\n};\r\n\r\nconst isBearerTokenStillValid = () => {\r\n    if (hasBearerToken()) {\r\n        const token = window.localStorage['bearerToken'];\r\n        var decoded = jwtDecode(token);\r\n        const current_time = Date.now() / 1000;\r\n        return decoded.exp >= current_time;\r\n    }\r\n    else\r\n    {\r\n        return false;\r\n    }\r\n};\r\n\r\nconst handleBearerToken = (resp) => {\r\n    if (resp.hasOwnProperty('token')) {\r\n        window.localStorage['bearerToken'] = resp.token;\r\n    } else {\r\n        throw 'Bearer token was not in response';\r\n    }\r\n};\r\n\r\nexport default {\r\n    register,\r\n    login,\r\n    logout,\r\n    hasBearerToken,\r\n    isBearerTokenStillValid\r\n};\r\n"]},"metadata":{},"sourceType":"module"}