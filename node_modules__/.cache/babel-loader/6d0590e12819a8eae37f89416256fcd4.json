{"ast":null,"code":"import Dexie from 'dexie';\nimport Util from './Util';\nconst dedasDb = new Dexie('DeDaSDb');\ndedasDb.version(1).stores({\n  documents: 'dexieId, timestamp'\n});\n\nconst getDocumentDb = () => dedasDb.documents;\n\nconst addDocument = document => addDocumentWithId(Util.getRandomString(), document);\n\nconst addDocumentWithId = (id, document) => getDocumentDb().add({\n  dexieId: id,\n  timestamp: Date.now(),\n  payload: document\n});\n\nconst getDocumentById = id => getDocumentDb().get(id);\n\nconst flushDocumentDb = () => getDocumentDb().clear();\n\nexport default {\n  addDocument,\n  addDocumentWithId,\n  getDocumentById,\n  flushDocumentDb\n};","map":{"version":3,"sources":["C:/Users/ayesh/Desktop/TUM/semester 3/Final Presentation/dedas-frontend/src/service/DexieService.js"],"names":["Dexie","Util","dedasDb","version","stores","documents","getDocumentDb","addDocument","document","addDocumentWithId","getRandomString","id","add","dexieId","timestamp","Date","now","payload","getDocumentById","get","flushDocumentDb","clear"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,MAAMC,OAAO,GAAG,IAAIF,KAAJ,CAAU,SAAV,CAAhB;AACAE,OAAO,CAACC,OAAR,CAAgB,CAAhB,EAAmBC,MAAnB,CAA0B;AAAEC,EAAAA,SAAS,EAAE;AAAb,CAA1B;;AAEA,MAAMC,aAAa,GAAG,MAAMJ,OAAO,CAACG,SAApC;;AAEA,MAAME,WAAW,GAAIC,QAAD,IAChBC,iBAAiB,CAACR,IAAI,CAACS,eAAL,EAAD,EAAyBF,QAAzB,CADrB;;AAGA,MAAMC,iBAAiB,GAAG,CAACE,EAAD,EAAKH,QAAL,KACtBF,aAAa,GAAGM,GAAhB,CAAoB;AAAEC,EAAAA,OAAO,EAAEF,EAAX;AAAeG,EAAAA,SAAS,EAAEC,IAAI,CAACC,GAAL,EAA1B;AAAsCC,EAAAA,OAAO,EAAET;AAA/C,CAApB,CADJ;;AAGA,MAAMU,eAAe,GAAIP,EAAD,IAAQL,aAAa,GAAGa,GAAhB,CAAoBR,EAApB,CAAhC;;AAEA,MAAMS,eAAe,GAAG,MAAMd,aAAa,GAAGe,KAAhB,EAA9B;;AAEA,eAAe;AACXd,EAAAA,WADW;AAEXE,EAAAA,iBAFW;AAGXS,EAAAA,eAHW;AAIXE,EAAAA;AAJW,CAAf","sourcesContent":["import Dexie from 'dexie';\r\n\r\nimport Util from './Util';\r\n\r\nconst dedasDb = new Dexie('DeDaSDb');\r\ndedasDb.version(1).stores({ documents: 'dexieId, timestamp' });\r\n\r\nconst getDocumentDb = () => dedasDb.documents;\r\n\r\nconst addDocument = (document) =>\r\n    addDocumentWithId(Util.getRandomString(), document);\r\n\r\nconst addDocumentWithId = (id, document) =>\r\n    getDocumentDb().add({ dexieId: id, timestamp: Date.now(), payload: document });\r\n\r\nconst getDocumentById = (id) => getDocumentDb().get(id);\r\n\r\nconst flushDocumentDb = () => getDocumentDb().clear();\r\n\r\nexport default {\r\n    addDocument,\r\n    addDocumentWithId,\r\n    getDocumentById,\r\n    flushDocumentDb\r\n};\r\n"]},"metadata":{},"sourceType":"module"}