{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\ayesh\\\\Desktop\\\\TUM\\\\semester 3\\\\Final Presentation\\\\dedas-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"C:\\\\Users\\\\ayesh\\\\Desktop\\\\TUM\\\\semester 3\\\\Final Presentation\\\\dedas-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"C:\\\\Users\\\\ayesh\\\\Desktop\\\\TUM\\\\semester 3\\\\Final Presentation\\\\dedas-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\ayesh\\\\Desktop\\\\TUM\\\\semester 3\\\\Final Presentation\\\\dedas-frontend\\\\src\\\\views\\\\Editor\\\\components\\\\EditorTable\\\\EditorTable.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport AnonymizationAssignment from 'service/Anonymization/AnonymizationAssignment';\nimport AnonymizationWorkerService from 'service/Anonymization/AnonymizationWorkerService';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button, Card, CardActions, CardContent, Chip, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Grid, Radio, Snackbar, Table, TableBody, TableCell, TableHead, TableRow, TextField, Typography } from '@material-ui/core';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport { DocumentService } from 'service';\nimport { CardBody, CardSubtitle, CardText, CardTitle } from 'reactstrap';\nimport { SnackBarWrapper } from 'components';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport AnonymizationFactoryService from '../../../../service/Anonymization/AnonymizationFactoryService';\nimport validate from 'validate.js';\nimport DexieService from '../../../../service/DexieService';\nimport Overlay from '../../../Overlay';\nconst anonymizationWorker = new AnonymizationWorkerService();\nconst printStatement = [];\nconst schema = {\n  fileName: {\n    presence: {\n      allowEmpty: false,\n      message: 'is required'\n    },\n    format: {\n      pattern: '^[a-zA-Z0-9-.@_]*$',\n      flags: 'i',\n      message: 'can only contain English Alphabets, Numbers from 0-9 and special characters .@-_'\n    }\n  }\n};\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  title: {\n    //   fontWeight: 700,\n    fontSize: 33\n  },\n  inner: {\n    minWidth: 1050\n  },\n  fixStyle: {\n    display: 'flex'\n  },\n  buttonNormal: {\n    backgroundColor: 'white'\n  },\n  buttonSelected: {\n    backgroundColor: 'Green'\n  },\n  nameContainer: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  actions: {\n    justifyContent: 'flex-end'\n  },\n  tableRow: {\n    border: 'none'\n  },\n  tableCell: {\n    borderRight: 'solid 1px lightgrey',\n    borderLeft: 'solid 1px lightgrey',\n    borderBottom: 'none'\n  },\n  tableCell_header: {\n    borderRight: 'solid 1px lightgrey',\n    borderLeft: 'solid 1px lightgrey',\n    borderBottom: 'none'\n  },\n  tableHead: {\n    backgroundColor: '#f0f0f0'\n  },\n  table: {\n    borderCollapse: 'collapse'\n  },\n  row: {\n    height: '42px',\n    display: 'flex',\n    alignItems: 'center',\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(3)\n  },\n  spacer: {\n    flexGrow: 1\n  },\n  button: {\n    backgroundColor: 'var(--backgroundColor)'\n  },\n  MaskingClass: {\n    color: 'black',\n    backgroundColor: '#f4e9af',\n    marginRight: theme.spacing(2),\n    marginTop: theme.spacing(1)\n  },\n  HashingClass: {\n    color: 'black',\n    backgroundColor: '#D0F3AD',\n    marginRight: theme.spacing(2),\n    marginTop: theme.spacing(1)\n  },\n  HashingWithSaltClass: {\n    color: 'black',\n    backgroundColor: '#CCEDF4',\n    marginRight: theme.spacing(2),\n    marginTop: theme.spacing(1)\n  },\n  RandomClass: {\n    color: 'black',\n    backgroundColor: '#EC9C88',\n    marginRight: theme.spacing(2),\n    marginTop: theme.spacing(1)\n  },\n  GeneralizationClass: {\n    color: 'black',\n    backgroundColor: '#CAC7EE',\n    marginRight: theme.spacing(2),\n    marginTop: theme.spacing(1)\n  },\n  DeleteClass: {\n    color: 'black',\n    backgroundColor: '#E1C3D9',\n    marginRight: theme.spacing(2),\n    marginTop: theme.spacing(1)\n  },\n  DialogClass: {\n    color: 'red',\n    textAlign: 'center',\n    left: '50%'\n  },\n  TheInput: {\n    padding: 10,\n    fontSize: 12,\n    labelFontSize: 40\n  },\n  card: {\n    marginTop: theme.spacing(1),\n    top_padding: 10,\n    maxWidth: 550\n  },\n  yt_description: {\n    fontSize: 18,\n    color: 'textPrimary',\n    lineHeight: 2\n  },\n  yt_h2: {\n    fontSize: 18,\n    color: 'textPrimary',\n    lineHeight: 2\n  },\n  yt_h3: {\n    fontsize: 16,\n    variant: 'body1',\n    component: 'p',\n    lineHeight: 1.6\n  }\n}));\nconst Default = {\n  '--backgroundColor': 'white'\n};\nconst MaskingStyle = {\n  '--backgroundColor': '#f4e9af'\n};\nconst HashingStyle = {\n  '--backgroundColor': '#D0F3AD'\n};\nconst HashingWithSaltStyle = {\n  '--backgroundColor': '#CCEDF4'\n};\nconst RandomStyle = {\n  '--backgroundColor': '#EC9C88'\n};\nconst GeneralizationStyle = {\n  '--backgroundColor': '#CAC7EE'\n};\nconst DeleteStyle = {\n  '--backgroundColor': '#E1C3D9'\n};\n\nconst EditorTable = props => {\n  const className = props.className,\n        rest = _objectWithoutProperties(props, [\"className\"]);\n\n  let location = useLocation();\n  let history = useHistory();\n\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        open = _React$useState2[0],\n        setOpen = _React$useState2[1];\n\n  const _React$useState3 = React.useState(false),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        OpenConfirmation = _React$useState4[0],\n        setOpenConfirmation = _React$useState4[1];\n\n  const _React$useState5 = React.useState(false),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        OpenYoutubeChipMasking = _React$useState6[0],\n        setOpenYoutubeChipMasking = _React$useState6[1];\n\n  const _React$useState7 = React.useState(false),\n        _React$useState8 = _slicedToArray(_React$useState7, 2),\n        OpenYoutubeChipHashing = _React$useState8[0],\n        setOpenYoutubeChipHashing = _React$useState8[1];\n\n  const _React$useState9 = React.useState(false),\n        _React$useState10 = _slicedToArray(_React$useState9, 2),\n        OpenYoutubeChipHashingWithSalt = _React$useState10[0],\n        setOpenYoutubeChipHashingWithSalt = _React$useState10[1];\n\n  const _React$useState11 = React.useState(false),\n        _React$useState12 = _slicedToArray(_React$useState11, 2),\n        OpenYoutubeChipRandom = _React$useState12[0],\n        setOpenYoutubeChipRandom = _React$useState12[1];\n\n  const _React$useState13 = React.useState(false),\n        _React$useState14 = _slicedToArray(_React$useState13, 2),\n        OpenYoutubeChipGeneralization = _React$useState14[0],\n        setOpenYoutubeChipGeneralization = _React$useState14[1];\n\n  const _React$useState15 = React.useState(false),\n        _React$useState16 = _slicedToArray(_React$useState15, 2),\n        OpenYoutubeChipDelete = _React$useState16[0],\n        setOpenYoutubeChipDelete = _React$useState16[1];\n\n  const _React$useState17 = React.useState(false),\n        _React$useState18 = _slicedToArray(_React$useState17, 2),\n        SaveButtonDisable = _React$useState18[0],\n        setSaveButtonDisable = _React$useState18[1];\n\n  const _React$useState19 = React.useState(false),\n        _React$useState20 = _slicedToArray(_React$useState19, 2),\n        SaveButtonLoader = _React$useState20[0],\n        setSaveButtonLoader = _React$useState20[1];\n\n  const classes = useStyles();\n\n  const _React$useState21 = React.useState(false),\n        _React$useState22 = _slicedToArray(_React$useState21, 2),\n        openSuccess = _React$useState22[0],\n        setOpenSuccess = _React$useState22[1];\n\n  const _React$useState23 = React.useState(false),\n        _React$useState24 = _slicedToArray(_React$useState23, 2),\n        openError = _React$useState24[0],\n        setOpenError = _React$useState24[1];\n\n  const _React$useState25 = React.useState(false),\n        _React$useState26 = _slicedToArray(_React$useState25, 2),\n        openErrorSpecial = _React$useState26[0],\n        setOpenErrorSpecial = _React$useState26[1];\n\n  const _React$useState27 = React.useState(false),\n        _React$useState28 = _slicedToArray(_React$useState27, 2),\n        openMaskRangeError = _React$useState28[0],\n        setMaskRangeError = _React$useState28[1];\n\n  const _React$useState29 = React.useState(false),\n        _React$useState30 = _slicedToArray(_React$useState29, 2),\n        openGenStepError = _React$useState30[0],\n        setGenStepError = _React$useState30[1];\n\n  const _React$useState31 = React.useState(false),\n        _React$useState32 = _slicedToArray(_React$useState31, 2),\n        openMaskDecimalError = _React$useState32[0],\n        setMaskDecimalError = _React$useState32[1];\n\n  const _React$useState33 = React.useState(false),\n        _React$useState34 = _slicedToArray(_React$useState33, 2),\n        openErrorEmptyString = _React$useState34[0],\n        setErrorEmptyString = _React$useState34[1];\n\n  const _React$useState35 = React.useState(false),\n        _React$useState36 = _slicedToArray(_React$useState35, 2),\n        openErrorIncomInput = _React$useState36[0],\n        setErrorIncomInput = _React$useState36[1];\n\n  const _React$useState37 = React.useState(''),\n        _React$useState38 = _slicedToArray(_React$useState37, 2),\n        selectedValueGenStep = _React$useState38[0],\n        setSelectedValueGenStep = _React$useState38[1];\n\n  const _React$useState39 = React.useState(''),\n        _React$useState40 = _slicedToArray(_React$useState39, 2),\n        selectedValueMaskPat = _React$useState40[0],\n        setSelectedValueMaskPat = _React$useState40[1];\n\n  const _React$useState41 = React.useState(''),\n        _React$useState42 = _slicedToArray(_React$useState41, 2),\n        selectedValueMaskRange = _React$useState42[0],\n        setSelectedValueMaskRange = _React$useState42[1];\n\n  const _React$useState43 = React.useState(''),\n        _React$useState44 = _slicedToArray(_React$useState43, 2),\n        selectedValue = _React$useState44[0],\n        setSelectedValue = _React$useState44[1];\n\n  const _React$useState45 = React.useState(''),\n        _React$useState46 = _slicedToArray(_React$useState45, 2),\n        selectedValue_Start = _React$useState46[0],\n        setSelectedValue_Start = _React$useState46[1];\n\n  const _React$useState47 = React.useState(''),\n        _React$useState48 = _slicedToArray(_React$useState47, 2),\n        selectedValue_Cipher = _React$useState48[0],\n        setSelectedValue_Cipher = _React$useState48[1];\n\n  const _React$useState49 = React.useState(null),\n        _React$useState50 = _slicedToArray(_React$useState49, 2),\n        workingColumn = _React$useState50[0],\n        setWorkingColumn = _React$useState50[1];\n\n  const _useState = useState({\n    isValid: true,\n    value: {},\n    touched: false,\n    error: {}\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        fileNameFormState = _useState2[0],\n        setFileNameFormState = _useState2[1];\n\n  let _React$useState51 = React.useState({}),\n      _React$useState52 = _slicedToArray(_React$useState51, 1),\n      anonymizationAssignmentsObject = _React$useState52[0];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        documentId = _useState4[0],\n        setDocumentId = _useState4[1];\n\n  const _useState5 = useState({\n    id: null,\n    title: '',\n    originalFilename: '',\n    data: []\n  }),\n        _useState6 = _slicedToArray(_useState5, 2),\n        document = _useState6[0],\n        setDocument = _useState6[1];\n\n  const handleRadioChangeGenStep = event => {\n    const parsedValue = Number.parseInt(event.target.value);\n\n    if (Number.isNaN(parsedValue)) {\n      setSelectedValueGenStep(event.target.value);\n    } else if (event.target.value < 1) {\n      handleClickSnackBar('GenStepError');\n    } else {\n      setSelectedValueGenStep(event.target.value);\n    }\n  };\n\n  const handleRadioChangeMaskPat = event => {\n    setSelectedValueMaskPat(event.target.value);\n  };\n\n  const handleRadioChangeMaskRange = event => {\n    const parsedValue = Number.parseInt(event.target.value);\n\n    if (Number.isNaN(parsedValue)) {\n      setSelectedValueMaskRange(event.target.value);\n    } else if (parsedValue.toString() !== event.target.value) {\n      handleClickSnackBar('MaskingDecimalError');\n    } else if (event.target.value < 1) {\n      handleClickSnackBar('MaskingRangeError');\n    } else {\n      setSelectedValueMaskRange(event.target.value);\n    }\n  };\n\n  const handleRadioChange = event => {\n    setSelectedValue(event.target.value);\n  };\n\n  const handleRadioChange_Cipher = event => {\n    setSelectedValue_Cipher(event.target.value);\n  };\n\n  const handleRadioChange_Start = event => {\n    setSelectedValue_Start(event.target.value);\n  };\n\n  const handleClickOpen = position => {\n    console.log('position' + position);\n    setWorkingColumn(position);\n\n    if (anonymizationAssignmentsObject[position]) {\n      let anonymization = anonymizationAssignmentsObject[position];\n      setSelectedValue(anonymization.selectedValue);\n\n      if (anonymization.selectedValue === 'Masking') {\n        setSelectedValue_Start(anonymization.options.start);\n        setSelectedValueMaskPat(anonymization.options.pattern);\n        setSelectedValueMaskRange(anonymization.options.range);\n      } else if (anonymization.selectedValue === 'Hashing') {\n        setSelectedValue_Cipher(anonymization.options.Cipher);\n      } else if (anonymization.selectedValue === 'HashingWithSalt') {\n        setSelectedValue_Cipher(anonymization.options.Cipher);\n      } else if (anonymization.selectedValue === 'Random') {} else if (anonymization.selectedValue === 'Generalization') {\n        setSelectedValueGenStep(anonymization.options.stepSize);\n      } else if (anonymization.selectedValue === 'DeletetheColumn') {}\n    } else {\n      setSelectedValue('None');\n    }\n\n    setOpen(true);\n  };\n\n  const handleClickChipMasking = () => {\n    setOpenYoutubeChipMasking(true);\n  };\n\n  const handleClickChipCloseMasking = () => {\n    setOpenYoutubeChipMasking(false);\n  };\n\n  const handleClickChipHashing = () => {\n    setOpenYoutubeChipHashing(true);\n  };\n\n  const handleClickChipCloseHashing = () => {\n    setOpenYoutubeChipHashing(false);\n  };\n\n  const handleClickChipHashingWithSalt = () => {\n    setOpenYoutubeChipHashingWithSalt(true);\n  };\n\n  const handleClickChipCloseHashingWithSalt = () => {\n    setOpenYoutubeChipHashingWithSalt(false);\n  };\n\n  const handleClickChipRandom = () => {\n    setOpenYoutubeChipRandom(true);\n  };\n\n  const handleClickChipCloseRandom = () => {\n    setOpenYoutubeChipRandom(false);\n  };\n\n  const handleClickChipGeneralization = () => {\n    setOpenYoutubeChipGeneralization(true);\n  };\n\n  const handleClickChipCloseGeneralization = () => {\n    setOpenYoutubeChipGeneralization(false);\n  };\n\n  const handleClickChipDelete = () => {\n    setOpenYoutubeChipDelete(true);\n  };\n\n  const handleClickChipCloseDelete = () => {\n    setOpenYoutubeChipDelete(false);\n  };\n\n  const handleClose = () => {\n    setSelectedValueMaskPat('');\n    setSelectedValueMaskRange('');\n    setSelectedValueGenStep('');\n    setSelectedValue_Start('');\n    setOpen(false);\n  };\n\n  const handleClickOpenConfirmation = () => {\n    printStatement.length = 0;\n    Object.keys(anonymizationAssignmentsObject).forEach(position => {\n      printStatement.push(document.data[position].title + ' ----> ' + AnonymizationFactoryService.getServiceForName(anonymizationAssignmentsObject[position].type).getDescription(anonymizationAssignmentsObject[position].options));\n    });\n    setOpenConfirmation(true);\n  };\n\n  const handleCloseConfirmation = () => {\n    setOpenConfirmation(false);\n  };\n\n  useEffect(() => {\n    console.log('refreshing');\n    const error = validate(fileNameFormState.value, schema);\n    setFileNameFormState(myFileNameFormState => _objectSpread({}, myFileNameFormState, {\n      isValid: error ? false : true,\n      error: error || {}\n    }));\n  }, [fileNameFormState.value]);\n\n  const setDocumentData = (id, title, fileName, data) => {\n    let trimmedFileName = title ? title : fileName ? fileName.slice(0, -4) : '';\n    setFileNameFormState(myFileNameFormState => _objectSpread({}, myFileNameFormState, {\n      value: {\n        fileName: trimmedFileName\n      }\n    }));\n    setDocumentId(id);\n    setDocument({\n      id: id,\n      title: trimmedFileName,\n      originalFilename: fileName,\n      // dexie arrays do not contain map function. Repackage\n      data: data\n    });\n  };\n\n  useEffect(() => {\n    console.log('checking location state', location.state);\n\n    if (!location.state) {\n      history.push({\n        pathname: '/dashboard'\n      });\n    } else if (location.state.dexieDocumentId) {\n      DexieService.getDocumentById(location.state.dexieDocumentId).then(dexieDocument => dexieDocument.payload).then(payload => {\n        setDocumentData(payload.id, payload.title, payload.fileName, payload.data);\n      }).catch(e => {\n        console.log(e);\n        history.push({\n          pathname: '/myDocuments'\n        });\n      });\n    } else {\n      /*\r\n      Leaving this here in case setDocumentData does not work\r\n      let trimmedFileName = location.state.title ? location.state.title : location.state.fileName ? location.state.fileName.slice(0, -4) : '';\r\n      setFileNameFormState(fileNameFormState => ({\r\n          ...fileNameFormState,\r\n          value: { fileName: trimmedFileName }\r\n      }));\r\n      setDocumentId(location.state.id);\r\n      setDocument({\r\n          id: location.state.id,\r\n          title: trimmedFileName,\r\n          originalFilename: location.state.fileName,\r\n          data: location.state.columnsData\r\n      });*/\n      setDocumentData(location.state.id, location.state.title, location.state.fileName, location.state.columnsData);\n    }\n  }, [location.state.dexieDocumentId]);\n\n  const ApplyAnonymization = () => {\n    const tempArray = [];\n    Object.keys(anonymizationAssignmentsObject).forEach(position => {\n      let assignmentProperties = anonymizationAssignmentsObject[position];\n      const anonymizationAssignment = new AnonymizationAssignment(assignmentProperties.type, assignmentProperties.options, parseInt(position));\n      tempArray.push(anonymizationAssignment);\n      delete anonymizationAssignmentsObject[position];\n    });\n    anonymizationWorker.process(tempArray, document);\n    const dexieObject = {\n      id: documentId,\n      data: document.data,\n      fileName: document.originalFilename\n    };\n    DexieService.addDocument(dexieObject).then(dexieId => history.push({\n      pathname: '/editor',\n      state: {\n        dexieDocumentId: dexieId\n      }\n    }));\n    setOpenConfirmation(false);\n    setSaveButtonDisable(true);\n  };\n\n  const saveAnnonymizationType = () => {\n    let options = {};\n    let type = '';\n    let color;\n\n    if (selectedValue === 'None') {\n      if (anonymizationAssignmentsObject[workingColumn]) {\n        delete anonymizationAssignmentsObject[workingColumn];\n      }\n\n      handleClose();\n      return;\n    }\n\n    if (selectedValue === 'Masking') {\n      if (selectedValue_Start === '' || selectedValueMaskPat === '' || selectedValueMaskRange === '') {\n        handleClickSnackBar('InputError');\n      } else {\n        options = {\n          start: selectedValue_Start,\n          pattern: selectedValueMaskPat,\n          range: selectedValueMaskRange\n        };\n        type = 'mask';\n        color = MaskingStyle;\n        handleClose();\n        console.log(Object.keys(anonymizationAssignmentsObject).length);\n        setSaveButtonDisable(false);\n        anonymizationAssignmentsObject[workingColumn] = {\n          options: options,\n          type: type,\n          selectedValue: selectedValue,\n          color: color\n        };\n      }\n    } else if (selectedValue === 'Hashing') {\n      if (selectedValue_Cipher === '') {\n        handleClickSnackBar('InputError');\n      } else {\n        options = {\n          Cipher: setSelectedValue_Cipher,\n          salt: false\n        };\n        type = 'hash';\n        color = HashingStyle;\n        handleClose();\n        console.log(Object.keys(anonymizationAssignmentsObject).length);\n        setSaveButtonDisable(false);\n        anonymizationAssignmentsObject[workingColumn] = {\n          options: options,\n          type: type,\n          selectedValue: selectedValue,\n          color: color\n        };\n      }\n    } else if (selectedValue === 'HashingWithSalt') {\n      if (selectedValue_Cipher === '') {\n        handleClickSnackBar('InputError');\n      } else {\n        options = {\n          Cipher: setSelectedValue_Cipher,\n          salt: true\n        };\n        type = 'hash';\n        color = HashingWithSaltStyle;\n        handleClose();\n        console.log(Object.keys(anonymizationAssignmentsObject).length);\n        setSaveButtonDisable(false);\n        anonymizationAssignmentsObject[workingColumn] = {\n          options: options,\n          type: type,\n          selectedValue: selectedValue,\n          color: color\n        };\n      }\n    } else if (selectedValue === 'Random Sort') {\n      options = {};\n      type = 'random';\n      color = RandomStyle;\n      handleClose();\n      console.log(Object.keys(anonymizationAssignmentsObject).length);\n      setSaveButtonDisable(false);\n      anonymizationAssignmentsObject[workingColumn] = {\n        options: options,\n        type: type,\n        selectedValue: selectedValue,\n        color: color\n      };\n    } else if (selectedValue === 'Generalization') {\n      if (selectedValueGenStep === '') {\n        handleClickSnackBar('InputError');\n      } else {\n        options = {\n          stepSize: selectedValueGenStep\n        };\n        type = 'generalization';\n        color = GeneralizationStyle;\n        handleClose();\n        console.log(Object.keys(anonymizationAssignmentsObject).length);\n        setSaveButtonDisable(false);\n        anonymizationAssignmentsObject[workingColumn] = {\n          options: options,\n          type: type,\n          selectedValue: selectedValue,\n          color: color\n        };\n      }\n    } else if (selectedValue === 'DeletetheColumn') {\n      options = {};\n      type = 'delete';\n      color = DeleteStyle;\n      handleClose();\n      console.log(Object.keys(anonymizationAssignmentsObject).length);\n      setSaveButtonDisable(false);\n      anonymizationAssignmentsObject[workingColumn] = {\n        options: options,\n        type: type,\n        selectedValue: selectedValue,\n        color: color\n      };\n    }\n  };\n\n  const handleClickSnackBar = type => {\n    if (type === 'success') {\n      setOpenSuccess(true);\n    } else if (type === 'error') {\n      setOpenError(true);\n    } else if (type === 'errorSpecial') {\n      setOpenErrorSpecial(true);\n    } else if (type === 'errorEmptyString') {\n      setErrorEmptyString(true);\n    } else if (type === 'MaskingRangeError') {\n      setMaskRangeError(true);\n    } else if (type === 'MaskingDecimalError') {\n      setMaskDecimalError(true);\n    } else if (type === 'GenStepError') {\n      setGenStepError(true);\n    } else if (type === 'InputError') {\n      setErrorIncomInput(true);\n    }\n\n    setSaveButtonLoader(false);\n  };\n\n  const handleCloseSnackBar = type => {\n    if (type === 'success') {\n      setOpenSuccess(false);\n    } else if (type === 'error') {\n      setOpenError(false);\n    } else if (type === 'errorSpecial') {\n      setOpenErrorSpecial(false);\n    } else if (type === 'errorEmptyString') {\n      setErrorEmptyString(false);\n    } else if (type === 'MaskingRangeError') {\n      setMaskRangeError(false);\n    } else if (type === 'MaskingDecimalError') {\n      setMaskDecimalError(false);\n    } else if (type === 'GenStepError') {\n      setGenStepError(false);\n    } else if (type === 'InputError') {\n      setErrorIncomInput(false);\n    }\n  };\n\n  const changeFileName = event => {\n    event.persist();\n    setFileNameFormState(myFileNameFormState => _objectSpread({}, myFileNameFormState, {\n      value: {\n        fileName: event.target.value\n      },\n      touched: true\n    })); // FileName = event.target.value;\n  };\n\n  const hasError = field => !!fileNameFormState.error[field];\n\n  const isFileNameExist = (documents, fileName, myDocumentId) => {\n    return documents.filter(doc => doc.id !== myDocumentId && doc.title === fileName).length > 0;\n  };\n\n  const updateDataset = () => {\n    console.log('update clicked ', documentId);\n    document.title = fileNameFormState.value.fileName;\n    DocumentService.getDocument().then(resp => resp.json()).then(data => {\n      if (!isFileNameExist(data.docs, document.title, document.id)) {\n        DocumentService.updateDocument(document).then(resp => resp.json()).then(() => {\n          handleClickSnackBar('success'); //console.log('updated ', location.state);\n        }).catch(e => {\n          handleClickSnackBar('error');\n          console.log('error');\n          console.log(e);\n        });\n      } else {\n        handleClickSnackBar('error');\n        console.log('error due to duplicate File name');\n      }\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  const saveDataset = () => {\n    document.title = fileNameFormState.value.fileName;\n    setSaveButtonLoader(true);\n    DocumentService.getDocument().then(resp => resp.json()).then(data => {\n      // let documentsFound = 0;\n      // data.docs.forEach(item => {\n      //     if (document.title === item.title) {\n      //         documentsFound = documentsFound + 1;\n      //         //break;\n      //     }\n      // });\n      if (!isFileNameExist(data.docs, document.title)) {\n        if (/^[a-zA-Z0-9-.@_]*$/.test(document.title) === false) {\n          handleClickSnackBar('errorSpecial');\n        } else {\n          DocumentService.createDocument(document).then(resp => resp.json()).then(myData => {\n            handleClickSnackBar('success');\n            console.log('Saved');\n            console.log(JSON.stringify(myData));\n            setDocumentId(myData.id);\n            setDocument(myDocument => _objectSpread({}, myDocument, {\n              id: myData.id\n            }));\n            location.state.id = myData.id;\n            setTimeout(() => {\n              history.push({\n                pathname: '/myDocuments'\n              }); // On leaving editor, flush db\n\n              DexieService.flushDocumentDb();\n            }, 2500);\n          }).catch(e => {\n            handleClickSnackBar('error');\n            console.log('error');\n            console.log(e);\n          });\n        }\n      } else {\n        handleClickSnackBar('error');\n        console.log('error due to duplicate File name');\n      }\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  return React.createElement(\"div\", Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 766\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.fixStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 771\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 774\n    },\n    __self: this\n  }, React.createElement(Chip, {\n    className: classes.MaskingClass,\n    label: \"Masking \\t\\uD83D\\uDEC8 \",\n    onClick: handleClickChipMasking,\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 775\n    },\n    __self: this\n  }), React.createElement(Chip, {\n    className: classes.HashingClass,\n    label: \"Hashing\\t\\uD83D\\uDEC8\",\n    onClick: handleClickChipHashing,\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 781\n    },\n    __self: this\n  }), React.createElement(Chip, {\n    className: classes.HashingWithSaltClass,\n    label: \"Hashing with Salt\\t\\uD83D\\uDEC8\",\n    onClick: handleClickChipHashingWithSalt,\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 787\n    },\n    __self: this\n  }), React.createElement(Chip, {\n    className: classes.RandomClass,\n    label: \"Random Sort \\uD83D\\uDEC8\",\n    onClick: handleClickChipRandom,\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 793\n    },\n    __self: this\n  }), React.createElement(Chip, {\n    className: classes.GeneralizationClass,\n    label: \"Generalization\\t\\uD83D\\uDEC8\",\n    onClick: handleClickChipGeneralization,\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 799\n    },\n    __self: this\n  }), React.createElement(Chip, {\n    className: classes.DeleteClass,\n    label: \"Delete\\t\\uD83D\\uDEC8\",\n    onClick: handleClickChipDelete,\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 805\n    },\n    __self: this\n  }), React.createElement(Dialog, {\n    \"aria-labelledby\": \"form-dialog-title\",\n    className: classes.DialogClass,\n    onClose: handleClickChipCloseMasking,\n    open: OpenYoutubeChipMasking,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 811\n    },\n    __self: this\n  }, React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 817\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: classes.card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 818\n    },\n    __self: this\n  }, React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 819\n    },\n    __self: this\n  }, React.createElement(\"iframe\", {\n    src: \"https://www.youtube.com/embed/9RjN9J24v4U\",\n    width: \"550px\",\n    height: \"315px\",\n    allowFullScreen: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 820\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 826\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.yt_description,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 827\n    },\n    __self: this\n  }, \"Replace cell partially with a provided pattern\"), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 830\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    className: classes.yt_h2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 831\n    },\n    __self: this\n  }, \"Pros:\"), React.createElement(Typography, {\n    className: classes.yt_h3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 834\n    },\n    __self: this\n  }, \"- Part of cell is still available. Grouping by content often possible.\"), React.createElement(Typography, {\n    className: classes.yt_h2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 837\n    },\n    __self: this\n  }, \"Cons:\"), React.createElement(Typography, {\n    className: classes.yt_h3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 840\n    },\n    __self: this\n  }, \"- Too small masks will leak data \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 841\n    },\n    __self: this\n  }), \"- Input with variable size is either fully masked or not masked enough.\"))))), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 848\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    onClick: handleClickChipCloseMasking,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 849\n    },\n    __self: this\n  }, \"Close\"))), React.createElement(Dialog, {\n    \"aria-labelledby\": \"form-dialog-title\",\n    className: classes.DialogClass,\n    onClose: handleClickChipCloseHashing,\n    open: OpenYoutubeChipHashing,\n    styles: {\n      background: '#D3D3D3'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 857\n    },\n    __self: this\n  }, React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 864\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: classes.card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 865\n    },\n    __self: this\n  }, React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 866\n    },\n    __self: this\n  }, React.createElement(\"iframe\", {\n    src: \"https://www.youtube.com/embed/-DeMO7nKr3A\",\n    width: \"550px\",\n    height: \"315px\",\n    allowFullScreen: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 867\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 873\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.yt_description,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 874\n    },\n    __self: this\n  }, \"Maps an input to a fixed size output. The same input will always result in the same output. Even small changes in the input will result in significant changes in the output. The resulting hash can be described as a footprint of the original input.\"), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 880\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    className: classes.yt_h2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 881\n    },\n    __self: this\n  }, \"Pros:\"), React.createElement(Typography, {\n    className: classes.yt_h3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 884\n    },\n    __self: this\n  }, \"- Original values no longer visible \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 885\n    },\n    __self: this\n  }), \"- If same hash function is used, data can be matched with other anonymized documents (same input cell -> same output cell)\"), React.createElement(Typography, {\n    className: classes.yt_h2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 889\n    },\n    __self: this\n  }, \"Cons:\"), React.createElement(Typography, {\n    className: classes.yt_h3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 892\n    },\n    __self: this\n  }, \"- If input variance is low (e.g. numbers from 0 to 100) values can easily be brutforced and matched against the existing hashes. -> Data leak possible \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 895\n    },\n    __self: this\n  }), \"- Can increase cell size if input is small enough\"))))), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 902\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    onClick: handleClickChipCloseHashing,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 903\n    },\n    __self: this\n  }, \"Close\"))), React.createElement(Dialog, {\n    \"aria-labelledby\": \"form-dialog-title\",\n    className: classes.DialogClass,\n    onClose: handleClickChipCloseHashingWithSalt,\n    open: OpenYoutubeChipHashingWithSalt,\n    styles: {\n      background: '#D3D3D3'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 911\n    },\n    __self: this\n  }, React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 918\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: classes.card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 919\n    },\n    __self: this\n  }, React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 920\n    },\n    __self: this\n  }, React.createElement(\"iframe\", {\n    src: \"https://www.youtube.com/embed/o1YSaxvCw8g\",\n    width: \"550px\",\n    height: \"315px\",\n    allowFullScreen: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 921\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 927\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.yt_description,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 928\n    },\n    __self: this\n  }, \"Same as hashing, but a random salt will be feed to the hashing function in addition to the cell content. Salt is not saved.\"), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 933\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    className: classes.yt_h2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 934\n    },\n    __self: this\n  }, \"Pros:\"), React.createElement(Typography, {\n    className: classes.yt_h3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 937\n    },\n    __self: this\n  }, \"- Original values no longer visible \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 938\n    },\n    __self: this\n  }), \"- Makes brutforcing values very hard if not impossible\"), React.createElement(Typography, {\n    className: classes.yt_h2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 941\n    },\n    __self: this\n  }, \"Cons:\"), React.createElement(Typography, {\n    className: classes.yt_h3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 944\n    },\n    __self: this\n  }, \"- Hashes can no longer be matched against other documents or other columns. Only in the same column the same input will produce the same output \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 946\n    },\n    __self: this\n  }), \"- Can increase cell size if input is small enough\"))))), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 953\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    onClick: handleClickChipCloseHashingWithSalt,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 954\n    },\n    __self: this\n  }, \"Close\"))), React.createElement(Dialog, {\n    \"aria-labelledby\": \"form-dialog-title\",\n    className: classes.DialogClass,\n    onClose: handleClickChipCloseRandom,\n    open: OpenYoutubeChipRandom,\n    styles: {\n      background: '#D3D3D3'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 962\n    },\n    __self: this\n  }, React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 969\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: classes.card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 970\n    },\n    __self: this\n  }, React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 971\n    },\n    __self: this\n  }, React.createElement(\"iframe\", {\n    src: \"https://www.youtube.com/embed/W2070jpbpSk\",\n    width: \"550px\",\n    height: \"315px\",\n    allowFullScreen: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 972\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 978\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.yt_description,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 979\n    },\n    __self: this\n  }, \"Sorting the cells randomly in a column.\"), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 982\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    className: classes.yt_h2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 983\n    },\n    __self: this\n  }, \"Pros:\"), React.createElement(Typography, {\n    className: classes.yt_h3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 986\n    },\n    __self: this\n  }, \"- Data looses its association with other values in the original row \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 987\n    },\n    __self: this\n  }), \"- Data distribution analysis still possible\"), React.createElement(Typography, {\n    className: classes.yt_h2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 990\n    },\n    __self: this\n  }, \"Cons:\"), React.createElement(Typography, {\n    className: classes.yt_h3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 993\n    },\n    __self: this\n  }, \"- Original values are still present\"))))), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1000\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    onClick: handleClickChipCloseRandom,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1001\n    },\n    __self: this\n  }, \"Close\"))), React.createElement(Dialog, {\n    \"aria-labelledby\": \"form-dialog-title\",\n    className: classes.DialogClass,\n    onClose: handleClickChipCloseGeneralization,\n    open: OpenYoutubeChipGeneralization,\n    styles: {\n      background: '#D3D3D3'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1009\n    },\n    __self: this\n  }, React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1016\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: classes.card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1017\n    },\n    __self: this\n  }, React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1018\n    },\n    __self: this\n  }, React.createElement(\"iframe\", {\n    src: \"https://www.youtube.com/embed/YaOdtuBwYB4\",\n    width: \"550px\",\n    height: \"315px\",\n    allowFullScreen: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1019\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1025\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.yt_description,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1026\n    },\n    __self: this\n  }, \"In generalization data can be grouped up into buckets. \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1027\n    },\n    __self: this\n  }), \"Only works on numbers.\"), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1030\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    className: classes.yt_h2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1031\n    },\n    __self: this\n  }, \"Pros:\"), React.createElement(Typography, {\n    className: classes.yt_h3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1034\n    },\n    __self: this\n  }, \"- The general direction of the data implications remain intact\"), React.createElement(Typography, {\n    className: classes.yt_h2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1037\n    },\n    __self: this\n  }, \"Cons:\"), React.createElement(Typography, {\n    className: classes.yt_h3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1040\n    },\n    __self: this\n  }, \"- Accurate values are no longer available\"))))), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1047\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    onClick: handleClickChipCloseGeneralization,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1048\n    },\n    __self: this\n  }, \"Close\"))), React.createElement(Dialog, {\n    \"aria-labelledby\": \"form-dialog-title\",\n    className: classes.DialogClass,\n    onClose: handleClickChipCloseDelete,\n    open: OpenYoutubeChipDelete,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1057\n    },\n    __self: this\n  }, React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1063\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: classes.card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1064\n    },\n    __self: this\n  }, React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1065\n    },\n    __self: this\n  }, React.createElement(\"iframe\", {\n    src: \"https://www.youtube.com/embed/WQAbRZKLJ4A\",\n    width: \"550px\",\n    height: \"315px\",\n    allowFullScreen: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1066\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1072\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.yt_description,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1073\n    },\n    __self: this\n  }, \"Remove the column from the dataset completely.\"), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1076\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    className: classes.yt_h2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1077\n    },\n    __self: this\n  }, \"Pros:\"), React.createElement(Typography, {\n    className: classes.yt_h3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1080\n    },\n    __self: this\n  }, \"- Most secure anonymization technique\"), React.createElement(Typography, {\n    className: classes.yt_h2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1083\n    },\n    __self: this\n  }, \"Cons:\"), React.createElement(Typography, {\n    className: classes.yt_h3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1086\n    },\n    __self: this\n  }, \"- No information\"))))), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1093\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    onClick: handleClickChipCloseDelete,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1094\n    },\n    __self: this\n  }, \"Close\")))), React.createElement(\"span\", {\n    className: classes.spacer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1103\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1104\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1105\n    },\n    __self: this\n  }, React.createElement(Overlay, {\n    active: SaveButtonLoader,\n    text: '',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1106\n    },\n    __self: this\n  }), React.createElement(Button, {\n    color: \"primary\",\n    disabled: Object.keys(anonymizationAssignmentsObject).length === 0,\n    onClick: () => handleClickOpenConfirmation(),\n    variant: \"contained\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1110\n    },\n    __self: this\n  }, \"Apply Anonymization\"), React.createElement(Dialog, {\n    \"aria-labelledby\": \"form-dialog-title\",\n    onClose: handleClickOpenConfirmation,\n    open: OpenConfirmation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1118\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1123\n    },\n    __self: this\n  }, \"Do you want to continue with the following anonymization techniques\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1125\n    },\n    __self: this\n  }, React.createElement(List, {\n    \"aria-label\": \"mailbox folders\",\n    className: classes.root,\n    component: \"nav\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1126\n    },\n    __self: this\n  }, printStatement.map((statement, index) => React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1132\n    },\n    __self: this\n  }, React.createElement(ListItem, {\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1133\n    },\n    __self: this\n  }, React.createElement(ListItemText, {\n    key: statement + '-' + index,\n    primary: statement,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1134\n    },\n    __self: this\n  })), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1139\n    },\n    __self: this\n  }))))), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1144\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    onClick: ApplyAnonymization,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1145\n    },\n    __self: this\n  }, \"Apply Now\"), React.createElement(Button, {\n    color: \"primary\",\n    onClick: handleCloseConfirmation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1151\n    },\n    __self: this\n  }, \"Cancel\"))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1160\n    },\n    __self: this\n  }), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1161\n    },\n    __self: this\n  }), React.createElement(Button, {\n    color: \"primary\",\n    disabled: !(fileNameFormState.isValid && (Object.keys(anonymizationAssignmentsObject).length === 0 || SaveButtonDisable)),\n    fullWidth: true,\n    onClick: () => documentId === 0 || !documentId ? saveDataset() : updateDataset(),\n    variant: \"contained\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1163\n    },\n    __self: this\n  }, documentId === 0 || !documentId ? 'Save Dataset' : 'Update Dataset')))), React.createElement(\"span\", {\n    className: classes.spacer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1175\n    },\n    __self: this\n  }), React.createElement(Snackbar, {\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'center'\n    },\n    autoHideDuration: 4000,\n    onClose: () => handleCloseSnackBar('success'),\n    open: openSuccess,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1176\n    },\n    __self: this\n  }, React.createElement(SnackBarWrapper, {\n    message: \"The dataset is saved!\",\n    onClose: () => handleCloseSnackBar('success'),\n    variant: \"success\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1186\n    },\n    __self: this\n  })), React.createElement(Snackbar, {\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'center'\n    },\n    autoHideDuration: 2000,\n    onClose: () => handleCloseSnackBar('error'),\n    open: openError,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1193\n    },\n    __self: this\n  }, React.createElement(SnackBarWrapper, {\n    message: \"Something went wrong!\",\n    onClose: () => handleCloseSnackBar('error'),\n    variant: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1205\n    },\n    __self: this\n  })), React.createElement(Snackbar, {\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'center'\n    },\n    autoHideDuration: 2000,\n    onClose: () => handleCloseSnackBar('error'),\n    open: openError,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1212\n    },\n    __self: this\n  }, React.createElement(SnackBarWrapper, {\n    message: \"Document title already exists!\",\n    onClose: () => handleCloseSnackBar('error'),\n    variant: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1221\n    },\n    __self: this\n  })), React.createElement(Snackbar, {\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'center'\n    },\n    autoHideDuration: 2000,\n    onClose: () => handleCloseSnackBar('InputError'),\n    open: openErrorIncomInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1227\n    },\n    __self: this\n  }, React.createElement(SnackBarWrapper, {\n    message: \"Please fill the all inputs for selected anonymization type\",\n    onClose: () => handleCloseSnackBar('InputError'),\n    variant: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1236\n    },\n    __self: this\n  })), React.createElement(Snackbar, {\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'center'\n    },\n    autoHideDuration: 2000,\n    onClose: () => handleCloseSnackBar('errorSpecial'),\n    open: openErrorSpecial,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1243\n    },\n    __self: this\n  }, React.createElement(SnackBarWrapper, {\n    message: \"Filename contains special characters\",\n    onClose: () => handleCloseSnackBar('errorSpecial'),\n    variant: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1252\n    },\n    __self: this\n  })), React.createElement(Snackbar, {\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'center'\n    },\n    autoHideDuration: 2000,\n    onClose: () => handleCloseSnackBar('errorEmptyString'),\n    open: openErrorEmptyString,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1258\n    },\n    __self: this\n  }, React.createElement(SnackBarWrapper, {\n    message: \"Filename is empty\",\n    onClose: () => handleCloseSnackBar('errorEmptyString'),\n    variant: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1267\n    },\n    __self: this\n  })), React.createElement(Snackbar, {\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'center'\n    },\n    autoHideDuration: 2000,\n    onClose: () => handleCloseSnackBar('MaskingRangeError'),\n    open: openMaskRangeError,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1273\n    },\n    __self: this\n  }, React.createElement(SnackBarWrapper, {\n    message: \"Masking Range should be a positive whole number\",\n    onClose: () => handleCloseSnackBar('MaskingRangeError'),\n    variant: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1282\n    },\n    __self: this\n  })), React.createElement(Snackbar, {\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'center'\n    },\n    autoHideDuration: 2000,\n    onClose: () => handleCloseSnackBar('GenStepError'),\n    open: openGenStepError,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1288\n    },\n    __self: this\n  }, React.createElement(SnackBarWrapper, {\n    message: \"Step Size should be greater than 0\",\n    onClose: () => handleCloseSnackBar('GenStepError'),\n    variant: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1297\n    },\n    __self: this\n  })), React.createElement(Snackbar, {\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'center'\n    },\n    autoHideDuration: 2000,\n    onClose: () => handleCloseSnackBar('InputError'),\n    open: openErrorIncomInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1303\n    },\n    __self: this\n  }, React.createElement(SnackBarWrapper, {\n    message: \"Please fill the all inputs for selected anonymization type\",\n    onClose: () => handleCloseSnackBar('InputError'),\n    variant: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1312\n    },\n    __self: this\n  })), React.createElement(Snackbar, {\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'center'\n    },\n    autoHideDuration: 2000,\n    onClose: () => handleCloseSnackBar('MaskingDecimalError'),\n    open: openMaskDecimalError,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1318\n    },\n    __self: this\n  }, React.createElement(SnackBarWrapper, {\n    message: \"Masking Range should be a whole number only\",\n    onClose: () => handleCloseSnackBar('MaskingDecimalError'),\n    variant: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1327\n    },\n    __self: this\n  })), React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1335\n    },\n    __self: this\n  }, React.createElement(TextField //className={classes.TheInput}\n  // labelFontSize={40}\n  , {\n    error: hasError('fileName'),\n    fontSize: 40,\n    helperText: hasError('fileName') ? fileNameFormState.error.fileName[0] : null,\n    label: \"FileName\",\n    name: \"fileName\",\n    onChange: changeFileName,\n    placeholder: \"Enter FileName\",\n    value: fileNameFormState.value.fileName || '',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1337\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    className: classes.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1351\n    },\n    __self: this\n  }, React.createElement(PerfectScrollbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1352\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.inner,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1353\n    },\n    __self: this\n  }, React.createElement(Table, {\n    className: classes.table,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1354\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    className: classes.tableHead,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1355\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    className: classes.tableRow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1357\n    },\n    __self: this\n  }, document.data.map(column => React.createElement(TableCell, {\n    className: classes.tableCell_header,\n    key: column.orderPosition,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1359\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1363\n    },\n    __self: this\n  }, React.createElement(Button, {\n    \"aria-controls\": \"simple-menu\",\n    \"aria-haspopup\": \"true\",\n    className: classes.button,\n    onClick: () => handleClickOpen(column.orderPosition),\n    style: anonymizationAssignmentsObject[column.orderPosition] ? anonymizationAssignmentsObject[column.orderPosition].color : Default,\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1364\n    },\n    __self: this\n  }, column.title, React.createElement(ArrowDropDownIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1373\n    },\n    __self: this\n  }))))))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1382\n    },\n    __self: this\n  }, Array.from(Array(10).keys()).map(index => React.createElement(TableRow, {\n    className: classes.tableRow,\n    key: index // selected={selectedUsers.indexOf(user.id) !== -1}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1384\n    },\n    __self: this\n  }, document.data.map(column => React.createElement(TableCell, {\n    className: classes.tableCell,\n    key: column.orderPosition,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1390\n    },\n    __self: this\n  }, column.data[index])))))), React.createElement(Dialog, {\n    \"aria-labelledby\": \"form-dialog-title\",\n    onClose: handleClose,\n    open: open,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1401\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1406\n    },\n    __self: this\n  }, \"Anonymization\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1407\n    },\n    __self: this\n  }, React.createElement(DialogContentText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1408\n    },\n    __self: this\n  }, \"Select the Anonymization type from the following:\"), React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1411\n    },\n    __self: this\n  }, React.createElement(Radio, {\n    checked: selectedValue === 'None',\n    inputProps: {\n      'aria-label': 'None'\n    },\n    name: \"radio-button-demo\",\n    onChange: handleRadioChange,\n    value: \"None\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1412\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1419\n    },\n    __self: this\n  }, \"None\"), React.createElement(\"span\", {\n    className: classes.spacer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1420\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1423\n    },\n    __self: this\n  }, React.createElement(Radio, {\n    checked: selectedValue === 'Masking',\n    inputProps: {\n      'aria-label': 'Masking'\n    },\n    name: \"radio-button-demo\",\n    onChange: handleRadioChange,\n    value: \"Masking\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1425\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1432\n    },\n    __self: this\n  }, \"Masking\")), selectedValue === 'Masking' && React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1435\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1438\n    },\n    __self: this\n  }, \"Start\"), React.createElement(Radio, {\n    checked: selectedValue_Start === 'Left',\n    inputProps: {\n      'aria-label': 'Left'\n    },\n    name: \"radio-button-demo\",\n    onChange: handleRadioChange_Start,\n    value: \"Left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1439\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1446\n    },\n    __self: this\n  }, \"Left\"), React.createElement(Radio, {\n    checked: selectedValue_Start === 'Right',\n    inputProps: {\n      'aria-label': 'Right'\n    },\n    name: \"radio-button-demo\",\n    onChange: handleRadioChange_Start,\n    value: \"Right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1447\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1454\n    },\n    __self: this\n  }, \"Right\"), React.createElement(TextField, {\n    autoFocus: true,\n    fullWidth: true,\n    id: \"name\",\n    InputProps: {\n      readOnly: false\n    },\n    label: \"Pattern\",\n    margin: \"dense\",\n    onChange: handleRadioChangeMaskPat,\n    value: selectedValueMaskPat,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1455\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    fullWidth: true,\n    InputProps: {\n      inputProps: {\n        min: 1,\n        max: 10\n      }\n    },\n    label: \"Range\",\n    margin: \"dense\",\n    onChange: handleRadioChangeMaskRange,\n    type: \"Number\",\n    value: selectedValueMaskRange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1467\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1482\n    },\n    __self: this\n  }, React.createElement(Radio, {\n    checked: selectedValue === 'Hashing',\n    inputProps: {\n      'aria-label': 'Hashing'\n    },\n    name: \"radio-button-demo\",\n    onChange: handleRadioChange,\n    value: \"Hashing\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1483\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1490\n    },\n    __self: this\n  }, \"Hashing\"), React.createElement(\"span\", {\n    className: classes.spacer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1491\n    },\n    __self: this\n  })), selectedValue === 'Hashing' && React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1494\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1495\n    },\n    __self: this\n  }, \"Cipher\"), React.createElement(Radio, {\n    checked: selectedValue_Cipher === 'SHA1',\n    inputProps: {\n      'aria-label': 'SHA1'\n    },\n    name: \"radio-button-demo\",\n    onChange: handleRadioChange_Cipher,\n    value: \"SHA1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1496\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1503\n    },\n    __self: this\n  }, \"SHA1\"), React.createElement(Radio, {\n    checked: selectedValue_Cipher === 'SHA256',\n    inputProps: {\n      'aria-label': 'SHA256'\n    },\n    name: \"radio-button-demo\",\n    onChange: handleRadioChange_Cipher,\n    value: \"SHA256\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1504\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1511\n    },\n    __self: this\n  }, \"SHA256\")), React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1514\n    },\n    __self: this\n  }, React.createElement(Radio, {\n    checked: selectedValue === 'HashingWithSalt',\n    inputProps: {\n      'aria-label': 'HashingWithSalt'\n    },\n    name: \"radio-button-demo\",\n    onChange: handleRadioChange,\n    value: \"HashingWithSalt\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1515\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1522\n    },\n    __self: this\n  }, \"Hashing With Salt\"), React.createElement(\"span\", {\n    className: classes.spacer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1523\n    },\n    __self: this\n  })), selectedValue === 'HashingWithSalt' && React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1526\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1527\n    },\n    __self: this\n  }, \"Cipher\"), React.createElement(Radio, {\n    checked: selectedValue_Cipher === 'SHA1',\n    inputProps: {\n      'aria-label': 'SHA1'\n    },\n    name: \"radio-button-demo\",\n    onChange: handleRadioChange_Cipher,\n    value: \"SHA1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1528\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1535\n    },\n    __self: this\n  }, \"SHA1\"), React.createElement(Radio, {\n    checked: selectedValue_Cipher === 'SHA256',\n    inputProps: {\n      'aria-label': 'SHA256'\n    },\n    name: \"radio-button-demo\",\n    onChange: handleRadioChange_Cipher,\n    value: \"SHA256\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1536\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1543\n    },\n    __self: this\n  }, \"SHA256\")), React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1547\n    },\n    __self: this\n  }, React.createElement(Radio, {\n    checked: selectedValue === 'Random Sort',\n    inputProps: {\n      'aria-label': 'Random Sort'\n    },\n    name: \"radio-button-demo\",\n    onChange: handleRadioChange,\n    value: \"Random Sort\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1548\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1555\n    },\n    __self: this\n  }, \"Random Sort\"), React.createElement(\"span\", {\n    className: classes.spacer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1556\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1559\n    },\n    __self: this\n  }, React.createElement(Radio, {\n    checked: selectedValue === 'Generalization',\n    inputProps: {\n      'aria-label': 'Generalization'\n    },\n    name: \"radio-button-demo\",\n    onChange: handleRadioChange,\n    value: \"Generalization\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1560\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1567\n    },\n    __self: this\n  }, \"Generalization\"), React.createElement(\"span\", {\n    className: classes.spacer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1568\n    },\n    __self: this\n  })), selectedValue === 'Generalization' && React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1571\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    autoFocus: true,\n    fullWidth: true,\n    id: \"name\",\n    InputProps: {\n      readOnly: false\n    },\n    label: \"Step Size :\",\n    margin: \"dense\",\n    onChange: handleRadioChangeGenStep,\n    type: \"Number\",\n    value: selectedValueGenStep,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1572\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1589\n    },\n    __self: this\n  }, React.createElement(Radio, {\n    checked: selectedValue === 'DeletetheColumn',\n    inputProps: {\n      'aria-label': 'DeletetheColumn'\n    },\n    name: \"radio-button-demo\",\n    onChange: handleRadioChange,\n    value: \"DeletetheColumn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1590\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1597\n    },\n    __self: this\n  }, \"Delete the Column\"), React.createElement(\"span\", {\n    className: classes.spacer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1598\n    },\n    __self: this\n  }))), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1603\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    onClick: saveAnnonymizationType,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1604\n    },\n    __self: this\n  }, \"Save Anonymization Type\"), React.createElement(Button, {\n    color: \"primary\",\n    onClick: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1610\n    },\n    __self: this\n  }, \"Cancel\")))))), React.createElement(CardActions, {\n    className: classes.actions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1621\n    },\n    __self: this\n  })));\n};\n\nEditorTable.propTypes = {\n  className: PropTypes.string\n};\nexport default EditorTable;","map":{"version":3,"sources":["C:/Users/ayesh/Desktop/TUM/semester 3/Final Presentation/dedas-frontend/src/views/Editor/components/EditorTable/EditorTable.js"],"names":["React","useEffect","useState","clsx","PropTypes","PerfectScrollbar","useHistory","useLocation","AnonymizationAssignment","AnonymizationWorkerService","makeStyles","Button","Card","CardActions","CardContent","Chip","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Grid","Radio","Snackbar","Table","TableBody","TableCell","TableHead","TableRow","TextField","Typography","ArrowDropDownIcon","DocumentService","CardBody","CardSubtitle","CardText","CardTitle","SnackBarWrapper","List","ListItem","Divider","ListItemText","AnonymizationFactoryService","validate","DexieService","Overlay","anonymizationWorker","printStatement","schema","fileName","presence","allowEmpty","message","format","pattern","flags","useStyles","theme","root","content","padding","title","fontSize","inner","minWidth","fixStyle","display","buttonNormal","backgroundColor","buttonSelected","nameContainer","alignItems","avatar","marginRight","spacing","actions","justifyContent","tableRow","border","tableCell","borderRight","borderLeft","borderBottom","tableCell_header","tableHead","table","borderCollapse","row","height","marginTop","marginBottom","spacer","flexGrow","button","MaskingClass","color","HashingClass","HashingWithSaltClass","RandomClass","GeneralizationClass","DeleteClass","DialogClass","textAlign","left","TheInput","labelFontSize","card","top_padding","maxWidth","yt_description","lineHeight","yt_h2","yt_h3","fontsize","variant","component","Default","MaskingStyle","HashingStyle","HashingWithSaltStyle","RandomStyle","GeneralizationStyle","DeleteStyle","EditorTable","props","className","rest","location","history","open","setOpen","OpenConfirmation","setOpenConfirmation","OpenYoutubeChipMasking","setOpenYoutubeChipMasking","OpenYoutubeChipHashing","setOpenYoutubeChipHashing","OpenYoutubeChipHashingWithSalt","setOpenYoutubeChipHashingWithSalt","OpenYoutubeChipRandom","setOpenYoutubeChipRandom","OpenYoutubeChipGeneralization","setOpenYoutubeChipGeneralization","OpenYoutubeChipDelete","setOpenYoutubeChipDelete","SaveButtonDisable","setSaveButtonDisable","SaveButtonLoader","setSaveButtonLoader","classes","openSuccess","setOpenSuccess","openError","setOpenError","openErrorSpecial","setOpenErrorSpecial","openMaskRangeError","setMaskRangeError","openGenStepError","setGenStepError","openMaskDecimalError","setMaskDecimalError","openErrorEmptyString","setErrorEmptyString","openErrorIncomInput","setErrorIncomInput","selectedValueGenStep","setSelectedValueGenStep","selectedValueMaskPat","setSelectedValueMaskPat","selectedValueMaskRange","setSelectedValueMaskRange","selectedValue","setSelectedValue","selectedValue_Start","setSelectedValue_Start","selectedValue_Cipher","setSelectedValue_Cipher","workingColumn","setWorkingColumn","isValid","value","touched","error","fileNameFormState","setFileNameFormState","anonymizationAssignmentsObject","documentId","setDocumentId","id","originalFilename","data","document","setDocument","handleRadioChangeGenStep","event","parsedValue","Number","parseInt","target","isNaN","handleClickSnackBar","handleRadioChangeMaskPat","handleRadioChangeMaskRange","toString","handleRadioChange","handleRadioChange_Cipher","handleRadioChange_Start","handleClickOpen","position","console","log","anonymization","options","start","range","Cipher","stepSize","handleClickChipMasking","handleClickChipCloseMasking","handleClickChipHashing","handleClickChipCloseHashing","handleClickChipHashingWithSalt","handleClickChipCloseHashingWithSalt","handleClickChipRandom","handleClickChipCloseRandom","handleClickChipGeneralization","handleClickChipCloseGeneralization","handleClickChipDelete","handleClickChipCloseDelete","handleClose","handleClickOpenConfirmation","length","Object","keys","forEach","push","getServiceForName","type","getDescription","handleCloseConfirmation","myFileNameFormState","setDocumentData","trimmedFileName","slice","state","pathname","dexieDocumentId","getDocumentById","then","dexieDocument","payload","catch","e","columnsData","ApplyAnonymization","tempArray","assignmentProperties","anonymizationAssignment","process","dexieObject","addDocument","dexieId","saveAnnonymizationType","salt","handleCloseSnackBar","changeFileName","persist","hasError","field","isFileNameExist","documents","myDocumentId","filter","doc","updateDataset","getDocument","resp","json","docs","updateDocument","saveDataset","test","createDocument","myData","JSON","stringify","myDocument","setTimeout","flushDocumentDb","background","map","statement","index","vertical","horizontal","column","orderPosition","Array","from","readOnly","inputProps","min","max","propTypes","string"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport AnonymizationAssignment from 'service/Anonymization/AnonymizationAssignment';\r\nimport AnonymizationWorkerService from 'service/Anonymization/AnonymizationWorkerService';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    Chip,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle,\r\n    Grid,\r\n    Radio,\r\n    Snackbar,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TableRow,\r\n    TextField,\r\n    Typography,\r\n\r\n} from '@material-ui/core';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport { DocumentService } from 'service';\r\nimport { CardBody, CardSubtitle, CardText, CardTitle } from 'reactstrap';\r\n\r\nimport { SnackBarWrapper } from 'components';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nimport AnonymizationFactoryService from '../../../../service/Anonymization/AnonymizationFactoryService';\r\nimport validate from 'validate.js';\r\nimport DexieService from '../../../../service/DexieService';\r\nimport Overlay from '../../../Overlay';\r\n\r\nconst anonymizationWorker = new AnonymizationWorkerService();\r\nconst printStatement = [];\r\n\r\nconst schema = {\r\n    fileName: {\r\n        presence: { allowEmpty: false, message: 'is required' },\r\n        format: {\r\n            pattern: '^[a-zA-Z0-9-.@_]*$',\r\n            flags: 'i',\r\n            message: 'can only contain English Alphabets, Numbers from 0-9 and special characters .@-_'\r\n        }\r\n    }\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {},\r\n    content: {\r\n        padding: 0\r\n    },\r\n    title: {\r\n        //   fontWeight: 700,\r\n        fontSize: 33\r\n    },\r\n    inner: {\r\n        minWidth: 1050\r\n    },\r\n    fixStyle: {\r\n        display: 'flex'\r\n    },\r\n    buttonNormal: {\r\n        backgroundColor: 'white'\r\n    },\r\n    buttonSelected: {\r\n        backgroundColor: 'Green'\r\n    },\r\n    nameContainer: {\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    },\r\n    avatar: {\r\n        marginRight: theme.spacing(2)\r\n    },\r\n    actions: {\r\n        justifyContent: 'flex-end'\r\n    },\r\n    tableRow: {\r\n        border: 'none'\r\n    },\r\n    tableCell: {\r\n        borderRight: 'solid 1px lightgrey',\r\n        borderLeft: 'solid 1px lightgrey',\r\n        borderBottom: 'none'\r\n    },\r\n    tableCell_header: {\r\n        borderRight: 'solid 1px lightgrey',\r\n        borderLeft: 'solid 1px lightgrey',\r\n        borderBottom: 'none'\r\n\r\n    },\r\n    tableHead: {\r\n        backgroundColor: '#f0f0f0'\r\n    },\r\n    table: {\r\n        borderCollapse: 'collapse'\r\n    },\r\n    row: {\r\n        height: '42px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(3)\r\n    },\r\n    spacer: {\r\n        flexGrow: 1\r\n    },\r\n    button: {\r\n        backgroundColor: 'var(--backgroundColor)'\r\n    },\r\n    MaskingClass: {\r\n        color: 'black',\r\n        backgroundColor: '#f4e9af',\r\n        marginRight: theme.spacing(2),\r\n        marginTop: theme.spacing(1)\r\n    },\r\n    HashingClass: {\r\n        color: 'black',\r\n        backgroundColor: '#D0F3AD',\r\n        marginRight: theme.spacing(2),\r\n        marginTop: theme.spacing(1)\r\n    },\r\n    HashingWithSaltClass: {\r\n        color: 'black',\r\n        backgroundColor: '#CCEDF4',\r\n        marginRight: theme.spacing(2),\r\n        marginTop: theme.spacing(1)\r\n    },\r\n    RandomClass: {\r\n        color: 'black',\r\n        backgroundColor: '#EC9C88',\r\n        marginRight: theme.spacing(2),\r\n        marginTop: theme.spacing(1)\r\n    },\r\n    GeneralizationClass: {\r\n        color: 'black',\r\n        backgroundColor: '#CAC7EE',\r\n        marginRight: theme.spacing(2),\r\n        marginTop: theme.spacing(1)\r\n    },\r\n    DeleteClass: {\r\n        color: 'black',\r\n        backgroundColor: '#E1C3D9',\r\n        marginRight: theme.spacing(2),\r\n        marginTop: theme.spacing(1)\r\n    },\r\n    DialogClass: {\r\n        color: 'red',\r\n        textAlign: 'center',\r\n        left: '50%'\r\n    },\r\n    TheInput: {\r\n        padding: 10,\r\n        fontSize: 12,\r\n        labelFontSize: 40\r\n    },\r\n    card: {\r\n        marginTop: theme.spacing(1),\r\n        top_padding: 10,\r\n        maxWidth: 550\r\n    },\r\n    yt_description: {\r\n        fontSize: 18,\r\n        color: 'textPrimary',\r\n        lineHeight: 2\r\n    },\r\n    yt_h2: {\r\n        fontSize: 18,\r\n        color: 'textPrimary',\r\n        lineHeight: 2\r\n    },\r\n    yt_h3: {\r\n        fontsize: 16,\r\n        variant: 'body1',\r\n        component: 'p',\r\n        lineHeight: 1.6\r\n    }\r\n}));\r\n\r\n\r\nconst Default = {\r\n    '--backgroundColor': 'white'\r\n};\r\nconst MaskingStyle = {\r\n    '--backgroundColor': '#f4e9af'\r\n};\r\nconst HashingStyle = {\r\n    '--backgroundColor': '#D0F3AD'\r\n};\r\nconst HashingWithSaltStyle = {\r\n    '--backgroundColor': '#CCEDF4'\r\n};\r\nconst RandomStyle = {\r\n    '--backgroundColor': '#EC9C88'\r\n};\r\nconst GeneralizationStyle = {\r\n    '--backgroundColor': '#CAC7EE'\r\n};\r\nconst DeleteStyle = {\r\n    '--backgroundColor': '#E1C3D9'\r\n};\r\n\r\nconst EditorTable = props => {\r\n\r\n    const { className, ...rest } = props;\r\n    let location = useLocation();\r\n    let history = useHistory();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [OpenConfirmation, setOpenConfirmation] = React.useState(false);\r\n    const [OpenYoutubeChipMasking, setOpenYoutubeChipMasking] = React.useState(false);\r\n    const [OpenYoutubeChipHashing, setOpenYoutubeChipHashing] = React.useState(false);\r\n    const [OpenYoutubeChipHashingWithSalt, setOpenYoutubeChipHashingWithSalt] = React.useState(false);\r\n    const [OpenYoutubeChipRandom, setOpenYoutubeChipRandom] = React.useState(false);\r\n    const [OpenYoutubeChipGeneralization, setOpenYoutubeChipGeneralization] = React.useState(false);\r\n    const [OpenYoutubeChipDelete, setOpenYoutubeChipDelete] = React.useState(false);\r\n    const [SaveButtonDisable, setSaveButtonDisable] = React.useState(false);\r\n    const [SaveButtonLoader, setSaveButtonLoader] = React.useState(false);\r\n    const classes = useStyles();\r\n\r\n    const [openSuccess, setOpenSuccess] = React.useState(false);\r\n    const [openError, setOpenError] = React.useState(false);\r\n    const [openErrorSpecial, setOpenErrorSpecial] = React.useState(false);\r\n    const [openMaskRangeError, setMaskRangeError] = React.useState(false);\r\n    const [openGenStepError, setGenStepError] = React.useState(false);\r\n    const [openMaskDecimalError, setMaskDecimalError] = React.useState(false);\r\n    const [openErrorEmptyString, setErrorEmptyString] = React.useState(false);\r\n    const [openErrorIncomInput, setErrorIncomInput] = React.useState(false);\r\n\r\n    const [selectedValueGenStep, setSelectedValueGenStep] = React.useState('');\r\n\r\n    const [selectedValueMaskPat, setSelectedValueMaskPat] = React.useState('');\r\n    const [selectedValueMaskRange, setSelectedValueMaskRange] = React.useState('');\r\n\r\n    const [selectedValue, setSelectedValue] = React.useState('');\r\n    const [selectedValue_Start, setSelectedValue_Start] = React.useState('');\r\n    const [selectedValue_Cipher, setSelectedValue_Cipher] = React.useState('');\r\n    const [workingColumn, setWorkingColumn] = React.useState(null);\r\n    const [fileNameFormState, setFileNameFormState] = useState({\r\n        isValid: true,\r\n        value: {},\r\n        touched: false,\r\n        error: {}\r\n    });\r\n\r\n    let [anonymizationAssignmentsObject] = React.useState({});\r\n\r\n    const [documentId, setDocumentId] = useState(0);\r\n    const [document, setDocument] = useState({\r\n        id: null,\r\n        title: '',\r\n        originalFilename: '',\r\n        data: []\r\n    });\r\n\r\n    const handleRadioChangeGenStep = (event) => {\r\n        const parsedValue = Number.parseInt(event.target.value);\r\n\r\n        if (Number.isNaN(parsedValue)) {\r\n            setSelectedValueGenStep(event.target.value);\r\n        } else if (event.target.value < 1) {\r\n            handleClickSnackBar('GenStepError');\r\n        } else {\r\n            setSelectedValueGenStep(event.target.value);\r\n        }\r\n\r\n    };\r\n    const handleRadioChangeMaskPat = (event) => {\r\n        setSelectedValueMaskPat(event.target.value);\r\n    };\r\n\r\n    const handleRadioChangeMaskRange = (event) => {\r\n        const parsedValue = Number.parseInt(event.target.value);\r\n\r\n        if (Number.isNaN(parsedValue)) {\r\n            setSelectedValueMaskRange(event.target.value);\r\n        } else if (parsedValue.toString() !== event.target.value) {\r\n            handleClickSnackBar('MaskingDecimalError');\r\n        } else if (event.target.value < 1) {\r\n            handleClickSnackBar('MaskingRangeError');\r\n        } else {\r\n            setSelectedValueMaskRange(event.target.value);\r\n        }\r\n    };\r\n\r\n    const handleRadioChange = (event) => {\r\n        setSelectedValue(event.target.value);\r\n    };\r\n\r\n    const handleRadioChange_Cipher = (event) => {\r\n        setSelectedValue_Cipher(event.target.value);\r\n    };\r\n    const handleRadioChange_Start = (event) => {\r\n        setSelectedValue_Start(event.target.value);\r\n    };\r\n\r\n\r\n    const handleClickOpen = (position) => {\r\n        console.log('position' + position);\r\n        setWorkingColumn(position);\r\n        if (anonymizationAssignmentsObject[position]) {\r\n            let anonymization = anonymizationAssignmentsObject[position];\r\n            setSelectedValue(anonymization.selectedValue);\r\n            if (anonymization.selectedValue === 'Masking') {\r\n                setSelectedValue_Start(anonymization.options.start);\r\n                setSelectedValueMaskPat(anonymization.options.pattern);\r\n                setSelectedValueMaskRange(anonymization.options.range);\r\n            } else if (anonymization.selectedValue === 'Hashing') {\r\n                setSelectedValue_Cipher(anonymization.options.Cipher);\r\n            } else if (anonymization.selectedValue === 'HashingWithSalt') {\r\n                setSelectedValue_Cipher(anonymization.options.Cipher);\r\n            } else if (anonymization.selectedValue === 'Random') {\r\n\r\n            } else if (anonymization.selectedValue === 'Generalization') {\r\n                setSelectedValueGenStep(anonymization.options.stepSize);\r\n            } else if (anonymization.selectedValue === 'DeletetheColumn') {\r\n            }\r\n        } else {\r\n            setSelectedValue('None');\r\n        }\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClickChipMasking = () => {\r\n        setOpenYoutubeChipMasking(true);\r\n    };\r\n\r\n    const handleClickChipCloseMasking = () => {\r\n        setOpenYoutubeChipMasking(false);\r\n    };\r\n\r\n\r\n    const handleClickChipHashing = () => {\r\n        setOpenYoutubeChipHashing(true);\r\n    };\r\n\r\n    const handleClickChipCloseHashing = () => {\r\n        setOpenYoutubeChipHashing(false);\r\n    };\r\n\r\n    const handleClickChipHashingWithSalt = () => {\r\n        setOpenYoutubeChipHashingWithSalt(true);\r\n    };\r\n\r\n    const handleClickChipCloseHashingWithSalt = () => {\r\n        setOpenYoutubeChipHashingWithSalt(false);\r\n    };\r\n\r\n    const handleClickChipRandom = () => {\r\n        setOpenYoutubeChipRandom(true);\r\n    };\r\n\r\n    const handleClickChipCloseRandom = () => {\r\n        setOpenYoutubeChipRandom(false);\r\n    };\r\n\r\n    const handleClickChipGeneralization = () => {\r\n        setOpenYoutubeChipGeneralization(true);\r\n    };\r\n\r\n    const handleClickChipCloseGeneralization = () => {\r\n        setOpenYoutubeChipGeneralization(false);\r\n    };\r\n\r\n    const handleClickChipDelete = () => {\r\n        setOpenYoutubeChipDelete(true);\r\n    };\r\n\r\n    const handleClickChipCloseDelete = () => {\r\n        setOpenYoutubeChipDelete(false);\r\n    };\r\n    const handleClose = () => {\r\n        setSelectedValueMaskPat('');\r\n        setSelectedValueMaskRange('');\r\n        setSelectedValueGenStep('');\r\n        setSelectedValue_Start('');\r\n        setOpen(false);\r\n    };\r\n    const handleClickOpenConfirmation = () => {\r\n\r\n        printStatement.length = 0;\r\n        Object.keys(anonymizationAssignmentsObject).forEach(position => {\r\n                printStatement.push(document.data[position].title + ' ----> ' +\r\n                    AnonymizationFactoryService.getServiceForName(anonymizationAssignmentsObject[position].type)\r\n                        .getDescription(anonymizationAssignmentsObject[position].options)\r\n                );\r\n            }\r\n        );\r\n        setOpenConfirmation(true);\r\n    };\r\n    const handleCloseConfirmation = () => {\r\n\r\n        setOpenConfirmation(false);\r\n    };\r\n    useEffect(() => {\r\n        console.log('refreshing');\r\n        const error = validate(fileNameFormState.value, schema);\r\n\r\n        setFileNameFormState(myFileNameFormState => ({\r\n            ...myFileNameFormState,\r\n            isValid: error ? false : true,\r\n            error: error || {}\r\n        }));\r\n    }, [fileNameFormState.value]);\r\n\r\n    const setDocumentData = (id, title, fileName, data) => {\r\n        let trimmedFileName = title ? title : fileName ? fileName.slice(0, -4) : '';\r\n        setFileNameFormState(myFileNameFormState => ({\r\n            ...myFileNameFormState,\r\n            value: { fileName: trimmedFileName }\r\n        }));\r\n\r\n        setDocumentId(id);\r\n        setDocument({\r\n            id: id,\r\n            title: trimmedFileName,\r\n            originalFilename: fileName,\r\n            // dexie arrays do not contain map function. Repackage\r\n            data: data\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        console.log('checking location state', location.state);\r\n        if (!location.state) {\r\n            history.push({\r\n                pathname: '/dashboard'\r\n            });\r\n        } else if (location.state.dexieDocumentId) {\r\n            DexieService.getDocumentById(location.state.dexieDocumentId)\r\n                .then(dexieDocument => dexieDocument.payload)\r\n                .then(payload => {\r\n                    setDocumentData(payload.id, payload.title, payload.fileName, payload.data);\r\n                })\r\n                .catch(e => {\r\n                    console.log(e);\r\n\r\n                    history.push({\r\n                        pathname: '/myDocuments'\r\n                    });\r\n                });\r\n        } else {\r\n            /*\r\n            Leaving this here in case setDocumentData does not work\r\n            let trimmedFileName = location.state.title ? location.state.title : location.state.fileName ? location.state.fileName.slice(0, -4) : '';\r\n            setFileNameFormState(fileNameFormState => ({\r\n                ...fileNameFormState,\r\n                value: { fileName: trimmedFileName }\r\n            }));\r\n            setDocumentId(location.state.id);\r\n            setDocument({\r\n                id: location.state.id,\r\n                title: trimmedFileName,\r\n                originalFilename: location.state.fileName,\r\n                data: location.state.columnsData\r\n            });*/\r\n\r\n            setDocumentData(location.state.id,\r\n                location.state.title,\r\n                location.state.fileName,\r\n                location.state.columnsData);\r\n        }\r\n    }, [location.state.dexieDocumentId]);\r\n\r\n    const ApplyAnonymization = () => {\r\n        const tempArray = [];\r\n        Object.keys(anonymizationAssignmentsObject).forEach(position => {\r\n            let assignmentProperties = anonymizationAssignmentsObject[position];\r\n            const anonymizationAssignment = new AnonymizationAssignment(assignmentProperties.type, assignmentProperties.options, parseInt(position));\r\n            tempArray.push(anonymizationAssignment);\r\n            delete anonymizationAssignmentsObject[position];\r\n        });\r\n        anonymizationWorker.process(tempArray, document);\r\n\r\n        const dexieObject = {\r\n            id: documentId,\r\n            data: document.data,\r\n            fileName: document.originalFilename\r\n        };\r\n\r\n        DexieService.addDocument(dexieObject)\r\n            .then(dexieId => history.push({\r\n                pathname: '/editor',\r\n                state: {\r\n                    dexieDocumentId: dexieId\r\n                }\r\n            }));\r\n\r\n\r\n        setOpenConfirmation(false);\r\n        setSaveButtonDisable(true);\r\n    };\r\n\r\n    const saveAnnonymizationType = () => {\r\n        let options = {};\r\n        let type = '';\r\n        let color;\r\n        if (selectedValue === 'None') {\r\n            if (anonymizationAssignmentsObject[workingColumn]) {\r\n                delete anonymizationAssignmentsObject[workingColumn];\r\n            }\r\n            handleClose();\r\n            return;\r\n        }\r\n        if (selectedValue === 'Masking') {\r\n            if (selectedValue_Start === '' || selectedValueMaskPat === '' || selectedValueMaskRange === '') {\r\n                handleClickSnackBar('InputError');\r\n            } else {\r\n                options = { start: selectedValue_Start, pattern: selectedValueMaskPat, range: selectedValueMaskRange };\r\n                type = 'mask';\r\n                color = MaskingStyle;\r\n                handleClose();\r\n                console.log(Object.keys(anonymizationAssignmentsObject).length);\r\n                setSaveButtonDisable(false);\r\n                anonymizationAssignmentsObject[workingColumn] = {\r\n                    options: options,\r\n                    type: type,\r\n                    selectedValue: selectedValue,\r\n                    color: color\r\n                };\r\n\r\n            }\r\n        } else if (selectedValue === 'Hashing') {\r\n            if (selectedValue_Cipher === '') {\r\n                handleClickSnackBar('InputError');\r\n            } else {\r\n                options = { Cipher: setSelectedValue_Cipher, salt: false };\r\n                type = 'hash';\r\n                color = HashingStyle;\r\n                handleClose();\r\n                console.log(Object.keys(anonymizationAssignmentsObject).length);\r\n                setSaveButtonDisable(false);\r\n                anonymizationAssignmentsObject[workingColumn] = {\r\n                    options: options,\r\n                    type: type,\r\n                    selectedValue: selectedValue,\r\n                    color: color\r\n                };\r\n            }\r\n\r\n        } else if (selectedValue === 'HashingWithSalt') {\r\n            if (selectedValue_Cipher === '') {\r\n                handleClickSnackBar('InputError');\r\n            } else {\r\n                options = { Cipher: setSelectedValue_Cipher, salt: true };\r\n                type = 'hash';\r\n                color = HashingWithSaltStyle;\r\n                handleClose();\r\n                console.log(Object.keys(anonymizationAssignmentsObject).length);\r\n                setSaveButtonDisable(false);\r\n                anonymizationAssignmentsObject[workingColumn] = {\r\n                    options: options,\r\n                    type: type,\r\n                    selectedValue: selectedValue,\r\n                    color: color\r\n                };\r\n            }\r\n\r\n        } else if (selectedValue === 'Random Sort') {\r\n            options = {};\r\n            type = 'random';\r\n            color = RandomStyle;\r\n            handleClose();\r\n            console.log(Object.keys(anonymizationAssignmentsObject).length);\r\n            setSaveButtonDisable(false);\r\n            anonymizationAssignmentsObject[workingColumn] = {\r\n                options: options,\r\n                type: type,\r\n                selectedValue: selectedValue,\r\n                color: color\r\n            };\r\n        } else if (selectedValue === 'Generalization') {\r\n            if (selectedValueGenStep === '') {\r\n                handleClickSnackBar('InputError');\r\n            } else {\r\n                options = { stepSize: selectedValueGenStep };\r\n                type = 'generalization';\r\n                color = GeneralizationStyle;\r\n                handleClose();\r\n                console.log(Object.keys(anonymizationAssignmentsObject).length);\r\n                setSaveButtonDisable(false);\r\n                anonymizationAssignmentsObject[workingColumn] = {\r\n                    options: options,\r\n                    type: type,\r\n                    selectedValue: selectedValue,\r\n                    color: color\r\n                };\r\n            }\r\n        } else if (selectedValue === 'DeletetheColumn') {\r\n            options = {};\r\n            type = 'delete';\r\n            color = DeleteStyle;\r\n            handleClose();\r\n            console.log(Object.keys(anonymizationAssignmentsObject).length);\r\n            setSaveButtonDisable(false);\r\n            anonymizationAssignmentsObject[workingColumn] = {\r\n                options: options,\r\n                type: type,\r\n                selectedValue: selectedValue,\r\n                color: color\r\n            };\r\n        }\r\n\r\n\r\n    };\r\n\r\n    const handleClickSnackBar = (type) => {\r\n        if (type === 'success') {\r\n            setOpenSuccess(true);\r\n        } else if (type === 'error') {\r\n            setOpenError(true);\r\n        } else if (type === 'errorSpecial') {\r\n            setOpenErrorSpecial(true);\r\n        } else if (type === 'errorEmptyString') {\r\n            setErrorEmptyString(true);\r\n        } else if (type === 'MaskingRangeError') {\r\n            setMaskRangeError(true);\r\n        } else if (type === 'MaskingDecimalError') {\r\n            setMaskDecimalError(true);\r\n        } else if (type === 'GenStepError') {\r\n            setGenStepError(true);\r\n        } else if (type === 'InputError') {\r\n            setErrorIncomInput(true);\r\n        }\r\n\r\n        setSaveButtonLoader(false);\r\n    };\r\n\r\n    const handleCloseSnackBar = (type) => {\r\n        if (type === 'success') {\r\n            setOpenSuccess(false);\r\n        } else if (type === 'error') {\r\n            setOpenError(false);\r\n        } else if (type === 'errorSpecial') {\r\n            setOpenErrorSpecial(false);\r\n        } else if (type === 'errorEmptyString') {\r\n            setErrorEmptyString(false);\r\n        } else if (type === 'MaskingRangeError') {\r\n            setMaskRangeError(false);\r\n        } else if (type === 'MaskingDecimalError') {\r\n            setMaskDecimalError(false);\r\n        } else if (type === 'GenStepError') {\r\n            setGenStepError(false);\r\n        } else if (type === 'InputError') {\r\n            setErrorIncomInput(false);\r\n        }\r\n\r\n    };\r\n    const changeFileName = (event) => {\r\n        event.persist();\r\n\r\n        setFileNameFormState(myFileNameFormState => ({\r\n            ...myFileNameFormState,\r\n            value: { fileName: event.target.value },\r\n            touched: true\r\n        }));\r\n        // FileName = event.target.value;\r\n    };\r\n\r\n    const hasError = field =>\r\n        !!fileNameFormState.error[field];\r\n\r\n    const isFileNameExist = (documents, fileName, myDocumentId) => {\r\n        return documents.filter(doc => doc.id !== myDocumentId && doc.title === fileName).length > 0;\r\n    };\r\n\r\n    const updateDataset = () => {\r\n        console.log('update clicked ', documentId);\r\n        document.title = fileNameFormState.value.fileName;\r\n        DocumentService.getDocument()\r\n            .then(resp => resp.json())\r\n            .then(data => {\r\n                if (!isFileNameExist(data.docs, document.title, document.id)) {\r\n                    DocumentService.updateDocument(document)\r\n                        .then(resp => resp.json())\r\n                        .then(() => {\r\n                            handleClickSnackBar('success');\r\n                            //console.log('updated ', location.state);\r\n                        }).catch((e) => {\r\n                        handleClickSnackBar('error');\r\n                        console.log('error');\r\n                        console.log(e);\r\n                    });\r\n                } else {\r\n                    handleClickSnackBar('error');\r\n                    console.log('error due to duplicate File name');\r\n                }\r\n\r\n            })\r\n            .catch((e) => {\r\n                console.log(e);\r\n            });\r\n    };\r\n\r\n    const saveDataset = () => {\r\n        document.title = fileNameFormState.value.fileName;\r\n\r\n        setSaveButtonLoader(true);\r\n\r\n        DocumentService.getDocument()\r\n            .then(resp => resp.json())\r\n            .then(data => {\r\n                // let documentsFound = 0;\r\n                // data.docs.forEach(item => {\r\n                //     if (document.title === item.title) {\r\n                //         documentsFound = documentsFound + 1;\r\n                //         //break;\r\n                //     }\r\n                    // });\r\n\r\n                    if (!isFileNameExist(data.docs, document.title)) {\r\n                        if (/^[a-zA-Z0-9-.@_]*$/.test(document.title) === false) {\r\n                            handleClickSnackBar('errorSpecial');\r\n                        } else {\r\n                            DocumentService.createDocument(document)\r\n                                .then(resp => resp.json())\r\n                                .then(myData => {\r\n                                    handleClickSnackBar('success');\r\n                                    console.log('Saved');\r\n                                    console.log(JSON.stringify(myData));\r\n                                    setDocumentId(myData.id);\r\n                                    setDocument(myDocument => ({\r\n                                        ...myDocument,\r\n                                        id: myData.id\r\n                                    }));\r\n                                    location.state.id = myData.id;\r\n\r\n                                    setTimeout(() => {\r\n                                        history.push({\r\n                                            pathname: '/myDocuments'\r\n                                        });\r\n\r\n                                        // On leaving editor, flush db\r\n                                        DexieService.flushDocumentDb();\r\n                                    }, 2500);\r\n                                }).catch((e) => {\r\n                                handleClickSnackBar('error');\r\n                                console.log('error');\r\n                                console.log(e);\r\n                            });\r\n                        }\r\n                    } else {\r\n                        handleClickSnackBar('error');\r\n                        console.log('error due to duplicate File name');\r\n                    }\r\n                }\r\n            ).catch((e) => {\r\n            console.log(e);\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div\r\n            {...rest}\r\n            className={clsx(classes.root, className)}\r\n\r\n        >\r\n            <div className={classes.fixStyle}>\r\n\r\n\r\n                <div>\r\n                    <Chip\r\n                        className={classes.MaskingClass}\r\n                        label=\"Masking \t🛈 \"\r\n                        onClick={handleClickChipMasking}\r\n                        variant=\"outlined\"\r\n                    />\r\n                    <Chip\r\n                        className={classes.HashingClass}\r\n                        label=\"Hashing\t🛈\"\r\n                        onClick={handleClickChipHashing}\r\n                        variant=\"outlined\"\r\n                    />\r\n                    <Chip\r\n                        className={classes.HashingWithSaltClass}\r\n                        label=\"Hashing with Salt\t🛈\"\r\n                        onClick={handleClickChipHashingWithSalt}\r\n                        variant=\"outlined\"\r\n                    />\r\n                    <Chip\r\n                        className={classes.RandomClass}\r\n                        label=\"Random Sort 🛈\"\r\n                        onClick={handleClickChipRandom}\r\n                        variant=\"outlined\"\r\n                    />\r\n                    <Chip\r\n                        className={classes.GeneralizationClass}\r\n                        label=\"Generalization\t🛈\"\r\n                        onClick={handleClickChipGeneralization}\r\n                        variant=\"outlined\"\r\n                    />\r\n                    <Chip\r\n                        className={classes.DeleteClass}\r\n                        label=\"Delete\t🛈\"\r\n                        onClick={handleClickChipDelete}\r\n                        variant=\"outlined\"\r\n                    />\r\n                    <Dialog\r\n                        aria-labelledby=\"form-dialog-title\"\r\n                        className={classes.DialogClass}\r\n                        onClose={handleClickChipCloseMasking}\r\n                        open={OpenYoutubeChipMasking}\r\n                    >\r\n                        <DialogContent>\r\n                            <Card className={classes.card}>\r\n                                <CardBody>\r\n                                    <iframe\r\n                                        src='https://www.youtube.com/embed/9RjN9J24v4U'\r\n                                        width='550px'\r\n                                        height='315px'\r\n                                        allowFullScreen\r\n                                    />\r\n                                    <CardContent>\r\n                                        <Typography className={classes.yt_description}>\r\n                                            Replace cell partially with a provided pattern\r\n                                        </Typography>\r\n                                        <Divider/>\r\n                                        <Typography className={classes.yt_h2}>\r\n                                            Pros:\r\n                                        </Typography>\r\n                                        <Typography className={classes.yt_h3}>\r\n                                            - Part of cell is still available. Grouping by content often possible.\r\n                                        </Typography>\r\n                                        <Typography className={classes.yt_h2}>\r\n                                            Cons:\r\n                                        </Typography>\r\n                                        <Typography className={classes.yt_h3}>\r\n                                            - Too small masks will leak data <br/>\r\n                                            - Input with variable size is either fully masked or not masked enough.\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button\r\n                                color=\"primary\"\r\n                                onClick={handleClickChipCloseMasking}\r\n                            >\r\n                                Close\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n                    <Dialog\r\n                        aria-labelledby=\"form-dialog-title\"\r\n                        className={classes.DialogClass}\r\n                        onClose={handleClickChipCloseHashing}\r\n                        open={OpenYoutubeChipHashing}\r\n                        styles={{ background: '#D3D3D3' }}\r\n                    >\r\n                        <DialogContent>\r\n                            <Card className={classes.card}>\r\n                                <CardBody>\r\n                                    <iframe\r\n                                        src='https://www.youtube.com/embed/-DeMO7nKr3A'\r\n                                        width='550px'\r\n                                        height='315px'\r\n                                        allowFullScreen\r\n                                    />\r\n                                    <CardContent>\r\n                                        <Typography className={classes.yt_description}>\r\n                                            Maps an input to a fixed size output. The same input will always result in\r\n                                            the same output. Even small changes in the input will result in significant\r\n                                            changes in the output.\r\n                                            The resulting hash can be described as a footprint of the original input.\r\n                                        </Typography>\r\n                                        <Divider/>\r\n                                        <Typography className={classes.yt_h2}>\r\n                                            Pros:\r\n                                        </Typography>\r\n                                        <Typography className={classes.yt_h3}>\r\n                                            - Original values no longer visible <br/>\r\n                                            - If same hash function is used, data can be matched with other anonymized\r\n                                            documents (same input cell -> same output cell)\r\n                                        </Typography>\r\n                                        <Typography className={classes.yt_h2}>\r\n                                            Cons:\r\n                                        </Typography>\r\n                                        <Typography className={classes.yt_h3}>\r\n                                            - If input variance is low (e.g. numbers from 0 to 100) values can easily be\r\n                                            brutforced and matched against the existing hashes. -> Data leak\r\n                                            possible <br/>\r\n                                            - Can increase cell size if input is small enough\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button\r\n                                color=\"primary\"\r\n                                onClick={handleClickChipCloseHashing}\r\n                            >\r\n                                Close\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n                    <Dialog\r\n                        aria-labelledby=\"form-dialog-title\"\r\n                        className={classes.DialogClass}\r\n                        onClose={handleClickChipCloseHashingWithSalt}\r\n                        open={OpenYoutubeChipHashingWithSalt}\r\n                        styles={{ background: '#D3D3D3' }}\r\n                    >\r\n                        <DialogContent>\r\n                            <Card className={classes.card}>\r\n                                <CardBody>\r\n                                    <iframe\r\n                                        src='https://www.youtube.com/embed/o1YSaxvCw8g'\r\n                                        width='550px'\r\n                                        height='315px'\r\n                                        allowFullScreen\r\n                                    />\r\n                                    <CardContent>\r\n                                        <Typography className={classes.yt_description}>\r\n                                            Same as hashing, but a random salt will be feed to the hashing function in\r\n                                            addition to the cell content.\r\n                                            Salt is not saved.\r\n                                        </Typography>\r\n                                        <Divider/>\r\n                                        <Typography className={classes.yt_h2}>\r\n                                            Pros:\r\n                                        </Typography>\r\n                                        <Typography className={classes.yt_h3}>\r\n                                            - Original values no longer visible <br/>\r\n                                            - Makes brutforcing values very hard if not impossible\r\n                                        </Typography>\r\n                                        <Typography className={classes.yt_h2}>\r\n                                            Cons:\r\n                                        </Typography>\r\n                                        <Typography className={classes.yt_h3}>\r\n                                            - Hashes can no longer be matched against other documents or other columns.\r\n                                            Only in the same column the same input will produce the same output <br/>\r\n                                            - Can increase cell size if input is small enough\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button\r\n                                color=\"primary\"\r\n                                onClick={handleClickChipCloseHashingWithSalt}\r\n                            >\r\n                                Close\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n                    <Dialog\r\n                        aria-labelledby=\"form-dialog-title\"\r\n                        className={classes.DialogClass}\r\n                        onClose={handleClickChipCloseRandom}\r\n                        open={OpenYoutubeChipRandom}\r\n                        styles={{ background: '#D3D3D3' }}\r\n                    >\r\n                        <DialogContent>\r\n                            <Card className={classes.card}>\r\n                                <CardBody>\r\n                                    <iframe\r\n                                        src='https://www.youtube.com/embed/W2070jpbpSk'\r\n                                        width='550px'\r\n                                        height='315px'\r\n                                        allowFullScreen\r\n                                    />\r\n                                    <CardContent>\r\n                                        <Typography className={classes.yt_description}>\r\n                                            Sorting the cells randomly in a column.\r\n                                        </Typography>\r\n                                        <Divider/>\r\n                                        <Typography className={classes.yt_h2}>\r\n                                            Pros:\r\n                                        </Typography>\r\n                                        <Typography className={classes.yt_h3}>\r\n                                            - Data looses its association with other values in the original row <br/>\r\n                                            - Data distribution analysis still possible\r\n                                        </Typography>\r\n                                        <Typography className={classes.yt_h2}>\r\n                                            Cons:\r\n                                        </Typography>\r\n                                        <Typography className={classes.yt_h3}>\r\n                                            - Original values are still present\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button\r\n                                color=\"primary\"\r\n                                onClick={handleClickChipCloseRandom}\r\n                            >\r\n                                Close\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n                    <Dialog\r\n                        aria-labelledby=\"form-dialog-title\"\r\n                        className={classes.DialogClass}\r\n                        onClose={handleClickChipCloseGeneralization}\r\n                        open={OpenYoutubeChipGeneralization}\r\n                        styles={{ background: '#D3D3D3' }}\r\n                    >\r\n                        <DialogContent>\r\n                            <Card className={classes.card}>\r\n                                <CardBody>\r\n                                    <iframe\r\n                                        src='https://www.youtube.com/embed/YaOdtuBwYB4'\r\n                                        width='550px'\r\n                                        height='315px'\r\n                                        allowFullScreen\r\n                                    />\r\n                                    <CardContent>\r\n                                        <Typography className={classes.yt_description}>\r\n                                            In generalization data can be grouped up into buckets. <br/>\r\n                                            Only works on numbers.\r\n                                        </Typography>\r\n                                        <Divider/>\r\n                                        <Typography className={classes.yt_h2}>\r\n                                            Pros:\r\n                                        </Typography>\r\n                                        <Typography className={classes.yt_h3}>\r\n                                            - The general direction of the data implications remain intact\r\n                                        </Typography>\r\n                                        <Typography className={classes.yt_h2}>\r\n                                            Cons:\r\n                                        </Typography>\r\n                                        <Typography className={classes.yt_h3}>\r\n                                            - Accurate values are no longer available\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button\r\n                                color=\"primary\"\r\n                                onClick={handleClickChipCloseGeneralization}\r\n                            >\r\n                                Close\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n\r\n                    <Dialog\r\n                        aria-labelledby=\"form-dialog-title\"\r\n                        className={classes.DialogClass}\r\n                        onClose={handleClickChipCloseDelete}\r\n                        open={OpenYoutubeChipDelete}\r\n                    >\r\n                        <DialogContent>\r\n                            <Card className={classes.card}>\r\n                                <CardBody>\r\n                                    <iframe\r\n                                        src='https://www.youtube.com/embed/WQAbRZKLJ4A'\r\n                                        width='550px'\r\n                                        height='315px'\r\n                                        allowFullScreen\r\n                                    />\r\n                                    <CardContent>\r\n                                        <Typography className={classes.yt_description}>\r\n                                            Remove the column from the dataset completely.\r\n                                        </Typography>\r\n                                        <Divider/>\r\n                                        <Typography className={classes.yt_h2}>\r\n                                            Pros:\r\n                                        </Typography>\r\n                                        <Typography className={classes.yt_h3}>\r\n                                            - Most secure anonymization technique\r\n                                        </Typography>\r\n                                        <Typography className={classes.yt_h2}>\r\n                                            Cons:\r\n                                        </Typography>\r\n                                        <Typography className={classes.yt_h3}>\r\n                                            - No information\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button\r\n                                color=\"primary\"\r\n                                onClick={handleClickChipCloseDelete}\r\n                            >\r\n                                Close\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n                </div>\r\n                <span className={classes.spacer}/>\r\n                <div className={classes.row}>\r\n                    <Grid>\r\n                        <Overlay\r\n                            active={SaveButtonLoader}\r\n                            text={''}\r\n                        />\r\n                        <Button\r\n                            color=\"primary\"\r\n                            disabled={Object.keys(anonymizationAssignmentsObject).length === 0}\r\n                            onClick={() => handleClickOpenConfirmation()}\r\n                            variant=\"contained\"\r\n                        >\r\n                            Apply Anonymization\r\n                        </Button>\r\n                        <Dialog\r\n                            aria-labelledby=\"form-dialog-title\"\r\n                            onClose={handleClickOpenConfirmation}\r\n                            open={OpenConfirmation}\r\n                        >\r\n                            <DialogTitle id=\"form-dialog-title\">Do you want to continue with the following anonymization\r\n                                techniques</DialogTitle>\r\n                            <DialogContent>\r\n                                <List\r\n                                    aria-label=\"mailbox folders\"\r\n                                    className={classes.root}\r\n                                    component=\"nav\"\r\n                                >\r\n                                    {printStatement.map((statement, index) => (\r\n                                        <div>\r\n                                            <ListItem key={index}>\r\n                                                <ListItemText\r\n                                                    key={statement + '-' + index}\r\n                                                    primary={statement}\r\n                                                />\r\n                                            </ListItem>\r\n                                            <Divider/>\r\n                                        </div>\r\n                                    ))}\r\n                                </List>\r\n                            </DialogContent>\r\n                            <DialogActions>\r\n                                <Button\r\n                                    color=\"primary\"\r\n                                    onClick={ApplyAnonymization}\r\n                                >\r\n                                    Apply Now\r\n                                </Button>\r\n                                <Button\r\n                                    color=\"primary\"\r\n                                    onClick={handleCloseConfirmation}\r\n                                >\r\n                                    Cancel\r\n                                </Button>\r\n\r\n                            </DialogActions>\r\n                        </Dialog>\r\n                        <div/>\r\n                        <Divider/>\r\n\r\n                        <Button\r\n                            color=\"primary\"\r\n                            disabled={!(fileNameFormState.isValid && (Object.keys(anonymizationAssignmentsObject).length === 0 || SaveButtonDisable))}\r\n                            fullWidth\r\n                            onClick={() => documentId === 0 || !documentId ? saveDataset() : updateDataset()}\r\n                            variant=\"contained\"\r\n                        >\r\n                            {documentId === 0 || !documentId ? 'Save Dataset' : 'Update Dataset'}\r\n                        </Button>\r\n                    </Grid>\r\n                </div>\r\n            </div>\r\n            <span className={classes.spacer}/>\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center'\r\n                }}\r\n                autoHideDuration={4000}\r\n                onClose={() => handleCloseSnackBar('success')}\r\n                open={openSuccess}\r\n\r\n            >\r\n                <SnackBarWrapper\r\n\r\n                    message=\"The dataset is saved!\"\r\n                    onClose={() => handleCloseSnackBar('success')}\r\n                    variant=\"success\"\r\n                />\r\n            </Snackbar>\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center'\r\n                }}\r\n\r\n                autoHideDuration={2000}\r\n\r\n                onClose={() => handleCloseSnackBar('error')}\r\n                open={openError}\r\n\r\n            >\r\n                <SnackBarWrapper\r\n\r\n                    message=\"Something went wrong!\"\r\n                    onClose={() => handleCloseSnackBar('error')}\r\n                    variant=\"error\"\r\n                />\r\n            </Snackbar>\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center'\r\n                }}\r\n                autoHideDuration={2000}\r\n                onClose={() => handleCloseSnackBar('error')}\r\n                open={openError}\r\n            >\r\n                <SnackBarWrapper\r\n                    message=\"Document title already exists!\"\r\n                    onClose={() => handleCloseSnackBar('error')}\r\n                    variant=\"error\"\r\n                />\r\n            </Snackbar>\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center'\r\n                }}\r\n                autoHideDuration={2000}\r\n                onClose={() => handleCloseSnackBar('InputError')}\r\n                open={openErrorIncomInput}\r\n            >\r\n                <SnackBarWrapper\r\n                    message=\"Please fill the all inputs for selected anonymization type\"\r\n                    onClose={() => handleCloseSnackBar('InputError')}\r\n                    variant=\"error\"\r\n                />\r\n            </Snackbar>\r\n\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center'\r\n                }}\r\n                autoHideDuration={2000}\r\n                onClose={() => handleCloseSnackBar('errorSpecial')}\r\n                open={openErrorSpecial}\r\n            >\r\n                <SnackBarWrapper\r\n                    message=\"Filename contains special characters\"\r\n                    onClose={() => handleCloseSnackBar('errorSpecial')}\r\n                    variant=\"error\"\r\n                />\r\n            </Snackbar>\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center'\r\n                }}\r\n                autoHideDuration={2000}\r\n                onClose={() => handleCloseSnackBar('errorEmptyString')}\r\n                open={openErrorEmptyString}\r\n            >\r\n                <SnackBarWrapper\r\n                    message=\"Filename is empty\"\r\n                    onClose={() => handleCloseSnackBar('errorEmptyString')}\r\n                    variant=\"error\"\r\n                />\r\n            </Snackbar>\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center'\r\n                }}\r\n                autoHideDuration={2000}\r\n                onClose={() => handleCloseSnackBar('MaskingRangeError')}\r\n                open={openMaskRangeError}\r\n            >\r\n                <SnackBarWrapper\r\n                    message=\"Masking Range should be a positive whole number\"\r\n                    onClose={() => handleCloseSnackBar('MaskingRangeError')}\r\n                    variant=\"error\"\r\n                />\r\n            </Snackbar>\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center'\r\n                }}\r\n                autoHideDuration={2000}\r\n                onClose={() => handleCloseSnackBar('GenStepError')}\r\n                open={openGenStepError}\r\n            >\r\n                <SnackBarWrapper\r\n                    message=\"Step Size should be greater than 0\"\r\n                    onClose={() => handleCloseSnackBar('GenStepError')}\r\n                    variant=\"error\"\r\n                />\r\n            </Snackbar>\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center'\r\n                }}\r\n                autoHideDuration={2000}\r\n                onClose={() => handleCloseSnackBar('InputError')}\r\n                open={openErrorIncomInput}\r\n            >\r\n                <SnackBarWrapper\r\n                    message=\"Please fill the all inputs for selected anonymization type\"\r\n                    onClose={() => handleCloseSnackBar('InputError')}\r\n                    variant=\"error\"\r\n                />\r\n            </Snackbar>\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center'\r\n                }}\r\n                autoHideDuration={2000}\r\n                onClose={() => handleCloseSnackBar('MaskingDecimalError')}\r\n                open={openMaskDecimalError}\r\n            >\r\n                <SnackBarWrapper\r\n                    message=\"Masking Range should be a whole number only\"\r\n                    onClose={() => handleCloseSnackBar('MaskingDecimalError')}\r\n                    variant=\"error\"\r\n                />\r\n            </Snackbar>\r\n\r\n\r\n            <Card>\r\n\r\n                <TextField\r\n                    //className={classes.TheInput}\r\n                    // labelFontSize={40}\r\n                    error={hasError('fileName')}\r\n                    fontSize={40}\r\n                    helperText={\r\n                        hasError('fileName') ? fileNameFormState.error.fileName[0] : null\r\n                    }\r\n                    label=\"FileName\"\r\n                    name=\"fileName\"\r\n                    onChange={changeFileName}\r\n                    placeholder=\"Enter FileName\"\r\n                    value={fileNameFormState.value.fileName || ''}\r\n                />\r\n                <CardContent className={classes.content}>\r\n                    <PerfectScrollbar>\r\n                        <div className={classes.inner}>\r\n                            <Table className={classes.table}>\r\n                                <TableHead className={classes.tableHead}>\r\n\r\n                                    <TableRow className={classes.tableRow}>\r\n                                        {document.data.map(column => (\r\n                                            <TableCell\r\n                                                className={classes.tableCell_header}\r\n                                                key={column.orderPosition}\r\n                                            >\r\n                                                <div>\r\n                                                    <Button\r\n                                                        aria-controls=\"simple-menu\"\r\n                                                        aria-haspopup=\"true\"\r\n                                                        className={classes.button}\r\n                                                        onClick={() => handleClickOpen(column.orderPosition)}\r\n                                                        style={anonymizationAssignmentsObject[column.orderPosition] ? anonymizationAssignmentsObject[column.orderPosition].color : Default}\r\n                                                        variant=\"outlined\"\r\n                                                    >\r\n                                                        {column.title}\r\n                                                        <ArrowDropDownIcon/>\r\n                                                    </Button>\r\n\r\n                                                </div>\r\n                                            </TableCell>\r\n                                        ))}\r\n                                    </TableRow>\r\n\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {Array.from(Array(10).keys()).map(index => (\r\n                                        <TableRow\r\n                                            className={classes.tableRow}\r\n                                            key={index}\r\n                                            // selected={selectedUsers.indexOf(user.id) !== -1}\r\n                                        >\r\n                                            {document.data.map(column => (\r\n                                                <TableCell\r\n                                                    className={classes.tableCell}\r\n                                                    key={column.orderPosition}\r\n                                                >\r\n                                                    {column.data[index]}\r\n                                                </TableCell>\r\n                                            ))}\r\n                                        </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                            <Dialog\r\n                                aria-labelledby=\"form-dialog-title\"\r\n                                onClose={handleClose}\r\n                                open={open}\r\n                            >\r\n                                <DialogTitle id=\"form-dialog-title\">Anonymization</DialogTitle>\r\n                                <DialogContent>\r\n                                    <DialogContentText>\r\n                                        Select the Anonymization type from the following:\r\n                                    </DialogContentText>\r\n                                    <Grid>\r\n                                        <Radio\r\n                                            checked={selectedValue === 'None'}\r\n                                            inputProps={{ 'aria-label': 'None' }}\r\n                                            name=\"radio-button-demo\"\r\n                                            onChange={handleRadioChange}\r\n                                            value=\"None\"\r\n                                        />\r\n                                        <label>None</label>\r\n                                        <span className={classes.spacer}/>\r\n                                    </Grid>\r\n                                    {/* {selectedValue == 'None'} */}\r\n                                    <Grid>\r\n\r\n                                        <Radio\r\n                                            checked={selectedValue === 'Masking'}\r\n                                            inputProps={{ 'aria-label': 'Masking' }}\r\n                                            name=\"radio-button-demo\"\r\n                                            onChange={handleRadioChange}\r\n                                            value=\"Masking\"\r\n                                        />\r\n                                        <label>Masking</label>\r\n                                    </Grid>\r\n                                    {selectedValue === 'Masking' &&\r\n                                    <Grid>\r\n\r\n\r\n                                        <label>Start</label>\r\n                                        <Radio\r\n                                            checked={selectedValue_Start === 'Left'}\r\n                                            inputProps={{ 'aria-label': 'Left' }}\r\n                                            name=\"radio-button-demo\"\r\n                                            onChange={handleRadioChange_Start}\r\n                                            value=\"Left\"\r\n                                        />\r\n                                        <label>Left</label>\r\n                                        <Radio\r\n                                            checked={selectedValue_Start === 'Right'}\r\n                                            inputProps={{ 'aria-label': 'Right' }}\r\n                                            name=\"radio-button-demo\"\r\n                                            onChange={handleRadioChange_Start}\r\n                                            value=\"Right\"\r\n                                        />\r\n                                        <label>Right</label>\r\n                                        <TextField\r\n                                            autoFocus\r\n                                            fullWidth\r\n                                            id=\"name\"\r\n                                            InputProps={{\r\n                                                readOnly: false\r\n                                            }}\r\n                                            label=\"Pattern\"\r\n                                            margin=\"dense\"\r\n                                            onChange={handleRadioChangeMaskPat}\r\n                                            value={selectedValueMaskPat}\r\n                                        />\r\n                                        <TextField\r\n\r\n                                            fullWidth\r\n\r\n                                            InputProps={{ inputProps: { min: 1, max: 10 } }}\r\n                                            label=\"Range\"\r\n                                            margin=\"dense\"\r\n                                            onChange={handleRadioChangeMaskRange}\r\n                                            type=\"Number\"\r\n                                            value={selectedValueMaskRange}\r\n                                        />\r\n\r\n                                    </Grid>\r\n\r\n                                    }\r\n                                    <Grid>\r\n                                        <Radio\r\n                                            checked={selectedValue === 'Hashing'}\r\n                                            inputProps={{ 'aria-label': 'Hashing' }}\r\n                                            name=\"radio-button-demo\"\r\n                                            onChange={handleRadioChange}\r\n                                            value=\"Hashing\"\r\n                                        />\r\n                                        <label>Hashing</label>\r\n                                        <span className={classes.spacer}/>\r\n                                    </Grid>\r\n                                    {selectedValue === 'Hashing' &&\r\n                                    <Grid>\r\n                                        <label>Cipher</label>\r\n                                        <Radio\r\n                                            checked={selectedValue_Cipher === 'SHA1'}\r\n                                            inputProps={{ 'aria-label': 'SHA1' }}\r\n                                            name=\"radio-button-demo\"\r\n                                            onChange={handleRadioChange_Cipher}\r\n                                            value=\"SHA1\"\r\n                                        />\r\n                                        <label>SHA1</label>\r\n                                        <Radio\r\n                                            checked={selectedValue_Cipher === 'SHA256'}\r\n                                            inputProps={{ 'aria-label': 'SHA256' }}\r\n                                            name=\"radio-button-demo\"\r\n                                            onChange={handleRadioChange_Cipher}\r\n                                            value=\"SHA256\"\r\n                                        />\r\n                                        <label>SHA256</label>\r\n\r\n                                    </Grid>}\r\n                                    <Grid>\r\n                                        <Radio\r\n                                            checked={selectedValue === 'HashingWithSalt'}\r\n                                            inputProps={{ 'aria-label': 'HashingWithSalt' }}\r\n                                            name=\"radio-button-demo\"\r\n                                            onChange={handleRadioChange}\r\n                                            value=\"HashingWithSalt\"\r\n                                        />\r\n                                        <label>Hashing With Salt</label>\r\n                                        <span className={classes.spacer}/>\r\n                                    </Grid>\r\n                                    {selectedValue === 'HashingWithSalt' &&\r\n                                    <Grid>\r\n                                        <label>Cipher</label>\r\n                                        <Radio\r\n                                            checked={selectedValue_Cipher === 'SHA1'}\r\n                                            inputProps={{ 'aria-label': 'SHA1' }}\r\n                                            name=\"radio-button-demo\"\r\n                                            onChange={handleRadioChange_Cipher}\r\n                                            value=\"SHA1\"\r\n                                        />\r\n                                        <label>SHA1</label>\r\n                                        <Radio\r\n                                            checked={selectedValue_Cipher === 'SHA256'}\r\n                                            inputProps={{ 'aria-label': 'SHA256' }}\r\n                                            name=\"radio-button-demo\"\r\n                                            onChange={handleRadioChange_Cipher}\r\n                                            value=\"SHA256\"\r\n                                        />\r\n                                        <label>SHA256</label>\r\n\r\n                                    </Grid>}\r\n\r\n                                    <Grid>\r\n                                        <Radio\r\n                                            checked={selectedValue === 'Random Sort'}\r\n                                            inputProps={{ 'aria-label': 'Random Sort' }}\r\n                                            name=\"radio-button-demo\"\r\n                                            onChange={handleRadioChange}\r\n                                            value=\"Random Sort\"\r\n                                        />\r\n                                        <label>Random Sort</label>\r\n                                        <span className={classes.spacer}/>\r\n                                    </Grid>\r\n                                    {/* {selectedValue == 'Random'} */}\r\n                                    <Grid>\r\n                                        <Radio\r\n                                            checked={selectedValue === 'Generalization'}\r\n                                            inputProps={{ 'aria-label': 'Generalization' }}\r\n                                            name=\"radio-button-demo\"\r\n                                            onChange={handleRadioChange}\r\n                                            value=\"Generalization\"\r\n                                        />\r\n                                        <label>Generalization</label>\r\n                                        <span className={classes.spacer}/>\r\n                                    </Grid>\r\n                                    {selectedValue === 'Generalization' &&\r\n                                    <Grid>\r\n                                        <TextField\r\n                                            autoFocus\r\n                                            fullWidth\r\n                                            id=\"name\"\r\n                                            InputProps={{\r\n                                                readOnly: false\r\n                                            }}\r\n                                            label=\"Step Size :\"\r\n                                            margin=\"dense\"\r\n                                            onChange={handleRadioChangeGenStep}\r\n                                            type=\"Number\"\r\n                                            value={selectedValueGenStep}\r\n                                        />\r\n\r\n                                    </Grid>\r\n                                    }\r\n\r\n                                    <Grid>\r\n                                        <Radio\r\n                                            checked={selectedValue === 'DeletetheColumn'}\r\n                                            inputProps={{ 'aria-label': 'DeletetheColumn' }}\r\n                                            name=\"radio-button-demo\"\r\n                                            onChange={handleRadioChange}\r\n                                            value=\"DeletetheColumn\"\r\n                                        />\r\n                                        <label>Delete the Column</label>\r\n                                        <span className={classes.spacer}/>\r\n                                    </Grid>\r\n\r\n\r\n                                </DialogContent>\r\n                                <DialogActions>\r\n                                    <Button\r\n                                        color=\"primary\"\r\n                                        onClick={saveAnnonymizationType}\r\n                                    >\r\n                                        Save Anonymization Type\r\n                                    </Button>\r\n                                    <Button\r\n                                        color=\"primary\"\r\n                                        onClick={handleClose}\r\n                                    >\r\n                                        Cancel\r\n                                    </Button>\r\n                                </DialogActions>\r\n                            </Dialog>\r\n                        </div>\r\n                    </PerfectScrollbar>\r\n                </CardContent>\r\n                <CardActions className={classes.actions}>\r\n                    {/* <TablePagination\r\n                component=\"div\"\r\n                count=\"10\"\r\n                onChangePage={handlePageChange}\r\n                onChangeRowsPerPage={handleRowsPerPageChange}\r\n                page={page}\r\n                rowsPerPage={rowsPerPage}\r\n                rowsPerPageOptions={[5, 10, 25]}\r\n            /> */}\r\n                </CardActions>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nEditorTable.propTypes = {\r\n    className: PropTypes.string\r\n};\r\n\r\nexport default EditorTable;\r\n"]},"metadata":{},"sourceType":"module"}