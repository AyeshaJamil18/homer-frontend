{"ast":null,"code":"'use strict';\n\nconst apiURL = () => {\n  return process.env.REACT_APP_BACKEND_API_URL;\n};\n\nconst get = url => generalizedFetch('GET', url);\n\nconst put = (url, data) => generalizedFetch('PUT', url, data);\n\nconst post = (url, data) => generalizedFetch('POST', url, data);\n\nconst remove = url => generalizedFetch('DELETE', url);\n\nconst generalizedFetch = (method, url, data) => {\n  if ((method === 'GET' || method === 'DELETE') && data !== undefined) {\n    throw 'Get or delete can\\'t have data';\n  } // BEARER TOKEN GOES HERE\n\n\n  let token = window.localStorage['bearerToken']; // = '*TOKEN*';\n\n  let header = new Headers();\n\n  if (token) {\n    header.append('Authorization', \"Bearer \".concat(token));\n  }\n\n  if (data) {\n    header.append('Content-Type', 'application/json');\n  }\n\n  return fetch(url, {\n    method: method,\n    headers: header,\n    body: data ? JSON.stringify(data) : undefined\n  }).then(resp => {\n    if (checkIfUnauthorized(resp)) {\n      return Promise.reject(resp);\n    } else {\n      if (resp.error) {\n        return Promise.reject(resp.error);\n      } else {\n        return Promise.resolve(resp);\n      }\n    }\n  }).catch(e => {\n    return Promise.reject(e);\n  });\n};\n\nconst checkIfUnauthorized = res => {\n  return res.status === 401;\n};\n\nexport default {\n  get,\n  post,\n  put,\n  remove,\n  checkIfUnauthorized,\n  apiURL\n};","map":{"version":3,"sources":["C:/Users/ayesh/Desktop/TUM/semester 3/Final Presentation/dedas-frontend/src/service/HttpService.js"],"names":["apiURL","process","env","REACT_APP_BACKEND_API_URL","get","url","generalizedFetch","put","data","post","remove","method","undefined","token","window","localStorage","header","Headers","append","fetch","headers","body","JSON","stringify","then","resp","checkIfUnauthorized","Promise","reject","error","resolve","catch","e","res","status"],"mappings":"AAAA;;AAEA,MAAMA,MAAM,GAAG,MAAM;AACjB,SAAOC,OAAO,CAACC,GAAR,CAAYC,yBAAnB;AACH,CAFD;;AAIA,MAAMC,GAAG,GAAIC,GAAD,IAASC,gBAAgB,CAAC,KAAD,EAAQD,GAAR,CAArC;;AAEA,MAAME,GAAG,GAAG,CAACF,GAAD,EAAMG,IAAN,KAAeF,gBAAgB,CAAC,KAAD,EAAQD,GAAR,EAAaG,IAAb,CAA3C;;AAEA,MAAMC,IAAI,GAAG,CAACJ,GAAD,EAAMG,IAAN,KAAeF,gBAAgB,CAAC,MAAD,EAASD,GAAT,EAAcG,IAAd,CAA5C;;AAEA,MAAME,MAAM,GAAIL,GAAD,IAASC,gBAAgB,CAAC,QAAD,EAAWD,GAAX,CAAxC;;AAEA,MAAMC,gBAAgB,GAAG,CAACK,MAAD,EAASN,GAAT,EAAcG,IAAd,KAAuB;AAC5C,MAAI,CAACG,MAAM,KAAK,KAAX,IAAoBA,MAAM,KAAK,QAAhC,KAA6CH,IAAI,KAAKI,SAA1D,EAAqE;AACjE,UAAM,gCAAN;AACH,GAH2C,CAK5C;;;AACA,MAAIC,KAAK,GAAGC,MAAM,CAACC,YAAP,CAAoB,aAApB,CAAZ,CAN4C,CAMI;;AAChD,MAAIC,MAAM,GAAG,IAAIC,OAAJ,EAAb;;AACA,MAAIJ,KAAJ,EAAW;AACPG,IAAAA,MAAM,CAACE,MAAP,CAAc,eAAd,mBAAyCL,KAAzC;AACH;;AAED,MAAIL,IAAJ,EAAU;AACNQ,IAAAA,MAAM,CAACE,MAAP,CAAc,cAAd,EAA8B,kBAA9B;AACH;;AAED,SAAOC,KAAK,CAACd,GAAD,EAAM;AACdM,IAAAA,MAAM,EAAEA,MADM;AAEdS,IAAAA,OAAO,EAAEJ,MAFK;AAGdK,IAAAA,IAAI,EAAEb,IAAI,GAAGc,IAAI,CAACC,SAAL,CAAef,IAAf,CAAH,GAA0BI;AAHtB,GAAN,CAAL,CAIJY,IAJI,CAIEC,IAAD,IAAU;AACd,QAAIC,mBAAmB,CAACD,IAAD,CAAvB,EAA+B;AAC3B,aAAOE,OAAO,CAACC,MAAR,CAAeH,IAAf,CAAP;AACH,KAFD,MAEO;AACH,UAAIA,IAAI,CAACI,KAAT,EAAgB;AACZ,eAAOF,OAAO,CAACC,MAAR,CAAeH,IAAI,CAACI,KAApB,CAAP;AACH,OAFD,MAEO;AACH,eAAOF,OAAO,CAACG,OAAR,CAAgBL,IAAhB,CAAP;AACH;AACJ;AACJ,GAdM,EAcJM,KAdI,CAcGC,CAAD,IAAO;AACZ,WAAOL,OAAO,CAACC,MAAR,CAAeI,CAAf,CAAP;AACH,GAhBM,CAAP;AAiBH,CAjCD;;AAmCA,MAAMN,mBAAmB,GAAIO,GAAD,IAAS;AACjC,SAAOA,GAAG,CAACC,MAAJ,KAAe,GAAtB;AACH,CAFD;;AAIA,eAAe;AACX9B,EAAAA,GADW;AAEXK,EAAAA,IAFW;AAGXF,EAAAA,GAHW;AAIXG,EAAAA,MAJW;AAKXgB,EAAAA,mBALW;AAMX1B,EAAAA;AANW,CAAf","sourcesContent":["'use strict';\r\n\r\nconst apiURL = () => {\r\n    return process.env.REACT_APP_BACKEND_API_URL;\r\n};\r\n\r\nconst get = (url) => generalizedFetch('GET', url);\r\n\r\nconst put = (url, data) => generalizedFetch('PUT', url, data);\r\n\r\nconst post = (url, data) => generalizedFetch('POST', url, data);\r\n\r\nconst remove = (url) => generalizedFetch('DELETE', url);\r\n\r\nconst generalizedFetch = (method, url, data) => {\r\n    if ((method === 'GET' || method === 'DELETE') && data !== undefined) {\r\n        throw 'Get or delete can\\'t have data';\r\n    }\r\n\r\n    // BEARER TOKEN GOES HERE\r\n    let token = window.localStorage['bearerToken']; // = '*TOKEN*';\r\n    let header = new Headers();\r\n    if (token) {\r\n        header.append('Authorization', `Bearer ${token}`);\r\n    }\r\n\r\n    if (data) {\r\n        header.append('Content-Type', 'application/json');\r\n    }\r\n\r\n    return fetch(url, {\r\n        method: method,\r\n        headers: header,\r\n        body: data ? JSON.stringify(data) : undefined\r\n    }).then((resp) => {\r\n        if (checkIfUnauthorized(resp)) {\r\n            return Promise.reject(resp);\r\n        } else {\r\n            if (resp.error) {\r\n                return Promise.reject(resp.error);\r\n            } else {\r\n                return Promise.resolve(resp);\r\n            }\r\n        }\r\n    }).catch((e) => {\r\n        return Promise.reject(e);\r\n    });\r\n};\r\n\r\nconst checkIfUnauthorized = (res) => {\r\n    return res.status === 401;\r\n};\r\n\r\nexport default {\r\n    get,\r\n    post,\r\n    put,\r\n    remove,\r\n    checkIfUnauthorized,\r\n    apiURL\r\n};\r\n"]},"metadata":{},"sourceType":"module"}