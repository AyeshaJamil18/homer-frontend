{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\ayesh\\\\Desktop\\\\TUM\\\\semester 3\\\\Final Presentation\\\\dedas-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"C:\\\\Users\\\\ayesh\\\\Desktop\\\\TUM\\\\semester 3\\\\Final Presentation\\\\dedas-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\ayesh\\\\Desktop\\\\TUM\\\\semester 3\\\\Final Presentation\\\\dedas-frontend\\\\src\\\\views\\\\Dashboard\\\\components\\\\SharedPublically\\\\SharedPublically.js\";\nimport React, { useState } from 'react';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button, Card, CardActions, CardContent, CardHeader, Divider, Table, TableBody, TableCell, TableHead, TableRow, TableSortLabel, Tooltip } from '@material-ui/core';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\nimport mockData from './data';\nimport { StatusBullet } from 'components';\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 800\n  },\n  statusContainer: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  status: {\n    marginRight: theme.spacing(1)\n  },\n  actions: {\n    justifyContent: 'flex-end'\n  }\n}));\nconst statusColors = {\n  delivered: 'success',\n  pending: 'info',\n  refunded: 'danger'\n};\n\nconst SharedPublically = props => {\n  const className = props.className,\n        rest = _objectWithoutProperties(props, [\"className\"]);\n\n  const classes = useStyles();\n\n  const _useState = useState(mockData),\n        _useState2 = _slicedToArray(_useState, 1),\n        orders = _useState2[0];\n\n  return React.createElement(Card, Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(CardHeader, {\n    title: \"Public Documents\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    className: classes.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(PerfectScrollbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.inner,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(Table, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"File If\"), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Uploaded By\"), React.createElement(TableCell, {\n    sortDirection: \"desc\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(Tooltip, {\n    enterDelay: 300,\n    title: \"Sort\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(TableSortLabel, {\n    active: true,\n    direction: \"desc\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"Date\"))), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Status\"))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, orders.map(order => React.createElement(TableRow, {\n    hover: true,\n    key: order.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, order.ref), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, order.customer.name), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, moment(order.createdAt).format('DD/MM/YYYY')), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.statusContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(StatusBullet, {\n    className: classes.status,\n    color: statusColors[order.status],\n    size: \"sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }), order.status))))))))), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }), React.createElement(CardActions, {\n    className: classes.actions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    size: \"small\",\n    variant: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"View all \", React.createElement(ArrowRightIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }))));\n};\n\nSharedPublically.propTypes = {\n  className: PropTypes.string\n};\nexport default SharedPublically;","map":{"version":3,"sources":["C:/Users/ayesh/Desktop/TUM/semester 3/Final Presentation/dedas-frontend/src/views/Dashboard/components/SharedPublically/SharedPublically.js"],"names":["React","useState","clsx","moment","PerfectScrollbar","PropTypes","makeStyles","Button","Card","CardActions","CardContent","CardHeader","Divider","Table","TableBody","TableCell","TableHead","TableRow","TableSortLabel","Tooltip","ArrowRightIcon","mockData","StatusBullet","useStyles","theme","root","content","padding","inner","minWidth","statusContainer","display","alignItems","status","marginRight","spacing","actions","justifyContent","statusColors","delivered","pending","refunded","SharedPublically","props","className","rest","classes","orders","map","order","id","ref","customer","name","createdAt","format","propTypes","string"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    CardHeader,\r\n    Divider,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TableRow,\r\n    TableSortLabel,\r\n    Tooltip\r\n} from '@material-ui/core';\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\r\n\r\nimport mockData from './data';\r\nimport { StatusBullet } from 'components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {},\r\n    content: {\r\n        padding: 0\r\n    },\r\n    inner: {\r\n        minWidth: 800\r\n    },\r\n    statusContainer: {\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    },\r\n    status: {\r\n        marginRight: theme.spacing(1)\r\n    },\r\n    actions: {\r\n        justifyContent: 'flex-end'\r\n    }\r\n}));\r\n\r\nconst statusColors = {\r\n    delivered: 'success',\r\n    pending: 'info',\r\n    refunded: 'danger'\r\n};\r\n\r\nconst SharedPublically = props => {\r\n    const { className, ...rest } = props;\r\n\r\n    const classes = useStyles();\r\n\r\n    const [orders] = useState(mockData);\r\n\r\n    return (\r\n        <Card\r\n            {...rest}\r\n            className={clsx(classes.root, className)}\r\n        >\r\n            <CardHeader\r\n                title=\"Public Documents\"\r\n            />\r\n            <Divider/>\r\n            <CardContent className={classes.content}>\r\n                <PerfectScrollbar>\r\n                    <div className={classes.inner}>\r\n                        <Table>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>File If</TableCell>\r\n                                    <TableCell>Uploaded By</TableCell>\r\n                                    <TableCell sortDirection=\"desc\">\r\n                                        <Tooltip\r\n                                            enterDelay={300}\r\n                                            title=\"Sort\"\r\n                                        >\r\n                                            <TableSortLabel\r\n                                                active\r\n                                                direction=\"desc\"\r\n                                            >\r\n                                                Date\r\n                                            </TableSortLabel>\r\n                                        </Tooltip>\r\n                                    </TableCell>\r\n                                    <TableCell>Status</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {orders.map(order => (\r\n                                    <TableRow\r\n                                        hover\r\n                                        key={order.id}\r\n                                    >\r\n                                        <TableCell>{order.ref}</TableCell>\r\n                                        <TableCell>{order.customer.name}</TableCell>\r\n                                        <TableCell>\r\n                                            {moment(order.createdAt).format('DD/MM/YYYY')}\r\n                                        </TableCell>\r\n                                        <TableCell>\r\n                                            <div className={classes.statusContainer}>\r\n                                                <StatusBullet\r\n                                                    className={classes.status}\r\n                                                    color={statusColors[order.status]}\r\n                                                    size=\"sm\"\r\n                                                />\r\n                                                {order.status}\r\n                                            </div>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </div>\r\n                </PerfectScrollbar>\r\n            </CardContent>\r\n            <Divider/>\r\n            <CardActions className={classes.actions}>\r\n                <Button\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    variant=\"text\"\r\n                >\r\n                    View all <ArrowRightIcon/>\r\n                </Button>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n};\r\n\r\nSharedPublically.propTypes = {\r\n    className: PropTypes.string\r\n};\r\n\r\nexport default SharedPublically;\r\n"]},"metadata":{},"sourceType":"module"}