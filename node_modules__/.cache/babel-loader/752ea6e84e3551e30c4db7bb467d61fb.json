{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\ayesh\\\\Desktop\\\\TUM\\\\semester 3\\\\Final Presentation\\\\dedas-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"C:\\\\Users\\\\ayesh\\\\Desktop\\\\TUM\\\\semester 3\\\\Final Presentation\\\\dedas-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\ayesh\\\\Desktop\\\\TUM\\\\semester 3\\\\Final Presentation\\\\dedas-frontend\\\\src\\\\views\\\\MyDocumentList\\\\components\\\\DocumentListTable\\\\DocumentListTable.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button, Card, CardActions, CardContent, Grid, Radio, Table, TableBody, TableCell, TableHead, TablePagination, TableRow, TextField, Typography, List, ListItem, ListItemText, Paper, Divider, Snackbar, RadioGroup, FormControlLabel } from '@material-ui/core';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { SnackBarWrapper } from '../../../../components';\nimport { DocumentService, UserService, AccessGroupService } from 'service';\nimport { saveAs } from 'file-saver';\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1050\n  },\n  nameContainer: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  actions: {\n    justifyContent: 'flex-end'\n  },\n  tableCell: {\n    width: '70%'\n  },\n  userListPaper: {\n    width: '45%',\n    maxWidth: 250\n  },\n  textField: {\n    marginBottom: theme.spacing(1)\n  },\n  spacer: {\n    flexGrow: 1\n  }\n}));\n\nconst DocumentListTable = props => {\n  const className = props.className,\n        activeDocumentList = props.activeDocumentList,\n        activePrivacy = props.activePrivacy,\n        privacyOptions = props.privacyOptions,\n        shareFunction = props.shareFunction,\n        rest = _objectWithoutProperties(props, [\"className\", \"activeDocumentList\", \"activePrivacy\", \"privacyOptions\", \"shareFunction\"]);\n\n  const classes = useStyles();\n  let history = useHistory();\n\n  const _useState = useState(10),\n        _useState2 = _slicedToArray(_useState, 2),\n        rowsPerPage = _useState2[0],\n        setRowsPerPage = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        page = _useState4[0],\n        setPage = _useState4[1];\n\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        open = _React$useState2[0],\n        setOpen = _React$useState2[1];\n\n  const _React$useState3 = React.useState(''),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        value = _React$useState4[0],\n        setValue = _React$useState4[1];\n\n  const _React$useState5 = React.useState(privacyOptions.PRIVATE),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        selectedPrivacy = _React$useState6[0],\n        setSelectedPrivacy = _React$useState6[1];\n\n  const _React$useState7 = React.useState({}),\n        _React$useState8 = _slicedToArray(_React$useState7, 2),\n        sharedDocument = _React$useState8[0],\n        setSharedDocument = _React$useState8[1];\n\n  const _React$useState9 = React.useState([]),\n        _React$useState10 = _slicedToArray(_React$useState9, 2),\n        userEmailList = _React$useState10[0],\n        setUserEmailList = _React$useState10[1];\n\n  const _React$useState11 = React.useState(''),\n        _React$useState12 = _slicedToArray(_React$useState11, 2),\n        userEmail = _React$useState12[0],\n        setUserEmail = _React$useState12[1];\n\n  const _React$useState13 = React.useState({}),\n        _React$useState14 = _slicedToArray(_React$useState13, 2),\n        accessGroup = _React$useState14[0],\n        setAccessGroup = _React$useState14[1];\n\n  const _React$useState15 = React.useState([]),\n        _React$useState16 = _slicedToArray(_React$useState15, 2),\n        addedUserList = _React$useState16[0],\n        setAddedUserList = _React$useState16[1];\n\n  const _React$useState17 = React.useState([]),\n        _React$useState18 = _slicedToArray(_React$useState17, 2),\n        deletedUserList = _React$useState18[0],\n        setDeletedUserList = _React$useState18[1];\n\n  const _React$useState19 = React.useState(false),\n        _React$useState20 = _slicedToArray(_React$useState19, 2),\n        isError = _React$useState20[0],\n        setIsError = _React$useState20[1];\n\n  const _React$useState21 = React.useState(null),\n        _React$useState22 = _slicedToArray(_React$useState21, 2),\n        helperText = _React$useState22[0],\n        setHelperText = _React$useState22[1];\n\n  const _React$useState23 = React.useState(false),\n        _React$useState24 = _slicedToArray(_React$useState23, 2),\n        openSnackBar = _React$useState24[0],\n        setOpenSnackBar = _React$useState24[1];\n\n  const _React$useState25 = React.useState(''),\n        _React$useState26 = _slicedToArray(_React$useState25, 2),\n        snackBarMessage = _React$useState26[0],\n        setSnackBarMessage = _React$useState26[1];\n\n  const _React$useState27 = React.useState('success'),\n        _React$useState28 = _slicedToArray(_React$useState27, 2),\n        variantValue = _React$useState28[0],\n        setVariantValue = _React$useState28[1];\n\n  const handleClickOpen = document => {\n    setSharedDocument(document);\n\n    if (activePrivacy === privacyOptions.SHARED) {\n      AccessGroupService.getDocumentAccessGroup(document.id).then(resp => resp.json()).then(data => {\n        if (data.accessGroups && data.accessGroups.length > 0) {\n          setAccessGroup(data.accessGroups[0]);\n          setUserEmailList(data.accessGroups[0].userIds);\n        }\n      });\n    }\n\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setAccessGroup({});\n    setUserEmailList([]);\n    setAddedUserList([]);\n    setDeletedUserList([]);\n    setUserEmail('');\n    setSelectedPrivacy(activePrivacy);\n    setIsError(false);\n    setHelperText(null);\n  };\n\n  const handlePageChange = (event, myPage) => {\n    setPage(myPage);\n  };\n\n  const handleRowsPerPageChange = event => {\n    setPage(0);\n    setRowsPerPage(event.target.value);\n  };\n\n  const handleRadioChange = event => {\n    setSelectedPrivacy(event.target.value);\n  };\n\n  const handleChangeUserEmail = event => {\n    setUserEmail(event.target.value);\n    setIsError(false);\n    setHelperText(null);\n  };\n\n  const handleCloseSnackBar = () => {\n    setSnackBarMessage('');\n    setOpenSnackBar(false);\n    setVariantValue('success');\n  };\n\n  const handleOpenSnackBar = (variantValue, snackBarMessage) => {\n    setSnackBarMessage(snackBarMessage);\n    setVariantValue(variantValue);\n    setOpenSnackBar(true);\n  };\n\n  const shareDocument = () => {\n    let accessGroupObject;\n\n    if (selectedPrivacy === activePrivacy) {\n      if (selectedPrivacy !== privacyOptions.SHARED || !(addedUserList.length > 0 || deletedUserList.length > 0)) {\n        return;\n      }\n\n      accessGroupObject = {\n        accessGroup: {\n          documentId: sharedDocument.id,\n          modifier: 'r',\n          userIds: userEmailList.map(u => u.userId)\n        },\n        addedUsers: {\n          userIds: addedUserList.map(u => u.userId)\n        },\n        deletedUsers: {\n          userIds: deletedUserList.map(u => u.userId)\n        }\n      };\n    } else if (selectedPrivacy === privacyOptions.SHARED) {\n      accessGroupObject = {\n        accessGroup: {\n          documentId: sharedDocument.id,\n          modifier: 'r',\n          userIds: userEmailList.map(u => u.userId)\n        }\n      };\n    }\n\n    shareFunction(activePrivacy, selectedPrivacy, sharedDocument, accessGroupObject).then(result => {\n      if (!result) {\n        // open snack bar error\n        console.log('something went wrong');\n        handleOpenSnackBar('error', 'Something went wrong while sharing document');\n      } else {\n        handleOpenSnackBar('success', 'Document is successfully shared');\n        handleClose();\n      }\n    });\n  };\n\n  useEffect(() => {\n    setPage(0);\n    setRowsPerPage(10);\n    setSelectedPrivacy(activePrivacy);\n  }, [activeDocumentList]);\n\n  const setUserNotFoundError = () => {\n    setIsError(true);\n    setHelperText('User not found in the system');\n  };\n\n  const setUserExistAlreadyInListError = () => {\n    setIsError(true);\n    setHelperText('User is already exist in the list');\n  };\n\n  const setOwnerShouldNotBeInTheListError = () => {\n    setIsError(true);\n    setHelperText('Owner should not be in the list');\n  };\n\n  const userAddToShare = () => {\n    console.log('user email ', userEmail);\n\n    if (userEmailList.find(user => user.email === userEmail)) {\n      setUserExistAlreadyInListError();\n      return;\n    }\n\n    UserService.checkUserEmailExist(userEmail).then(resp => resp.json()).then(data => {\n      //TODO: check ownerId, share user email should not be owner email\n      if (data.isExist) {\n        if (data.isRequester) {\n          setOwnerShouldNotBeInTheListError();\n          return;\n        }\n\n        userEmailList.push({\n          email: data.email,\n          userId: data.userId\n        });\n        addedUserList.push({\n          email: data.email,\n          userId: data.userId\n        });\n        console.log(userEmailList);\n        setUserEmail('');\n        handleOpenSnackBar('success', 'User added successfully');\n      } else {\n        setUserNotFoundError();\n      }\n    }).catch(e => {\n      console.log(e);\n      handleOpenSnackBar('error', 'Could not add user in the list');\n    });\n  };\n\n  const redirectToEdit = documentId => {\n    DocumentService.getDocumentById(documentId).then(resp => resp.json()).then(data => {\n      history.push({\n        pathname: '/editor',\n        state: {\n          columns: data.data.map(column => column.title),\n          columnsData: data.data,\n          fileName: data.originalFilename,\n          title: data.title,\n          id: data.id\n        }\n      });\n    }).catch(e => {\n      console.log(e);\n      handleOpenSnackBar('error', 'Colud not redirect to Editor page');\n    });\n  };\n\n  const startDownload = documentId => {\n    DocumentService.downloadDocument(documentId).then(resp => resp.json()).then(data => {\n      var blob = new Blob([data.csvData], {\n        type: 'text/csv'\n      });\n      saveAs(blob, data.fileName);\n    }).catch(e => {\n      console.log(e);\n      handleOpenSnackBar('error', 'Something went wrong on download');\n    });\n  };\n\n  return React.createElement(Card, Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    className: classes.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279\n    },\n    __self: this\n  }, React.createElement(PerfectScrollbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.inner,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281\n    },\n    __self: this\n  }, React.createElement(Table, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    className: classes.tableCell,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285\n    },\n    __self: this\n  }, \"Name\"), React.createElement(TableCell, {\n    className: classes.tableCell,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286\n    },\n    __self: this\n  }, \"Privacy\"), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287\n    },\n    __self: this\n  }, \"Upload Date\"), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288\n    },\n    __self: this\n  }), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289\n    },\n    __self: this\n  }), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290\n    },\n    __self: this\n  }))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293\n    },\n    __self: this\n  }, activeDocumentList.slice(page * rowsPerPage, (page + 1) * rowsPerPage).map(document => React.createElement(TableRow, {\n    className: classes.tableRow,\n    hover: true,\n    key: document.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    className: classes.tableCell,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.nameContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"body1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302\n    },\n    __self: this\n  }, document.title))), React.createElement(TableCell, {\n    className: classes.tableCell,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.nameContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"body1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307\n    },\n    __self: this\n  }, activePrivacy))), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310\n    },\n    __self: this\n  }, moment(document.createdAt).format('DD/MM/YYYY')), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: () => redirectToEdit(document.id),\n    color: \"primary\",\n    variant: \"outlined\",\n    className: classes.importButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314\n    },\n    __self: this\n  }, \"Edit\")), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: () => handleClickOpen(document),\n    color: \"primary\",\n    variant: \"outlined\",\n    className: classes.importButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323\n    },\n    __self: this\n  }, \"Share\")), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: () => startDownload(document.id),\n    color: \"primary\",\n    variant: \"outlined\",\n    className: classes.importButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332\n    },\n    __self: this\n  }, \"Download\")))))), React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345\n    },\n    __self: this\n  }, \"Sharing\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346\n    },\n    __self: this\n  }, React.createElement(DialogContentText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347\n    },\n    __self: this\n  }, \"To share this dataset(\", sharedDocument.title, \") to another user or publicly, please select privacy setting.\"), React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351\n    },\n    __self: this\n  }, React.createElement(RadioGroup, {\n    row: true,\n    \"aria-label\": \"Privacy Options\",\n    name: \"privacyOptions\",\n    className: classes.nameContainer,\n    value: selectedPrivacy,\n    onChange: handleRadioChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352\n    },\n    __self: this\n  }, React.createElement(FormControlLabel, {\n    value: privacyOptions.PRIVATE,\n    control: React.createElement(Radio, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353\n      },\n      __self: this\n    }),\n    label: \"Private\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: classes.spacer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354\n    },\n    __self: this\n  }), React.createElement(FormControlLabel, {\n    value: privacyOptions.SHARED,\n    control: React.createElement(Radio, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }),\n    label: \"Share With Others\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: classes.spacer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356\n    },\n    __self: this\n  }), React.createElement(FormControlLabel, {\n    value: privacyOptions.PUBLIC,\n    control: React.createElement(Radio, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357\n      },\n      __self: this\n    }),\n    label: \"Public\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357\n    },\n    __self: this\n  })), React.createElement(\"span\", {\n    className: classes.spacer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359\n    },\n    __self: this\n  })), selectedPrivacy == 'shared' && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    variant: \"outlined\",\n    square: true,\n    className: classes.userListPaper,\n    style: {\n      height: 200,\n      maxHeight: 200,\n      overflow: 'auto'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363\n    },\n    __self: this\n  }, React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364\n    },\n    __self: this\n  }, userEmailList.map(email => React.createElement(\"div\", {\n    key: \"div-\".concat(email.userId),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366\n    },\n    __self: this\n  }, React.createElement(ListItem, {\n    key: email.userId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367\n    },\n    __self: this\n  }, React.createElement(ListItemText, {\n    primary: email.email,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368\n    },\n    __self: this\n  })), React.createElement(Divider, {\n    component: \"li\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370\n    },\n    __self: this\n  }))))), React.createElement(Paper, {\n    className: classes.userListPaper,\n    style: {\n      position: 'relative',\n      top: -200,\n      left: 265\n    },\n    elevation: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    className: classes.textField,\n    error: isError // fullWidth\n    ,\n    helperText: isError ? helperText : null,\n    label: \"Email Address\",\n    name: \"email\",\n    onChange: handleChangeUserEmail,\n    type: \"text\",\n    value: userEmail,\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377\n    },\n    __self: this\n  }), React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: userAddToShare,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391\n    },\n    __self: this\n  }, \"Add User\")))), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: shareDocument,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401\n    },\n    __self: this\n  }, \"Share\"), React.createElement(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404\n    },\n    __self: this\n  }, \"Cancel\")))))), React.createElement(CardActions, {\n    className: classes.actions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412\n    },\n    __self: this\n  }, React.createElement(TablePagination, {\n    component: \"div\",\n    count: activeDocumentList.length,\n    onChangePage: handlePageChange,\n    onChangeRowsPerPage: handleRowsPerPageChange,\n    page: page,\n    rowsPerPage: rowsPerPage,\n    rowsPerPageOptions: [5, 10, 25],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413\n    },\n    __self: this\n  })), React.createElement(Snackbar, {\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'center'\n    },\n    autoHideDuration: 4000,\n    onClose: handleCloseSnackBar,\n    open: openSnackBar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423\n    },\n    __self: this\n  }, React.createElement(SnackBarWrapper, {\n    message: snackBarMessage,\n    onClose: handleCloseSnackBar,\n    variant: variantValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432\n    },\n    __self: this\n  })));\n};\n\nDocumentListTable.propTypes = {\n  className: PropTypes.string\n};\nexport default DocumentListTable;","map":{"version":3,"sources":["C:/Users/ayesh/Desktop/TUM/semester 3/Final Presentation/dedas-frontend/src/views/MyDocumentList/components/DocumentListTable/DocumentListTable.js"],"names":["React","useState","useEffect","useHistory","clsx","PropTypes","moment","PerfectScrollbar","makeStyles","Button","Card","CardActions","CardContent","Grid","Radio","Table","TableBody","TableCell","TableHead","TablePagination","TableRow","TextField","Typography","List","ListItem","ListItemText","Paper","Divider","Snackbar","RadioGroup","FormControlLabel","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","SnackBarWrapper","DocumentService","UserService","AccessGroupService","saveAs","useStyles","theme","root","content","padding","inner","minWidth","nameContainer","display","alignItems","avatar","marginRight","spacing","actions","justifyContent","tableCell","width","userListPaper","maxWidth","textField","marginBottom","spacer","flexGrow","DocumentListTable","props","className","activeDocumentList","activePrivacy","privacyOptions","shareFunction","rest","classes","history","rowsPerPage","setRowsPerPage","page","setPage","open","setOpen","value","setValue","PRIVATE","selectedPrivacy","setSelectedPrivacy","sharedDocument","setSharedDocument","userEmailList","setUserEmailList","userEmail","setUserEmail","accessGroup","setAccessGroup","addedUserList","setAddedUserList","deletedUserList","setDeletedUserList","isError","setIsError","helperText","setHelperText","openSnackBar","setOpenSnackBar","snackBarMessage","setSnackBarMessage","variantValue","setVariantValue","handleClickOpen","document","SHARED","getDocumentAccessGroup","id","then","resp","json","data","accessGroups","length","userIds","handleClose","handlePageChange","event","myPage","handleRowsPerPageChange","target","handleRadioChange","handleChangeUserEmail","handleCloseSnackBar","handleOpenSnackBar","shareDocument","accessGroupObject","documentId","modifier","map","u","userId","addedUsers","deletedUsers","result","console","log","setUserNotFoundError","setUserExistAlreadyInListError","setOwnerShouldNotBeInTheListError","userAddToShare","find","user","email","checkUserEmailExist","isExist","isRequester","push","catch","e","redirectToEdit","getDocumentById","pathname","state","columns","column","title","columnsData","fileName","originalFilename","startDownload","downloadDocument","blob","Blob","csvData","type","slice","tableRow","createdAt","format","importButton","PUBLIC","height","maxHeight","overflow","position","top","left","vertical","horizontal","propTypes","string"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    Grid,\r\n    Radio,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TablePagination,\r\n    TableRow,\r\n    TextField,\r\n    Typography,\r\n    List,\r\n    ListItem,\r\n    ListItemText,\r\n    Paper,\r\n    Divider,\r\n    Snackbar,\r\n    RadioGroup,\r\n    FormControlLabel\r\n} from '@material-ui/core';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { SnackBarWrapper } from '../../../../components';\r\n\r\nimport { DocumentService, UserService, AccessGroupService } from 'service';\r\nimport { saveAs } from 'file-saver';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {},\r\n    content: {\r\n        padding: 0\r\n    },\r\n    inner: {\r\n        minWidth: 1050\r\n    },\r\n    nameContainer: {\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    },\r\n    avatar: {\r\n        marginRight: theme.spacing(2)\r\n    },\r\n    actions: {\r\n        justifyContent: 'flex-end'\r\n    },\r\n    tableCell: {\r\n        width: '70%'\r\n    },\r\n    userListPaper : {\r\n        width: '45%',\r\n        maxWidth: 250\r\n    },\r\n    textField : {\r\n        marginBottom : theme.spacing(1)\r\n    },\r\n    spacer: {\r\n        flexGrow: 1\r\n    },\r\n}));\r\n\r\nconst DocumentListTable = props => {\r\n    const { className, activeDocumentList, activePrivacy, privacyOptions, shareFunction, ...rest } = props;\r\n\r\n    const classes = useStyles();\r\n    let history = useHistory();\r\n\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n    const [page, setPage] = useState(0);\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const [value, setValue] = React.useState('');\r\n    const [selectedPrivacy, setSelectedPrivacy] = React.useState(privacyOptions.PRIVATE);\r\n    const [sharedDocument, setSharedDocument] = React.useState({});\r\n    const [userEmailList, setUserEmailList] = React.useState([]);\r\n    const [userEmail, setUserEmail] = React.useState('');\r\n    const [accessGroup, setAccessGroup] = React.useState({});\r\n    const [addedUserList, setAddedUserList] = React.useState([]);\r\n    const [deletedUserList, setDeletedUserList] = React.useState([]);\r\n    const [isError, setIsError] = React.useState(false);\r\n    const [helperText, setHelperText] = React.useState(null);\r\n    const [openSnackBar, setOpenSnackBar] = React.useState(false);\r\n    const [snackBarMessage, setSnackBarMessage] = React.useState('');\r\n    const [variantValue, setVariantValue] = React.useState('success');\r\n\r\n\r\n    const handleClickOpen = (document) => {\r\n        setSharedDocument(document);\r\n        if(activePrivacy === privacyOptions.SHARED) {\r\n            AccessGroupService.getDocumentAccessGroup(document.id)\r\n                .then(resp => resp.json())\r\n                .then(data => {\r\n                    if(data.accessGroups && data.accessGroups.length > 0) {\r\n                        setAccessGroup(data.accessGroups[0]);\r\n                        setUserEmailList(data.accessGroups[0].userIds)\r\n                    }\r\n                })\r\n        }\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        setAccessGroup({});\r\n        setUserEmailList([]);\r\n        setAddedUserList([]);\r\n        setDeletedUserList([]);\r\n        setUserEmail('');\r\n        setSelectedPrivacy(activePrivacy);\r\n        setIsError(false);\r\n        setHelperText(null);\r\n    };\r\n\r\n    const handlePageChange = (event, myPage) => {\r\n        setPage(myPage);\r\n    };\r\n\r\n    const handleRowsPerPageChange = event => {\r\n        setPage(0);\r\n        setRowsPerPage(event.target.value);\r\n    };\r\n\r\n    const handleRadioChange = (event) => {\r\n        setSelectedPrivacy(event.target.value);\r\n    };\r\n    const handleChangeUserEmail = (event) => {\r\n        setUserEmail(event.target.value);\r\n        setIsError(false);\r\n        setHelperText(null);\r\n    }\r\n\r\n    const handleCloseSnackBar = () => {\r\n        setSnackBarMessage('');\r\n        setOpenSnackBar(false);\r\n        setVariantValue('success');\r\n    };\r\n\r\n    const handleOpenSnackBar = (variantValue, snackBarMessage) => {\r\n        setSnackBarMessage(snackBarMessage);\r\n        setVariantValue(variantValue);\r\n        setOpenSnackBar(true);\r\n    }\r\n\r\n    const shareDocument = () => {\r\n        let accessGroupObject;\r\n        if(selectedPrivacy === activePrivacy) {\r\n            if( selectedPrivacy !== privacyOptions.SHARED || !(addedUserList.length > 0 || deletedUserList.length > 0)) {\r\n                return;\r\n            }\r\n            accessGroupObject = {\r\n                accessGroup: { documentId : sharedDocument.id, modifier: 'r', userIds: userEmailList.map(u=>u.userId)},\r\n                addedUsers: {userIds: addedUserList.map(u=>u.userId)},\r\n                deletedUsers: {userIds: deletedUserList.map(u=>u.userId)}\r\n            };\r\n        }\r\n\r\n        else if(selectedPrivacy === privacyOptions.SHARED) {\r\n            accessGroupObject = {accessGroup: { documentId : sharedDocument.id, modifier: 'r', userIds: userEmailList.map(u=>u.userId)}};\r\n        } \r\n\r\n        shareFunction(activePrivacy, selectedPrivacy, sharedDocument, accessGroupObject)\r\n                .then(result => {\r\n                    if(!result) {\r\n                        // open snack bar error\r\n                        console.log('something went wrong');\r\n                        handleOpenSnackBar('error', 'Something went wrong while sharing document');\r\n                        \r\n                    } else {\r\n                        handleOpenSnackBar('success', 'Document is successfully shared');\r\n                        handleClose()\r\n                    }\r\n            })\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        setPage(0);\r\n        setRowsPerPage(10);\r\n        setSelectedPrivacy(activePrivacy);\r\n    }, [activeDocumentList]);\r\n\r\n    const setUserNotFoundError = () => {\r\n        setIsError(true);\r\n        setHelperText('User not found in the system')\r\n    }\r\n\r\n    const setUserExistAlreadyInListError = () => {\r\n        setIsError(true);\r\n        setHelperText('User is already exist in the list')\r\n    }\r\n\r\n    const setOwnerShouldNotBeInTheListError = () => {\r\n        setIsError(true);\r\n        setHelperText('Owner should not be in the list')\r\n    }\r\n\r\n    const userAddToShare = () => {\r\n        console.log('user email ', userEmail);\r\n\r\n        if(userEmailList.find(user => user.email === userEmail)) {\r\n            setUserExistAlreadyInListError();\r\n            return;\r\n        }\r\n        UserService.checkUserEmailExist(userEmail)\r\n            .then(resp => resp.json())\r\n            .then(data => {\r\n                //TODO: check ownerId, share user email should not be owner email\r\n                if(data.isExist) {\r\n                    if(data.isRequester) {\r\n                        setOwnerShouldNotBeInTheListError();\r\n                        return;\r\n                    }\r\n                    userEmailList.push({email: data.email, userId: data.userId});\r\n                    addedUserList.push({email: data.email, userId: data.userId});\r\n                    console.log(userEmailList);\r\n                    setUserEmail('');\r\n                    handleOpenSnackBar('success', 'User added successfully');\r\n                } else {\r\n                    setUserNotFoundError();\r\n                }\r\n            })\r\n            .catch((e) => {\r\n                console.log(e);\r\n                handleOpenSnackBar('error', 'Could not add user in the list')\r\n            });\r\n    }\r\n\r\n    const redirectToEdit = (documentId) => {\r\n        DocumentService.getDocumentById(documentId)\r\n            .then(resp => resp.json())\r\n            .then(data => {\r\n                history.push({\r\n                    pathname: '/editor',\r\n                    state: {\r\n                        columns: data.data.map(column => column.title),\r\n                        columnsData: data.data,\r\n                        fileName: data.originalFilename,\r\n                        title: data.title,\r\n                        id: data.id\r\n                    }\r\n                });\r\n            }).catch((e) => {\r\n                console.log(e);\r\n                handleOpenSnackBar('error', 'Colud not redirect to Editor page')\r\n            });\r\n    }\r\n\r\n    const startDownload = (documentId) => {\r\n        DocumentService.downloadDocument(documentId)\r\n            .then(resp => resp.json())\r\n            .then(data => {\r\n                var blob = new Blob([data.csvData], { type: 'text/csv' });\r\n                saveAs(blob, data.fileName);\r\n            }).catch((e) => {\r\n                console.log(e);\r\n                handleOpenSnackBar('error', 'Something went wrong on download')\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Card\r\n            {...rest}\r\n            className={clsx(classes.root, className)}\r\n        >\r\n            <CardContent className={classes.content}>\r\n                <PerfectScrollbar>\r\n                    <div className={classes.inner}>\r\n                        <Table>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell className={classes.tableCell}>Name</TableCell>\r\n                                    <TableCell className={classes.tableCell}>Privacy</TableCell>\r\n                                    <TableCell align=\"right\">Upload Date</TableCell>\r\n                                    <TableCell align=\"right\"></TableCell>\r\n                                    <TableCell align=\"right\"></TableCell>\r\n                                    <TableCell align=\"right\"></TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {activeDocumentList.slice((page * rowsPerPage), ((page + 1) * rowsPerPage)).map(document => (\r\n                                    <TableRow\r\n                                        className={classes.tableRow}\r\n                                        hover\r\n                                        key={document.id}\r\n                                    >\r\n                                        <TableCell className={classes.tableCell}>\r\n                                            <div className={classes.nameContainer}>\r\n                                                <Typography variant=\"body1\">{document.title}</Typography>\r\n                                            </div>\r\n                                        </TableCell>\r\n                                        <TableCell className={classes.tableCell}>\r\n                                            <div className={classes.nameContainer}>\r\n                                                <Typography variant=\"body1\">{activePrivacy}</Typography>\r\n                                            </div>\r\n                                        </TableCell>\r\n                                        <TableCell align=\"right\">\r\n                                            {moment(document.createdAt).format('DD/MM/YYYY')}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"right\">\r\n                                            <Button\r\n                                                onClick={() => redirectToEdit(document.id)}\r\n                                                color=\"primary\"\r\n                                                variant=\"outlined\"\r\n                                                className={classes.importButton}>\r\n                                                Edit\r\n                                            </Button>\r\n                                        </TableCell>\r\n                                        <TableCell align=\"right\">\r\n                                            <Button\r\n                                                onClick={() => handleClickOpen(document)}\r\n                                                color=\"primary\"\r\n                                                variant=\"outlined\"\r\n                                                className={classes.importButton}>\r\n                                                Share\r\n                                            </Button>\r\n                                        </TableCell>\r\n                                        <TableCell align=\"right\">\r\n                                            <Button\r\n                                                onClick={() => startDownload(document.id)}\r\n                                                color=\"primary\"\r\n                                                variant=\"outlined\"\r\n                                                className={classes.importButton}>\r\n                                                Download\r\n                                            </Button>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                        <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                            <DialogTitle id=\"form-dialog-title\">Sharing</DialogTitle>\r\n                            <DialogContent>\r\n                                <DialogContentText>\r\n                                    To share this dataset({sharedDocument.title}) to another user or publicly, please select\r\n                                    privacy setting.\r\n                                </DialogContentText>\r\n                                <Grid>\r\n                                    <RadioGroup row aria-label=\"Privacy Options\" name=\"privacyOptions\" className={classes.nameContainer} value={selectedPrivacy} onChange={handleRadioChange}>\r\n                                        <FormControlLabel value={privacyOptions.PRIVATE} control={<Radio />} label=\"Private\" />\r\n                                        <span className={classes.spacer}/>\r\n                                        <FormControlLabel value={privacyOptions.SHARED} control={<Radio />} label=\"Share With Others\" />\r\n                                        <span className={classes.spacer}/>\r\n                                        <FormControlLabel value={privacyOptions.PUBLIC} control={<Radio />} label=\"Public\" />\r\n                                    </RadioGroup>\r\n                                    <span className={classes.spacer}/>\r\n                                </Grid>\r\n                                {selectedPrivacy == 'shared' && \r\n                                    <div>\r\n                                        <Paper variant=\"outlined\" square className={classes.userListPaper} style={{ height: 200, maxHeight: 200, overflow: 'auto'}}>\r\n                                            <List >\r\n                                                {userEmailList.map(email => (\r\n                                                    <div key={`div-${email.userId}`}>\r\n                                                        <ListItem key={email.userId}>\r\n                                                            <ListItemText primary={email.email} />\r\n                                                        </ListItem>\r\n                                                        <Divider component=\"li\" />\r\n                                                    </div>\r\n                                                ))}\r\n                                            </List>\r\n                                        </Paper>\r\n                                        <Paper className={classes.userListPaper} style={{position: 'relative', top: -200, left: 265}}\r\n                                            elevation={0}>\r\n                                            <TextField\r\n                                                className={classes.textField}\r\n                                                error={isError}\r\n                                                // fullWidth\r\n                                                helperText={\r\n                                                    isError ? helperText : null\r\n                                                }\r\n                                                label=\"Email Address\"\r\n                                                name=\"email\"\r\n                                                onChange={handleChangeUserEmail}\r\n                                                type=\"text\"\r\n                                                value={userEmail}\r\n                                                variant=\"outlined\"\r\n                                            />\r\n                                            <Button variant=\"outlined\" color=\"primary\" onClick={userAddToShare}>\r\n                                                Add User\r\n                                            </Button>\r\n                                            \r\n                                        </Paper>\r\n\r\n                                    </div>\r\n                                }\r\n                            </DialogContent>\r\n                            <DialogActions>\r\n                                <Button onClick={shareDocument} color=\"primary\">\r\n                                    Share\r\n                                </Button>\r\n                                <Button onClick={handleClose} color=\"primary\">\r\n                                    Cancel\r\n                                </Button>\r\n                            </DialogActions>\r\n                        </Dialog>\r\n                    </div>\r\n                </PerfectScrollbar>\r\n            </CardContent>\r\n            <CardActions className={classes.actions}>\r\n                <TablePagination\r\n                    component=\"div\"\r\n                    count={activeDocumentList.length}\r\n                    onChangePage={handlePageChange}\r\n                    onChangeRowsPerPage={handleRowsPerPageChange}\r\n                    page={page}\r\n                    rowsPerPage={rowsPerPage}\r\n                    rowsPerPageOptions={[5, 10, 25]}\r\n                />\r\n            </CardActions>\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center'\r\n                }}\r\n                autoHideDuration={4000}\r\n                onClose={handleCloseSnackBar}\r\n                open={openSnackBar}\r\n            >\r\n                <SnackBarWrapper\r\n                    message={snackBarMessage}\r\n                    onClose={handleCloseSnackBar}\r\n                    variant={variantValue}\r\n                />\r\n            </Snackbar>\r\n        </Card>\r\n    );\r\n};\r\n\r\nDocumentListTable.propTypes = {\r\n    className: PropTypes.string\r\n};\r\n\r\nexport default DocumentListTable;\r\n"]},"metadata":{},"sourceType":"module"}