{"ast":null,"code":"import _objectWithoutProperties from \"C:\\\\Users\\\\ayesh\\\\Desktop\\\\TUM\\\\semester 3\\\\Final Presentation\\\\dedas-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\ayesh\\\\Desktop\\\\TUM\\\\semester 3\\\\Final Presentation\\\\dedas-frontend\\\\src\\\\components\\\\SnackBarWrapper\\\\SnackBarContentWrapper.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { amber, green } from '@material-ui/core/colors';\nimport IconButton from '@material-ui/core/IconButton';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport { makeStyles } from '@material-ui/core/styles';\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon\n};\nconst useStyles = makeStyles(theme => ({\n  success: {\n    backgroundColor: green[600]\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark\n  },\n  info: {\n    backgroundColor: theme.palette.primary.main\n  },\n  warning: {\n    backgroundColor: amber[700]\n  },\n  icon: {\n    fontSize: 20\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1)\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center'\n  }\n}));\n\nconst SnackbarContentWrapper = props => {\n  const classes = useStyles();\n\n  const className = props.className,\n        message = props.message,\n        onClose = props.onClose,\n        variant = props.variant,\n        other = _objectWithoutProperties(props, [\"className\", \"message\", \"onClose\", \"variant\"]);\n\n  const Icon = variantIcon[variant];\n  return React.createElement(SnackbarContent, Object.assign({\n    className: clsx(classes[variant], className),\n    \"aria-describedby\": \"client-snackbar\",\n    message: React.createElement(\"span\", {\n      id: \"client-snackbar\",\n      className: classes.message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      className: clsx(classes.icon, classes.iconVariant),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), message),\n    action: [React.createElement(IconButton, {\n      key: \"close\",\n      \"aria-label\": \"close\",\n      color: \"inherit\",\n      onClick: onClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(CloseIcon, {\n      className: classes.icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }))]\n  }, other, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }));\n};\n\nSnackbarContentWrapper.propTypes = {\n  className: PropTypes.string,\n  message: PropTypes.string,\n  onClose: PropTypes.func,\n  variant: PropTypes.oneOf(['error', 'info', 'success', 'warning']).isRequired\n};\nexport default SnackbarContentWrapper;","map":{"version":3,"sources":["C:/Users/ayesh/Desktop/TUM/semester 3/Final Presentation/dedas-frontend/src/components/SnackBarWrapper/SnackBarContentWrapper.js"],"names":["React","PropTypes","clsx","CheckCircleIcon","ErrorIcon","InfoIcon","CloseIcon","amber","green","IconButton","SnackbarContent","WarningIcon","makeStyles","variantIcon","success","warning","error","info","useStyles","theme","backgroundColor","palette","dark","primary","main","icon","fontSize","iconVariant","opacity","marginRight","spacing","message","display","alignItems","SnackbarContentWrapper","props","classes","className","onClose","variant","other","Icon","propTypes","string","func","oneOf","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { amber, green } from '@material-ui/core/colors';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst variantIcon = {\r\n    success: CheckCircleIcon,\r\n    warning: WarningIcon,\r\n    error: ErrorIcon,\r\n    info: InfoIcon\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    success: {\r\n        backgroundColor: green[600]\r\n    },\r\n    error: {\r\n        backgroundColor: theme.palette.error.dark\r\n    },\r\n    info: {\r\n        backgroundColor: theme.palette.primary.main\r\n    },\r\n    warning: {\r\n        backgroundColor: amber[700]\r\n    },\r\n    icon: {\r\n        fontSize: 20\r\n    },\r\n    iconVariant: {\r\n        opacity: 0.9,\r\n        marginRight: theme.spacing(1)\r\n    },\r\n    message: {\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    }\r\n}));\r\n\r\nconst SnackbarContentWrapper = props => {\r\n    const classes = useStyles();\r\n    const { className, message, onClose, variant, ...other } = props;\r\n    const Icon = variantIcon[variant];\r\n\r\n    return (\r\n        <SnackbarContent\r\n            className={clsx(classes[variant], className)}\r\n            aria-describedby=\"client-snackbar\"\r\n            message={\r\n                <span id=\"client-snackbar\" className={classes.message}>\r\n          <Icon className={clsx(classes.icon, classes.iconVariant)}/>\r\n                    {message}\r\n        </span>\r\n            }\r\n            action={[\r\n                <IconButton key=\"close\" aria-label=\"close\" color=\"inherit\" onClick={onClose}>\r\n                    <CloseIcon className={classes.icon}/>\r\n                </IconButton>\r\n            ]}\r\n            {...other}\r\n        />\r\n    );\r\n};\r\n\r\nSnackbarContentWrapper.propTypes = {\r\n    className: PropTypes.string,\r\n    message: PropTypes.string,\r\n    onClose: PropTypes.func,\r\n    variant: PropTypes.oneOf(['error', 'info', 'success', 'warning']).isRequired\r\n};\r\n\r\nexport default SnackbarContentWrapper;\r\n"]},"metadata":{},"sourceType":"module"}