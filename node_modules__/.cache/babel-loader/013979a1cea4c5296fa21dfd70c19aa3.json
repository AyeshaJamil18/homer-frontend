{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\ayesh\\\\Desktop\\\\TUM\\\\semester 3\\\\Final Presentation\\\\dedas-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"C:\\\\Users\\\\ayesh\\\\Desktop\\\\TUM\\\\semester 3\\\\Final Presentation\\\\dedas-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\ayesh\\\\Desktop\\\\TUM\\\\semester 3\\\\Final Presentation\\\\dedas-frontend\\\\src\\\\views\\\\DocumentView\\\\components\\\\DocumentViewTable\\\\DocumentViewTable.js\";\nimport React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { useHistory, useLocation, useParams } from 'react-router-dom';\nimport AnonymizationAssignment from 'service/Anonymization/AnonymizationAssignment';\nimport AnonymizationWorkerService from 'service/Anonymization/AnonymizationWorkerService';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button, Card, CardActions, CardContent, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Grid, Radio, Snackbar, Table, TableBody, TableCell, TableHead, TableRow, TextField, Chip, TablePagination } from '@material-ui/core';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport { DocumentService } from 'service';\nimport { SnackBarWrapper } from 'components';\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport validate from 'validate.js';\nconst anonymizationWorker = new AnonymizationWorkerService();\nconst schema = {\n  fileName: {\n    presence: {\n      allowEmpty: false,\n      message: 'is required'\n    },\n    format: {\n      pattern: '^[a-zA-Z0-9-.@_]*$',\n      flags: 'i',\n      message: 'can only contain English Alphabets, Numbers from 0-9 and speical characters .@-_'\n    }\n  }\n};\nconst printStatement = [];\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1050 // WebkitTransform: 'rotateX(180deg)'\n\n  },\n  scrollBar: {// WebkitTransform: 'rotateX(180deg)'\n  },\n  fixStyle: {\n    // float: 'left'\n    display: 'flex'\n  },\n  buttonNormal: {\n    backgroundColor: \"white\"\n  },\n  buttonSelected: {\n    backgroundColor: \"Green\"\n  },\n  nameContainer: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  actions: {\n    justifyContent: 'flex-end'\n  },\n  tableRow: {\n    border: 'none'\n  },\n  tableCell: {\n    borderRight: 'solid 1px lightgrey',\n    borderLeft: 'solid 1px lightgrey',\n    borderBottom: 'none' //   border-right: solid 1px #f00;\n    // border-left: solid 1px #f00;\n\n  },\n  tableCell_header: {\n    borderRight: 'solid 1px lightgrey',\n    borderLeft: 'solid 1px lightgrey',\n    borderBottom: 'none' //   border-right: solid 1px #f00;\n    // border-left: solid 1px #f00;\n\n  },\n  tableHead: {\n    backgroundColor: '#f0f0f0'\n  },\n  table: {\n    borderCollapse: 'collapse'\n  },\n  row: {\n    height: '42px',\n    display: 'flex',\n    alignItems: 'center',\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(3)\n  },\n  spacer: {\n    flexGrow: 1\n  },\n  button: {\n    backgroundColor: 'var(--backgroundColor)'\n  },\n  MaskingClass: {\n    color: 'black',\n    backgroundColor: '#f4e9af',\n    marginRight: theme.spacing(2),\n    marginTop: theme.spacing(1)\n  },\n  HashingClass: {\n    color: 'black',\n    backgroundColor: '#D0F3AD',\n    marginRight: theme.spacing(2),\n    marginTop: theme.spacing(1)\n  },\n  HashingWithSaltClass: {\n    color: 'black',\n    backgroundColor: '#CCEDF4',\n    marginRight: theme.spacing(2),\n    marginTop: theme.spacing(1)\n  },\n  RandomClass: {\n    color: 'black',\n    backgroundColor: '#EC9C88',\n    marginRight: theme.spacing(2),\n    marginTop: theme.spacing(1)\n  },\n  GeneralizationClass: {\n    color: 'black',\n    backgroundColor: '#CAC7EE',\n    marginRight: theme.spacing(2),\n    marginTop: theme.spacing(1)\n  },\n  DeleteClass: {\n    color: 'black',\n    backgroundColor: '#E1C3D9',\n    marginRight: theme.spacing(2),\n    marginTop: theme.spacing(1)\n  },\n  DialogClass: {\n    color: 'red'\n  },\n  TheInput: {\n    padding: 10,\n    fontSize: 12,\n    labelFontSize: 40\n  }\n}));\nconst Default = {\n  '--backgroundColor': 'white'\n};\nconst MaskingStyle = {\n  '--backgroundColor': '#f4e9af'\n};\nconst HashingStyle = {\n  '--backgroundColor': '#D0F3AD'\n};\nconst HashingWithSaltStyle = {\n  '--backgroundColor': '#CCEDF4'\n};\nconst RandomStyle = {\n  '--backgroundColor': '#EC9C88'\n};\nconst GeneralizationStyle = {\n  '--backgroundColor': '#CAC7EE'\n};\nconst DeleteStyle = {\n  '--backgroundColor': '#E1C3D9'\n};\n\nconst DocumentViewTable = props => {\n  const className = props.className,\n        rest = _objectWithoutProperties(props, [\"className\"]);\n\n  let location = useLocation();\n  let history = useHistory();\n  const classes = useStyles();\n\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        page = _useState2[0],\n        setPage = _useState2[1];\n\n  const _useState3 = useState(10),\n        _useState4 = _slicedToArray(_useState3, 2),\n        rowsPerPage = _useState4[0],\n        setRowsPerPage = _useState4[1];\n\n  const _useState5 = useState({\n    isValid: true,\n    value: {},\n    touched: false,\n    error: {}\n  }),\n        _useState6 = _slicedToArray(_useState5, 2),\n        fileNameFormState = _useState6[0],\n        setFileNameFormState = _useState6[1];\n\n  let _React$useState = React.useState({}),\n      _React$useState2 = _slicedToArray(_React$useState, 1),\n      anonymizationAssignmentsObject = _React$useState2[0];\n\n  const _useState7 = useState(0),\n        _useState8 = _slicedToArray(_useState7, 2),\n        documentId = _useState8[0],\n        setDocumentId = _useState8[1];\n\n  const _useState9 = useState({\n    id: null,\n    title: '',\n    originalFilename: '',\n    data: []\n  }),\n        _useState10 = _slicedToArray(_useState9, 2),\n        document = _useState10[0],\n        setDocument = _useState10[1];\n\n  const _useState11 = useState([]),\n        _useState12 = _slicedToArray(_useState11, 2),\n        documentRowLengthArray = _useState12[0],\n        setDocumentRowLengthArray = _useState12[1];\n\n  const handlePageChange = (event, myPage) => {\n    setPage(myPage);\n  };\n\n  const handleRowsPerPageChange = event => {\n    setPage(0);\n    setRowsPerPage(event.target.value);\n  };\n\n  let _useParams = useParams(),\n      id = _useParams.id;\n\n  useEffect(() => {\n    if (!id) {\n      history.push({\n        pathname: \"/not-found\"\n      });\n    } else {\n      DocumentService.getDocumentById(id).then(resp => resp.json()).then(data => {\n        setDocument(data);\n        setDocumentRowLengthArray(Array.from(Array(data.data[0].data.length).keys())); // get first column data length as a document length\n      }).catch(e => {\n        console.log(e);\n      });\n    }\n  }, []);\n  return React.createElement(Card, Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251\n    },\n    __self: this\n  }), React.createElement(TextField //className={classes.TheInput}\n  // labelFontSize={40}\n  , {\n    label: \"FileName\",\n    name: \"fileName\",\n    placeholder: \"Enter FileName\",\n    value: document.title || '',\n    InputProps: {\n      readOnly: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    className: classes.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267\n    },\n    __self: this\n  }, React.createElement(PerfectScrollbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.inner,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269\n    },\n    __self: this\n  }, React.createElement(Table, {\n    className: classes.table,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    className: classes.tableHead,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    className: classes.tableRow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273\n    },\n    __self: this\n  }, document.data.map(column => React.createElement(TableCell, {\n    className: classes.tableCell_header,\n    key: column.orderPosition,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279\n    },\n    __self: this\n  }, React.createElement(Button, {\n    className: classes.button,\n    disabled: true // style={anonymizationAssignmentsObject[column.orderPosition] ? anonymizationAssignmentsObject[column.orderPosition].color : Default}\n    ,\n    \"aria-controls\": \"simple-menu\",\n    \"aria-haspopup\": \"true\",\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280\n    },\n    __self: this\n  }, column.title, React.createElement(ArrowDropDownIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289\n    },\n    __self: this\n  }))))))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298\n    },\n    __self: this\n  }, documentRowLengthArray.slice(page * rowsPerPage, (page + 1) * rowsPerPage).map(index => React.createElement(TableRow, {\n    className: classes.tableRow,\n    key: index // selected={selectedUsers.indexOf(user.id) !== -1}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300\n    },\n    __self: this\n  }, document.data.map(column => React.createElement(TableCell, {\n    className: classes.tableCell,\n    key: column.orderPosition,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306\n    },\n    __self: this\n  }, column.data[index]))))))))), React.createElement(CardActions, {\n    className: classes.actions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320\n    },\n    __self: this\n  }, React.createElement(TablePagination, {\n    component: \"div\",\n    count: documentRowLengthArray.length,\n    onChangePage: handlePageChange,\n    onChangeRowsPerPage: handleRowsPerPageChange,\n    page: page,\n    rowsPerPage: rowsPerPage,\n    rowsPerPageOptions: [5, 10, 25],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321\n    },\n    __self: this\n  })));\n};\n\nDocumentViewTable.propTypes = {\n  className: PropTypes.string\n};\nexport default DocumentViewTable;","map":{"version":3,"sources":["C:/Users/ayesh/Desktop/TUM/semester 3/Final Presentation/dedas-frontend/src/views/DocumentView/components/DocumentViewTable/DocumentViewTable.js"],"names":["React","useEffect","useState","clsx","PropTypes","PerfectScrollbar","useHistory","useLocation","useParams","AnonymizationAssignment","AnonymizationWorkerService","makeStyles","Button","Card","CardActions","CardContent","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Grid","Radio","Snackbar","Table","TableBody","TableCell","TableHead","TableRow","TextField","Chip","TablePagination","ArrowDropDownIcon","DocumentService","SnackBarWrapper","List","ListItem","Divider","ListItemText","validate","anonymizationWorker","schema","fileName","presence","allowEmpty","message","format","pattern","flags","printStatement","useStyles","theme","root","content","padding","inner","minWidth","scrollBar","fixStyle","display","buttonNormal","backgroundColor","buttonSelected","nameContainer","alignItems","avatar","marginRight","spacing","actions","justifyContent","tableRow","border","tableCell","borderRight","borderLeft","borderBottom","tableCell_header","tableHead","table","borderCollapse","row","height","marginTop","marginBottom","spacer","flexGrow","button","MaskingClass","color","HashingClass","HashingWithSaltClass","RandomClass","GeneralizationClass","DeleteClass","DialogClass","TheInput","fontSize","labelFontSize","Default","MaskingStyle","HashingStyle","HashingWithSaltStyle","RandomStyle","GeneralizationStyle","DeleteStyle","DocumentViewTable","props","className","rest","location","history","classes","page","setPage","rowsPerPage","setRowsPerPage","isValid","value","touched","error","fileNameFormState","setFileNameFormState","anonymizationAssignmentsObject","documentId","setDocumentId","id","title","originalFilename","data","document","setDocument","documentRowLengthArray","setDocumentRowLengthArray","handlePageChange","event","myPage","handleRowsPerPageChange","target","push","pathname","getDocumentById","then","resp","json","Array","from","length","keys","catch","e","console","log","readOnly","map","column","orderPosition","slice","index","propTypes","string"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { useHistory, useLocation, useParams } from 'react-router-dom';\r\nimport AnonymizationAssignment from 'service/Anonymization/AnonymizationAssignment';\r\nimport AnonymizationWorkerService from 'service/Anonymization/AnonymizationWorkerService';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle,\r\n    Grid,\r\n    Radio,\r\n    Snackbar,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TableRow,\r\n    TextField,\r\n    Chip,\r\n    TablePagination\r\n\r\n} from '@material-ui/core';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport { DocumentService } from 'service';\r\n\r\nimport { SnackBarWrapper } from 'components';\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport validate from 'validate.js';\r\n\r\n\r\nconst anonymizationWorker = new AnonymizationWorkerService();\r\n\r\nconst schema = {\r\n    fileName: {\r\n        presence: { allowEmpty: false, message: 'is required' },\r\n        format: {\r\n            pattern: '^[a-zA-Z0-9-.@_]*$',\r\n            flags: 'i',\r\n            message: 'can only contain English Alphabets, Numbers from 0-9 and speical characters .@-_'\r\n        }\r\n    }\r\n};\r\n\r\nconst printStatement= [];\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {},\r\n    content: {\r\n        padding: 0,\r\n    },\r\n    inner: {\r\n        minWidth: 1050,\r\n        // WebkitTransform: 'rotateX(180deg)'\r\n    },\r\n    scrollBar: {\r\n        // WebkitTransform: 'rotateX(180deg)'\r\n    },\r\n    fixStyle: {\r\n        // float: 'left'\r\n        display: 'flex',\r\n    },\r\n    buttonNormal: {\r\n        backgroundColor: \"white\"\r\n    },\r\n    buttonSelected: {\r\n        backgroundColor: \"Green\"\r\n    },\r\n    nameContainer: {\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    },\r\n    avatar: {\r\n        marginRight: theme.spacing(2)\r\n    },\r\n    actions: {\r\n        justifyContent: 'flex-end'\r\n    },\r\n    tableRow: {\r\n        border: 'none'\r\n    },\r\n    tableCell: {\r\n        borderRight: 'solid 1px lightgrey',\r\n        borderLeft: 'solid 1px lightgrey',\r\n        borderBottom: 'none',\r\n        //   border-right: solid 1px #f00;\r\n        // border-left: solid 1px #f00;\r\n    },\r\n    tableCell_header: {\r\n        borderRight: 'solid 1px lightgrey',\r\n        borderLeft: 'solid 1px lightgrey',\r\n        borderBottom: 'none',\r\n\r\n        //   border-right: solid 1px #f00;\r\n        // border-left: solid 1px #f00;\r\n    },\r\n    tableHead: {\r\n        backgroundColor: '#f0f0f0'\r\n    },\r\n    table: {\r\n        borderCollapse: 'collapse'\r\n    },\r\n    row: {\r\n        height: '42px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(3)\r\n    },\r\n    spacer: {\r\n        flexGrow: 1\r\n    },\r\n    button: {\r\n        backgroundColor: 'var(--backgroundColor)',\r\n    },\r\n    MaskingClass: {\r\n        color: 'black',\r\n        backgroundColor: '#f4e9af',\r\n        marginRight: theme.spacing(2),\r\n        marginTop: theme.spacing(1)\r\n    },\r\n    HashingClass: {\r\n        color: 'black',\r\n        backgroundColor: '#D0F3AD',\r\n        marginRight: theme.spacing(2),\r\n        marginTop: theme.spacing(1)\r\n    },\r\n    HashingWithSaltClass: {\r\n        color: 'black',\r\n        backgroundColor: '#CCEDF4',\r\n        marginRight: theme.spacing(2),\r\n        marginTop: theme.spacing(1)\r\n    },\r\n    RandomClass: {\r\n        color: 'black',\r\n        backgroundColor: '#EC9C88',\r\n        marginRight: theme.spacing(2),\r\n        marginTop: theme.spacing(1)\r\n    },\r\n    GeneralizationClass: {\r\n        color: 'black',\r\n        backgroundColor: '#CAC7EE',\r\n        marginRight: theme.spacing(2),\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    DeleteClass: {\r\n        color: 'black',\r\n        backgroundColor: '#E1C3D9',\r\n        marginRight: theme.spacing(2),\r\n        marginTop: theme.spacing(1)\r\n    },\r\n    DialogClass: {\r\n\r\n        color:'red'\r\n    },\r\n    TheInput: {\r\n        padding: 10,\r\n        fontSize: 12,\r\n        labelFontSize: 40\r\n    }\r\n}));\r\n\r\nconst Default = {\r\n    '--backgroundColor': 'white',\r\n};\r\nconst MaskingStyle = {\r\n    '--backgroundColor': '#f4e9af',\r\n};\r\nconst HashingStyle = {\r\n    '--backgroundColor': '#D0F3AD',\r\n};\r\nconst HashingWithSaltStyle= {\r\n     '--backgroundColor': '#CCEDF4'\r\n};\r\nconst RandomStyle= {\r\n     '--backgroundColor': '#EC9C88'\r\n};\r\nconst GeneralizationStyle= {\r\n     '--backgroundColor': '#CAC7EE'\r\n};\r\nconst DeleteStyle= {\r\n     '--backgroundColor': '#E1C3D9'\r\n};\r\n\r\nconst DocumentViewTable = props => {\r\n\r\n    const { className, ...rest } = props;\r\n    let location = useLocation();\r\n    let history = useHistory();\r\n    const classes = useStyles();\r\n\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n    const [fileNameFormState, setFileNameFormState] = useState({\r\n        isValid: true,\r\n        value: {},\r\n        touched: false,\r\n        error: {}\r\n    });\r\n    \r\n    let [anonymizationAssignmentsObject] = React.useState({});\r\n    \r\n    const [documentId, setDocumentId] = useState(0);\r\n    const [document, setDocument] = useState({\r\n        id: null,\r\n        title: '',\r\n        originalFilename: '',\r\n        data : []\r\n    })\r\n    const [documentRowLengthArray, setDocumentRowLengthArray] = useState([]);\r\n    const handlePageChange = (event, myPage) => {\r\n        setPage(myPage);\r\n    };\r\n\r\n    const handleRowsPerPageChange = event => {\r\n        setPage(0);\r\n        setRowsPerPage(event.target.value);\r\n    };\r\n\r\n    let { id } = useParams();\r\n    useEffect(() => {\r\n        if(!id) {\r\n            history.push({\r\n                pathname: \"/not-found\"\r\n            })\r\n        } else {\r\n            DocumentService.getDocumentById(id)\r\n                .then(resp => resp.json())\r\n                .then(data => {\r\n                    setDocument(data);\r\n                    setDocumentRowLengthArray(Array.from(Array(data.data[0].data.length).keys())) // get first column data length as a document length\r\n                }).catch((e) => {\r\n                    console.log(e);\r\n                });\r\n        }\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <Card\r\n            {...rest}\r\n            className={clsx(classes.root, className)}\r\n        >\r\n\r\n                <TextField\r\n                    //className={classes.TheInput}\r\n                    // labelFontSize={40}\r\n                    label=\"FileName\"\r\n                    name = \"fileName\"\r\n                    placeholder = \"Enter FileName\"\r\n                    value={document.title || ''}\r\n                    InputProps={{\r\n                        readOnly: true,\r\n                      }}\r\n                />\r\n                <CardContent className={classes.content}>\r\n                    <PerfectScrollbar >\r\n                        <div className={classes.inner} >\r\n                            <Table className={classes.table}>\r\n                                <TableHead className={classes.tableHead}>\r\n\r\n                                    <TableRow className={classes.tableRow}>\r\n                                        {document.data.map(column => (\r\n                                            <TableCell\r\n                                                className={classes.tableCell_header}\r\n                                                key={column.orderPosition}\r\n                                            >\r\n                                                <div>\r\n                                                    <Button\r\n                                                        className={classes.button}\r\n                                                        disabled\r\n                                                        // style={anonymizationAssignmentsObject[column.orderPosition] ? anonymizationAssignmentsObject[column.orderPosition].color : Default}\r\n                                                        aria-controls=\"simple-menu\"\r\n                                                        aria-haspopup=\"true\"\r\n                                                        variant=\"outlined\"\r\n                                                    >\r\n                                                        {column.title}\r\n                                                        <ArrowDropDownIcon/>\r\n                                                    </Button>\r\n\r\n                                                </div>\r\n                                            </TableCell>\r\n                                        ))}\r\n                                    </TableRow>\r\n\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {documentRowLengthArray.slice((page * rowsPerPage), ((page + 1) * rowsPerPage)).map(index => (\r\n                                        <TableRow\r\n                                            className={classes.tableRow}\r\n                                            key={index}\r\n                                            // selected={selectedUsers.indexOf(user.id) !== -1}\r\n                                        >\r\n                                            {document.data.map(column => (\r\n                                                <TableCell\r\n                                                    className={classes.tableCell}\r\n                                                    key={column.orderPosition}\r\n                                                >\r\n                                                    {column.data[index]}\r\n                                                </TableCell>\r\n                                            ))}\r\n                                        </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                            </div>\r\n                    </PerfectScrollbar>\r\n                </CardContent>\r\n                <CardActions className={classes.actions}>\r\n                    <TablePagination\r\n                        component=\"div\"\r\n                        count={documentRowLengthArray.length}\r\n                        onChangePage={handlePageChange}\r\n                        onChangeRowsPerPage={handleRowsPerPageChange}\r\n                        page={page}\r\n                        rowsPerPage={rowsPerPage}\r\n                        rowsPerPageOptions={[5, 10, 25]}\r\n                    />\r\n                </CardActions>\r\n            </Card>\r\n    );\r\n};\r\n\r\nDocumentViewTable.propTypes = {\r\n    className: PropTypes.string\r\n};\r\n\r\nexport default DocumentViewTable;\r\n"]},"metadata":{},"sourceType":"module"}