{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\ayesh\\\\Desktop\\\\TUM\\\\semester 3\\\\Final Presentation\\\\dedas-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"C:\\\\Users\\\\ayesh\\\\Desktop\\\\TUM\\\\semester 3\\\\Final Presentation\\\\dedas-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\ayesh\\\\Desktop\\\\TUM\\\\semester 3\\\\Final Presentation\\\\dedas-frontend\\\\src\\\\views\\\\Editor\\\\components\\\\EditorTable\\\\EditorTable.js\";\nimport React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport AnonymizationAssignment from 'service/Anonymization/AnonymizationAssignment';\nimport AnonymizationWorkerService from 'service/Anonymization/AnonymizationWorkerService';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button, Card, CardActions, CardContent, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Grid, Radio, Snackbar, Table, TableBody, TableCell, TableHead, TableRow, TextField } from '@material-ui/core';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport { DocumentService } from 'service';\nimport { SnackBarWrapper } from 'components';\nlet AnonymizationAssignmentArray = [];\nconst anonymizationWorker = new AnonymizationWorkerService();\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1050\n  },\n  nameContainer: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  actions: {\n    justifyContent: 'flex-end'\n  },\n  tableRow: {\n    border: 'none'\n  },\n  tableCell: {\n    borderRight: 'solid 1px lightgrey',\n    borderLeft: 'solid 1px lightgrey',\n    borderBottom: 'none' //   border-right: solid 1px #f00;\n    // border-left: solid 1px #f00;\n\n  },\n  tableHead: {\n    backgroundColor: '#f0f0f0'\n  },\n  table: {\n    borderCollapse: 'collapse'\n  },\n  row: {\n    height: '42px',\n    display: 'flex',\n    alignItems: 'center',\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(3)\n  },\n  spacer: {\n    flexGrow: 1\n  },\n  TheInput: {\n    padding: 10,\n    fontSize: 12,\n    labelFontSize: 40\n  }\n}));\n\nconst EditorTable = props => {\n  const className = props.className,\n        users = props.users,\n        rest = _objectWithoutProperties(props, [\"className\", \"users\"]);\n\n  let location = useLocation();\n  let history = useHistory();\n  let FileName = location.state.fileName.substring(0, location.state.fileName.indexOf(\".\"));\n\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        open = _React$useState2[0],\n        setOpen = _React$useState2[1];\n\n  const classes = useStyles();\n\n  const _useState = useState(10),\n        _useState2 = _slicedToArray(_useState, 2),\n        rowsPerPage = _useState2[0],\n        setRowsPerPage = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        page = _useState4[0],\n        setPage = _useState4[1];\n\n  const _React$useState3 = React.useState(false),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        openSuccess = _React$useState4[0],\n        setOpenSuccess = _React$useState4[1];\n\n  const _React$useState5 = React.useState(false),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        openError = _React$useState6[0],\n        setOpenError = _React$useState6[1];\n\n  const _React$useState7 = React.useState(false),\n        _React$useState8 = _slicedToArray(_React$useState7, 2),\n        openErrorSpecial = _React$useState8[0],\n        setOpenErrorSpecial = _React$useState8[1];\n\n  const _React$useState9 = React.useState(false),\n        _React$useState10 = _slicedToArray(_React$useState9, 2),\n        openErrorEmptyString = _React$useState10[0],\n        setErrorEmptyString = _React$useState10[1];\n\n  const _React$useState11 = React.useState(null),\n        _React$useState12 = _slicedToArray(_React$useState11, 2),\n        anchorEl = _React$useState12[0],\n        setAnchorEl = _React$useState12[1];\n\n  const _React$useState13 = React.useState(''),\n        _React$useState14 = _slicedToArray(_React$useState13, 2),\n        selectedValueGenStep = _React$useState14[0],\n        setSelectedValueGenStep = _React$useState14[1];\n\n  const _React$useState15 = React.useState(''),\n        _React$useState16 = _slicedToArray(_React$useState15, 2),\n        selectedValueGenType = _React$useState16[0],\n        setSelectedValueGenType = _React$useState16[1];\n\n  const _React$useState17 = React.useState(''),\n        _React$useState18 = _slicedToArray(_React$useState17, 2),\n        selectedValueMaskPat = _React$useState18[0],\n        setSelectedValueMaskPat = _React$useState18[1];\n\n  const _React$useState19 = React.useState(''),\n        _React$useState20 = _slicedToArray(_React$useState19, 2),\n        selectedValueMaskRange = _React$useState20[0],\n        setSelectedValueMaskRange = _React$useState20[1];\n\n  const _React$useState21 = React.useState(''),\n        _React$useState22 = _slicedToArray(_React$useState21, 2),\n        selectedValue = _React$useState22[0],\n        setSelectedValue = _React$useState22[1];\n\n  const _React$useState23 = React.useState(''),\n        _React$useState24 = _slicedToArray(_React$useState23, 2),\n        selectedValue_Start = _React$useState24[0],\n        setSelectedValue_Start = _React$useState24[1];\n\n  const _React$useState25 = React.useState(''),\n        _React$useState26 = _slicedToArray(_React$useState25, 2),\n        selectedValue_Cipher = _React$useState26[0],\n        setSelectedValue_Cipher = _React$useState26[1];\n\n  const _React$useState27 = React.useState(''),\n        _React$useState28 = _slicedToArray(_React$useState27, 2),\n        selectedValue_Hash = _React$useState28[0],\n        setSelectedValue_Hash = _React$useState28[1];\n\n  const _React$useState29 = React.useState(''),\n        _React$useState30 = _slicedToArray(_React$useState29, 2),\n        value = _React$useState30[0],\n        setValue = _React$useState30[1];\n\n  const _React$useState31 = React.useState(null),\n        _React$useState32 = _slicedToArray(_React$useState31, 2),\n        workingColumn = _React$useState32[0],\n        setWorkingColumn = _React$useState32[1];\n\n  let document = {\n    title: location.state.fileName,\n    originalFilename: location.state.fileName,\n    data: location.state.columnsData\n  };\n\n  const handleClickMenu = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleRadioChangeGenType = event => {\n    setSelectedValueGenType(event.target.value);\n  };\n\n  const handleRadioChangeGenStep = event => {\n    setSelectedValueGenStep(event.target.value);\n  };\n\n  const handleRadioChangeMaskPat = event => {\n    setSelectedValueMaskPat(event.target.value);\n  };\n\n  const handleRadioChangeMaskRange = event => {\n    setSelectedValueMaskRange(event.target.value);\n  };\n\n  const handleRadioChange = event => {\n    setSelectedValue(event.target.value);\n  };\n\n  const handleRadioChange_Cipher = event => {\n    setSelectedValue_Cipher(event.target.value);\n  };\n\n  const handleRadioChange_Start = event => {\n    setSelectedValue_Start(event.target.value);\n  };\n\n  const handleClickUrl = () => {\n    setValue('https://wwww.dedas.com/documents/id');\n  };\n\n  const handleChange = e => {\n    this.setState({\n      value: e\n    });\n    console.log(e);\n  };\n\n  const handleClickOpen = position => {\n    console.log('position' + position);\n    setWorkingColumn(position);\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    console.log('refreshing');\n  }, []);\n\n  const ApplyAnonymization = () => {\n    console.log(anonymizationWorker.getCurrentStatus());\n    anonymizationWorker.process(AnonymizationAssignmentArray, document);\n    AnonymizationAssignmentArray = [];\n    history.push({\n      pathname: '/editor',\n      state: {\n        columns: document.data.map(column => column.title),\n        columnsData: document.data,\n        fileName: document.originalFilename\n      }\n    });\n  };\n\n  const saveAnnonymization = () => {\n    let options = {};\n    let type = '';\n\n    if (selectedValue === 'Masking') {\n      options = {\n        start: selectedValue_Start,\n        pattern: selectedValueMaskPat,\n        range: selectedValueMaskRange\n      };\n      type = 'mask';\n    } else if (selectedValue === 'Hashing') {\n      options = {\n        Cipher: setSelectedValue_Cipher,\n        salt: false\n      };\n      type = 'hash';\n    } else if (selectedValue === 'HashingWithSalt') {\n      options = {\n        Cipher: setSelectedValue_Cipher,\n        salt: true\n      };\n      type = 'hash';\n    } else if (selectedValue === 'Random') {\n      options = {};\n      type = 'random';\n    } else if (selectedValue === 'Generalization') {\n      options = {\n        stepSize: selectedValueGenStep,\n        type: selectedValueGenType\n      };\n      type = 'generalization';\n    } else if (selectedValue === 'DeletetheColumn') {\n      options = {};\n      type = 'delete';\n    }\n\n    const anonymizationAssignment = new AnonymizationAssignment(type, options, workingColumn);\n    AnonymizationAssignmentArray.push(anonymizationAssignment);\n    setOpen(false);\n  };\n\n  const handleCloseMenu = () => {\n    setAnchorEl(null);\n  };\n\n  const handleCloseMenu_Hash = event => {\n    setSelectedValue_Hash(event.target.value);\n  };\n\n  const handlePageChange = (event, page) => {\n    setPage(page);\n  };\n\n  const handleRowsPerPageChange = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const handleClickSnackBar = type => {\n    if (type === 'success') {\n      setOpenSuccess(true);\n    } else if (type === 'error') {\n      setOpenError(true);\n    } else if (type === 'errorSpecial') {\n      setOpenErrorSpecial(true);\n    } else if (type === 'errorEmptyString') {\n      setErrorEmptyString(true);\n    }\n  };\n\n  const handleCloseSnackBar = type => {\n    if (type === 'success') {\n      setOpenSuccess(false);\n    } else if (type === 'error') {\n      setOpenError(false);\n    } else if (type === 'errorSpecial') {\n      setOpenErrorSpecial(false);\n    } else if (type === 'errorEmptyString') {\n      setErrorEmptyString(false);\n    }\n  };\n\n  const changeFileName = event => {\n    FileName = event.target.value;\n    console.log(FileName);\n  };\n\n  const saveDataset = () => {\n    let document = {\n      title: FileName,\n      originalFilename: location.state.fileName,\n      data: location.state.columnsData\n    };\n    DocumentService.getDocument().then(data => {\n      let documentsFound = 0;\n      data.docs.forEach(item => {\n        if (document.title == item.title) {\n          documentsFound = documentsFound + 1; //break;\n        }\n      });\n\n      if (document.title.length === 0) {\n        handleClickSnackBar('errorEmptyString');\n      } else if (documentsFound === 0) {\n        if (/^[a-zA-Z0-9-.@_]*$/.test(document.title) === false) {\n          handleClickSnackBar('errorSpecial');\n        } else {\n          DocumentService.createDocument(document).then(data => {\n            handleClickSnackBar('success');\n            console.log('Saved');\n            console.log(data);\n          }).catch(e => {\n            handleClickSnackBar('error');\n            console.log('error');\n            console.log(e);\n          });\n        }\n      } else if (documentsFound > 0) {\n        handleClickSnackBar('error');\n        console.log('error due to duplicate File name');\n      }\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  return React.createElement(\"div\", Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: classes.spacer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    variant: \"contained\",\n    onClick: ApplyAnonymization,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322\n    },\n    __self: this\n  }, \"Apply Annonimization\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329\n    },\n    __self: this\n  }), React.createElement(Button, {\n    color: \"primary\",\n    variant: \"contained\",\n    onClick: saveDataset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330\n    },\n    __self: this\n  }, \"Save Dataset\"))), React.createElement(Snackbar, {\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'center'\n    },\n    open: openSuccess,\n    autoHideDuration: 4000,\n    onClose: () => handleCloseSnackBar('success'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340\n    },\n    __self: this\n  }, React.createElement(SnackBarWrapper, {\n    onClose: () => handleCloseSnackBar('success'),\n    variant: \"success\",\n    message: \"The dataset is saved!\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349\n    },\n    __self: this\n  })), React.createElement(Snackbar, {\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'center'\n    },\n    open: openError,\n    autoHideDuration: 2000,\n    onClose: () => handleCloseSnackBar('error'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355\n    },\n    __self: this\n  }, React.createElement(SnackBarWrapper, {\n    onClose: () => handleCloseSnackBar('error'),\n    variant: \"error\",\n    message: \"Something went wrong!\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367\n    },\n    __self: this\n  })), React.createElement(Snackbar, {\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'center'\n    },\n    autoHideDuration: 2000,\n    onClose: () => handleCloseSnackBar('error'),\n    open: openError,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373\n    },\n    __self: this\n  }, React.createElement(SnackBarWrapper, {\n    message: \"Document title already exists!\",\n    onClose: () => handleCloseSnackBar('error'),\n    variant: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382\n    },\n    __self: this\n  })), React.createElement(Snackbar, {\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'center'\n    },\n    autoHideDuration: 2000,\n    onClose: () => handleCloseSnackBar('errorSpecial'),\n    open: openErrorSpecial,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388\n    },\n    __self: this\n  }, React.createElement(SnackBarWrapper, {\n    message: \"Filename contains special characters\",\n    onClose: () => handleCloseSnackBar('errorSpecial'),\n    variant: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397\n    },\n    __self: this\n  })), React.createElement(Snackbar, {\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'center'\n    },\n    autoHideDuration: 2000,\n    onClose: () => handleCloseSnackBar('errorEmptyString'),\n    open: openErrorEmptyString,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403\n    },\n    __self: this\n  }, React.createElement(SnackBarWrapper, {\n    message: \"Filename is empty\",\n    onClose: () => handleCloseSnackBar('errorEmptyString'),\n    variant: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412\n    },\n    __self: this\n  })), React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420\n    },\n    __self: this\n  }, React.createElement(TextField //className={classes.TheInput}\n  , {\n    labelFontSize: 40,\n    label: \"FileName\",\n    name: \"NameTextField\",\n    fontSize: 40,\n    placeholder: \"Enter FileName\",\n    defaultValue: FileName,\n    onChange: changeFileName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    className: classes.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432\n    },\n    __self: this\n  }, React.createElement(PerfectScrollbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.inner,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434\n    },\n    __self: this\n  }, React.createElement(Table, {\n    className: classes.table,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    className: classes.tableHead,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    className: classes.tableRow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438\n    },\n    __self: this\n  }, location.state.columnsData.map(column => React.createElement(TableCell, {\n    className: classes.tableCell,\n    key: column.orderPosition,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444\n    },\n    __self: this\n  }, React.createElement(Button, {\n    \"aria-controls\": \"simple-menu\",\n    \"aria-haspopup\": \"true\",\n    onClick: () => handleClickOpen(column.orderPosition),\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445\n    },\n    __self: this\n  }, column.title, React.createElement(ArrowDropDownIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452\n    },\n    __self: this\n  }))))))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461\n    },\n    __self: this\n  }, Array.from(Array(10).keys()).map(index => React.createElement(TableRow, {\n    className: classes.tableRow,\n    key: index // selected={selectedUsers.indexOf(user.id) !== -1}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463\n    },\n    __self: this\n  }, location.state.columnsData.map(column => React.createElement(TableCell, {\n    className: classes.tableCell,\n    key: column.orderPosition,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469\n    },\n    __self: this\n  }, column.data[index])))))), React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481\n    },\n    __self: this\n  }, \"Annonimize\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482\n    },\n    __self: this\n  }, React.createElement(DialogContentText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483\n    },\n    __self: this\n  }, \"Select the Annonimization type from the following:\"), React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 486\n    },\n    __self: this\n  }, React.createElement(Radio, {\n    checked: selectedValue === 'Masking',\n    onChange: handleRadioChange,\n    value: \"Masking\",\n    name: \"radio-button-demo\",\n    inputProps: {\n      'aria-label': 'Masking'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 495\n    },\n    __self: this\n  }, \"Masking\")), selectedValue == 'Masking' && React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 498\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 501\n    },\n    __self: this\n  }, \"Start\"), React.createElement(Radio, {\n    checked: selectedValue_Start === 'Left',\n    onChange: handleRadioChange_Start,\n    value: \"Left\",\n    name: \"radio-button-demo\",\n    inputProps: {\n      'aria-label': 'Left'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 502\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 509\n    },\n    __self: this\n  }, \"Left\"), React.createElement(Radio, {\n    checked: selectedValue_Start === 'Right',\n    onChange: handleRadioChange_Start,\n    value: \"Right\",\n    name: \"radio-button-demo\",\n    inputProps: {\n      'aria-label': 'Right'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 510\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 517\n    },\n    __self: this\n  }, \"Right\"), React.createElement(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"name\",\n    label: \"Pattern\",\n    onChange: handleRadioChangeMaskPat,\n    fullWidth: true,\n    InputProps: {\n      readOnly: false\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    margin: \"dense\",\n    label: \"Range\",\n    type: \"Number\",\n    onChange: handleRadioChangeMaskRange,\n    fullWidth: true,\n    InputProps: {\n      min: \"1\",\n      max: \"10\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 529\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 547\n    },\n    __self: this\n  }, React.createElement(Radio, {\n    checked: selectedValue === 'Hashing',\n    onChange: handleRadioChange,\n    value: \"Hashing\",\n    name: \"radio-button-demo\",\n    inputProps: {\n      'aria-label': 'Hashing'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 548\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 555\n    },\n    __self: this\n  }, \"Hashing\"), React.createElement(\"span\", {\n    className: classes.spacer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 556\n    },\n    __self: this\n  })), selectedValue == 'Hashing' && React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 559\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 560\n    },\n    __self: this\n  }, \"Cipher\"), React.createElement(Radio, {\n    checked: selectedValue_Cipher === 'SHA1',\n    onChange: handleRadioChange_Cipher,\n    value: \"SHA1\",\n    name: \"radio-button-demo\",\n    inputProps: {\n      'aria-label': 'SHA1'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 561\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 568\n    },\n    __self: this\n  }, \"SHA1\"), React.createElement(Radio, {\n    checked: selectedValue_Cipher === 'SHA256',\n    onChange: handleRadioChange_Cipher,\n    value: \"SHA256\",\n    name: \"radio-button-demo\",\n    inputProps: {\n      'aria-label': 'SHA256'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 569\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 576\n    },\n    __self: this\n  }, \"SHA256\")), React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 579\n    },\n    __self: this\n  }, React.createElement(Radio, {\n    checked: selectedValue === 'HashingWithSalt',\n    onChange: handleRadioChange,\n    value: \"HashingWithSalt\",\n    name: \"radio-button-demo\",\n    inputProps: {\n      'aria-label': 'HashingWithSalt'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 580\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 587\n    },\n    __self: this\n  }, \"Hashing With Salt\"), React.createElement(\"span\", {\n    className: classes.spacer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 588\n    },\n    __self: this\n  })), selectedValue == 'HashingWithSalt' && React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 591\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 592\n    },\n    __self: this\n  }, \"Cipher\"), React.createElement(Radio, {\n    checked: selectedValue_Cipher === 'SHA1',\n    onChange: handleRadioChange_Cipher,\n    value: \"SHA1\",\n    name: \"radio-button-demo\",\n    inputProps: {\n      'aria-label': 'SHA1'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 593\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 600\n    },\n    __self: this\n  }, \"SHA1\"), React.createElement(Radio, {\n    checked: selectedValue_Cipher === 'SHA256',\n    onChange: handleRadioChange_Cipher,\n    value: \"SHA256\",\n    name: \"radio-button-demo\",\n    inputProps: {\n      'aria-label': 'SHA256'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 601\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 608\n    },\n    __self: this\n  }, \"SHA256\")), React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 612\n    },\n    __self: this\n  }, React.createElement(Radio, {\n    checked: selectedValue === 'Random',\n    onChange: handleRadioChange,\n    value: \"Random\",\n    name: \"radio-button-demo\",\n    inputProps: {\n      'aria-label': 'Random'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 613\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 620\n    },\n    __self: this\n  }, \"Random\"), React.createElement(\"span\", {\n    className: classes.spacer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 621\n    },\n    __self: this\n  })), selectedValue == 'Random', React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 624\n    },\n    __self: this\n  }, React.createElement(Radio, {\n    checked: selectedValue === 'Generalization',\n    onChange: handleRadioChange,\n    value: \"Generalization\",\n    name: \"radio-button-demo\",\n    inputProps: {\n      'aria-label': 'Generalization'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 625\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 632\n    },\n    __self: this\n  }, \"Generalization\"), React.createElement(\"span\", {\n    className: classes.spacer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 633\n    },\n    __self: this\n  })), selectedValue == 'Generalization' && React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 636\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"name\",\n    label: \"Step Size :\",\n    type: \"Number\",\n    onChange: handleRadioChangeGenStep,\n    fullWidth: true,\n    InputProps: {\n      readOnly: false\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 637\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 653\n    },\n    __self: this\n  }, React.createElement(Radio, {\n    checked: selectedValue === 'DeletetheColumn',\n    onChange: handleRadioChange,\n    value: \"DeletetheColumn\",\n    name: \"radio-button-demo\",\n    inputProps: {\n      'aria-label': 'DeletetheColumn'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 654\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 661\n    },\n    __self: this\n  }, \"Delete the Column\"), React.createElement(\"span\", {\n    className: classes.spacer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 662\n    },\n    __self: this\n  }))), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 667\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 668\n    },\n    __self: this\n  }, \"Cancel\"), React.createElement(Button, {\n    onClick: saveAnnonymization,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 671\n    },\n    __self: this\n  }, \"Save Annonimization Type\")))))), React.createElement(CardActions, {\n    className: classes.actions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 679\n    },\n    __self: this\n  })));\n};\n\nEditorTable.propTypes = {\n  className: PropTypes.string,\n  users: PropTypes.array.isRequired\n};\nexport default EditorTable;","map":{"version":3,"sources":["C:/Users/ayesh/Desktop/TUM/semester 3/Final Presentation/dedas-frontend/src/views/Editor/components/EditorTable/EditorTable.js"],"names":["React","useEffect","useState","clsx","PropTypes","PerfectScrollbar","useHistory","useLocation","AnonymizationAssignment","AnonymizationWorkerService","makeStyles","Button","Card","CardActions","CardContent","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Grid","Radio","Snackbar","Table","TableBody","TableCell","TableHead","TableRow","TextField","ArrowDropDownIcon","DocumentService","SnackBarWrapper","AnonymizationAssignmentArray","anonymizationWorker","useStyles","theme","root","content","padding","inner","minWidth","nameContainer","display","alignItems","avatar","marginRight","spacing","actions","justifyContent","tableRow","border","tableCell","borderRight","borderLeft","borderBottom","tableHead","backgroundColor","table","borderCollapse","row","height","marginTop","marginBottom","spacer","flexGrow","TheInput","fontSize","labelFontSize","EditorTable","props","className","users","rest","location","history","FileName","state","fileName","substring","indexOf","open","setOpen","classes","rowsPerPage","setRowsPerPage","page","setPage","openSuccess","setOpenSuccess","openError","setOpenError","openErrorSpecial","setOpenErrorSpecial","openErrorEmptyString","setErrorEmptyString","anchorEl","setAnchorEl","selectedValueGenStep","setSelectedValueGenStep","selectedValueGenType","setSelectedValueGenType","selectedValueMaskPat","setSelectedValueMaskPat","selectedValueMaskRange","setSelectedValueMaskRange","selectedValue","setSelectedValue","selectedValue_Start","setSelectedValue_Start","selectedValue_Cipher","setSelectedValue_Cipher","selectedValue_Hash","setSelectedValue_Hash","value","setValue","workingColumn","setWorkingColumn","document","title","originalFilename","data","columnsData","handleClickMenu","event","currentTarget","handleRadioChangeGenType","target","handleRadioChangeGenStep","handleRadioChangeMaskPat","handleRadioChangeMaskRange","handleRadioChange","handleRadioChange_Cipher","handleRadioChange_Start","handleClickUrl","handleChange","e","setState","console","log","handleClickOpen","position","handleClose","ApplyAnonymization","getCurrentStatus","process","push","pathname","columns","map","column","saveAnnonymization","options","type","start","pattern","range","Cipher","salt","stepSize","anonymizationAssignment","handleCloseMenu","handleCloseMenu_Hash","handlePageChange","handleRowsPerPageChange","handleClickSnackBar","handleCloseSnackBar","changeFileName","saveDataset","getDocument","then","documentsFound","docs","forEach","item","length","test","createDocument","catch","vertical","horizontal","orderPosition","Array","from","keys","index","readOnly","min","max","propTypes","string","array","isRequired"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport AnonymizationAssignment from 'service/Anonymization/AnonymizationAssignment';\r\nimport AnonymizationWorkerService from 'service/Anonymization/AnonymizationWorkerService';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle,\r\n    Grid,\r\n    Radio,\r\n    Snackbar,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TableRow,\r\n    TextField\r\n} from '@material-ui/core';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport { DocumentService } from 'service';\r\n\r\nimport { SnackBarWrapper } from 'components';\r\n\r\nlet AnonymizationAssignmentArray = [];\r\nconst anonymizationWorker = new AnonymizationWorkerService();\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {},\r\n    content: {\r\n        padding: 0\r\n    },\r\n    inner: {\r\n        minWidth: 1050\r\n    },\r\n    nameContainer: {\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    },\r\n    avatar: {\r\n        marginRight: theme.spacing(2)\r\n    },\r\n    actions: {\r\n        justifyContent: 'flex-end'\r\n    },\r\n    tableRow: {\r\n        border: 'none'\r\n    },\r\n    tableCell: {\r\n        borderRight: 'solid 1px lightgrey',\r\n        borderLeft: 'solid 1px lightgrey',\r\n        borderBottom: 'none'\r\n        //   border-right: solid 1px #f00;\r\n        // border-left: solid 1px #f00;\r\n    },\r\n    tableHead: {\r\n        backgroundColor: '#f0f0f0'\r\n    },\r\n    table: {\r\n        borderCollapse: 'collapse'\r\n    },\r\n    row: {\r\n        height: '42px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(3)\r\n    },\r\n    spacer: {\r\n        flexGrow: 1\r\n    },\r\n    TheInput: {\r\n        padding: 10,\r\n        fontSize: 12,\r\n        labelFontSize: 40\r\n    }\r\n}));\r\n\r\nconst EditorTable = props => {\r\n    const { className, users, ...rest } = props;\r\n    let location = useLocation();\r\n    let history = useHistory();\r\n    let FileName = location.state.fileName.substring(0,location.state.fileName.indexOf(\".\"));\r\n    const [open, setOpen] = React.useState(false);\r\n    const classes = useStyles();\r\n\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n    const [page, setPage] = useState(0);\r\n    const [openSuccess, setOpenSuccess] = React.useState(false);\r\n    const [openError, setOpenError] = React.useState(false);\r\n    const [openErrorSpecial, setOpenErrorSpecial] = React.useState(false);\r\n    const [openErrorEmptyString, setErrorEmptyString] = React.useState(false);\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n    const [selectedValueGenStep, setSelectedValueGenStep] = React.useState('');\r\n    const [selectedValueGenType, setSelectedValueGenType] = React.useState('');\r\n\r\n    const [selectedValueMaskPat, setSelectedValueMaskPat] = React.useState('');\r\n    const [selectedValueMaskRange, setSelectedValueMaskRange] = React.useState('');\r\n\r\n    const [selectedValue, setSelectedValue] = React.useState('');\r\n    const [selectedValue_Start, setSelectedValue_Start] = React.useState('');\r\n    const [selectedValue_Cipher, setSelectedValue_Cipher] = React.useState('');\r\n    const [selectedValue_Hash, setSelectedValue_Hash] = React.useState('');\r\n    const [value, setValue] = React.useState('');\r\n    const [workingColumn, setWorkingColumn] = React.useState(null);\r\n    let document = {\r\n        title: location.state.fileName,\r\n        originalFilename: location.state.fileName,\r\n        data: location.state.columnsData\r\n    };\r\n    const handleClickMenu = event => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleRadioChangeGenType = (event) => {\r\n        setSelectedValueGenType(event.target.value);\r\n    };\r\n\r\n    const handleRadioChangeGenStep = (event) => {\r\n        setSelectedValueGenStep(event.target.value);\r\n    };\r\n    const handleRadioChangeMaskPat = (event) => {\r\n        setSelectedValueMaskPat(event.target.value);\r\n    };\r\n\r\n    const handleRadioChangeMaskRange = (event) => {\r\n        setSelectedValueMaskRange(event.target.value);\r\n    };\r\n\r\n    const handleRadioChange = (event) => {\r\n        setSelectedValue(event.target.value);\r\n    };\r\n\r\n    const handleRadioChange_Cipher = (event) => {\r\n        setSelectedValue_Cipher(event.target.value);\r\n    };\r\n    const handleRadioChange_Start = (event) => {\r\n        setSelectedValue_Start(event.target.value);\r\n    };\r\n    const handleClickUrl = () => {\r\n        setValue('https://wwww.dedas.com/documents/id');\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        this.setState({ value: e });\r\n        console.log(e);\r\n    };\r\n\r\n    const handleClickOpen = (position) => {\r\n        console.log('position' + position);\r\n        setWorkingColumn(position);\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        console.log('refreshing');\r\n    }, []);\r\n    const ApplyAnonymization = () => {\r\n        console.log(anonymizationWorker.getCurrentStatus());\r\n        anonymizationWorker.process(AnonymizationAssignmentArray, document);\r\n\r\n        AnonymizationAssignmentArray = [];\r\n        history.push({\r\n            pathname: '/editor',\r\n            state: {\r\n                columns: document.data.map(column => column.title),\r\n                columnsData: document.data,\r\n                fileName: document.originalFilename\r\n            }\r\n        });\r\n    };\r\n\r\n\r\n    const saveAnnonymization = () => {\r\n\r\n        let options = {};\r\n        let type = '';\r\n        if (selectedValue === 'Masking') {\r\n            options = { start: selectedValue_Start, pattern: selectedValueMaskPat, range: selectedValueMaskRange };\r\n            type = 'mask';\r\n        } else if (selectedValue === 'Hashing') {\r\n            options = { Cipher: setSelectedValue_Cipher, salt: false };\r\n            type = 'hash';\r\n        } else if (selectedValue === 'HashingWithSalt') {\r\n            options = { Cipher: setSelectedValue_Cipher, salt: true };\r\n            type = 'hash';\r\n        } else if (selectedValue === 'Random') {\r\n            options = {};\r\n            type = 'random';\r\n        } else if (selectedValue === 'Generalization') {\r\n\r\n            options = { stepSize: selectedValueGenStep, type: selectedValueGenType };\r\n            type = 'generalization';\r\n        } else if (selectedValue === 'DeletetheColumn') {\r\n            options = {};\r\n            type = 'delete';\r\n        }\r\n\r\n        const anonymizationAssignment = new AnonymizationAssignment(type, options, workingColumn);\r\n        AnonymizationAssignmentArray.push(anonymizationAssignment);\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleCloseMenu = () => {\r\n        setAnchorEl(null);\r\n    };\r\n    const handleCloseMenu_Hash = (event) => {\r\n        setSelectedValue_Hash(event.target.value);\r\n    };\r\n\r\n    const handlePageChange = (event, page) => {\r\n        setPage(page);\r\n    };\r\n\r\n    const handleRowsPerPageChange = event => {\r\n        setRowsPerPage(event.target.value);\r\n    };\r\n\r\n    const handleClickSnackBar = (type) => {\r\n        if (type === 'success') {\r\n            setOpenSuccess(true);\r\n        } else if (type === 'error') {\r\n            setOpenError(true);\r\n        } else if (type === 'errorSpecial') {\r\n            setOpenErrorSpecial(true);\r\n        } else if (type === 'errorEmptyString') {\r\n            setErrorEmptyString(true);\r\n        }\r\n    };\r\n\r\n    const handleCloseSnackBar = (type) => {\r\n        if (type === 'success') {\r\n            setOpenSuccess(false);\r\n        } else if (type === 'error') {\r\n            setOpenError(false);\r\n        } else if (type === 'errorSpecial') {\r\n            setOpenErrorSpecial(false);\r\n        } else if (type === 'errorEmptyString') {\r\n            setErrorEmptyString(false);\r\n        }\r\n\r\n    };\r\n    const changeFileName = (event) => {\r\n        FileName = event.target.value;\r\n        console.log(FileName);\r\n    };\r\n\r\n    const saveDataset = () => {\r\n        let document = {\r\n            title: FileName,\r\n            originalFilename: location.state.fileName,\r\n            data: location.state.columnsData\r\n        };\r\n\r\n\r\n        DocumentService.getDocument().then(data => {\r\n\r\n\r\n            let documentsFound = 0;\r\n            data.docs.forEach(item => {\r\n                if (document.title == item.title) {\r\n                    documentsFound = documentsFound + 1;\r\n                    //break;\r\n                }\r\n            });\r\n\r\n            if (document.title.length === 0) {\r\n                handleClickSnackBar('errorEmptyString')\r\n            } else if (documentsFound === 0) {\r\n                if (/^[a-zA-Z0-9-.@_]*$/.test(document.title) === false) {\r\n                    handleClickSnackBar('errorSpecial');\r\n                } else {\r\n                    DocumentService.createDocument(document).then(data => {\r\n                        handleClickSnackBar('success');\r\n                        console.log('Saved');\r\n                        console.log(data);\r\n                    }).catch((e) => {\r\n                        handleClickSnackBar('error');\r\n                        console.log('error');\r\n                        console.log(e);\r\n                    });\r\n                }\r\n            } else if (documentsFound > 0) {\r\n                handleClickSnackBar('error');\r\n                console.log('error due to duplicate File name');\r\n\r\n            }\r\n        }).catch((e) => {\r\n\r\n            console.log(e);\r\n\r\n\r\n        });\r\n\r\n\r\n    };\r\n\r\n    return (\r\n        <div\r\n            {...rest}\r\n            className={clsx(classes.root, className)}\r\n        >\r\n            <div className={classes.row}>\r\n                <span className={classes.spacer}/>\r\n                <Grid>\r\n                    <Button\r\n                        color=\"primary\"\r\n                        variant=\"contained\" onClick={ApplyAnonymization}\r\n\r\n                    >\r\n                        Apply Annonimization\r\n                    </Button>\r\n                    <div></div>\r\n                    <Button\r\n                        color=\"primary\"\r\n                        variant=\"contained\"\r\n                        onClick={saveDataset}\r\n\r\n                    >\r\n                        Save Dataset\r\n                    </Button>\r\n                </Grid>\r\n            </div>\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center'\r\n                }} open={openSuccess}\r\n                autoHideDuration={4000}\r\n                onClose={() => handleCloseSnackBar('success')}\r\n\r\n            >\r\n                <SnackBarWrapper\r\n\r\n                    onClose={() => handleCloseSnackBar('success')}\r\n                    variant=\"success\"\r\n                    message=\"The dataset is saved!\"/>\r\n            </Snackbar>\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center'\r\n                }}\r\n\r\n                open={openError}\r\n\r\n                autoHideDuration={2000}\r\n                onClose={() => handleCloseSnackBar('error')}\r\n\r\n            >\r\n                <SnackBarWrapper\r\n\r\n                    onClose={() => handleCloseSnackBar('error')}\r\n                    variant=\"error\" message=\"Something went wrong!\"\r\n                />\r\n            </Snackbar>\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center'\r\n                }}\r\n                autoHideDuration={2000}\r\n                onClose={() => handleCloseSnackBar('error')}\r\n                open={openError}\r\n            >\r\n                <SnackBarWrapper\r\n                    message=\"Document title already exists!\"\r\n                    onClose={() => handleCloseSnackBar('error')}\r\n                    variant=\"error\"\r\n                />\r\n            </Snackbar>\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center'\r\n                }}\r\n                autoHideDuration={2000}\r\n                onClose={() => handleCloseSnackBar('errorSpecial')}\r\n                open={openErrorSpecial}\r\n            >\r\n                <SnackBarWrapper\r\n                    message=\"Filename contains special characters\"\r\n                    onClose={() => handleCloseSnackBar('errorSpecial')}\r\n                    variant=\"error\"\r\n                />\r\n            </Snackbar>\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center'\r\n                }}\r\n                autoHideDuration={2000}\r\n                onClose={() => handleCloseSnackBar('errorEmptyString')}\r\n                open={openErrorEmptyString}\r\n            >\r\n                <SnackBarWrapper\r\n                    message=\"Filename is empty\"\r\n                    onClose={() => handleCloseSnackBar('errorEmptyString')}\r\n                    variant=\"error\"\r\n                />\r\n            </Snackbar>\r\n\r\n\r\n            <Card>\r\n\r\n                <TextField\r\n                    //className={classes.TheInput}\r\n                    labelFontSize={40}\r\n                    label=\"FileName\"\r\n                    name = \"NameTextField\"\r\n                    fontSize={40}\r\n                    placeholder = \"Enter FileName\"\r\n                    defaultValue={FileName}\r\n                    onChange={changeFileName}\r\n                />\r\n                <CardContent className={classes.content}>\r\n                    <PerfectScrollbar>\r\n                        <div className={classes.inner}>\r\n                            <Table className={classes.table}>\r\n                                <TableHead className={classes.tableHead}>\r\n\r\n                                    <TableRow className={classes.tableRow}>\r\n                                        {location.state.columnsData.map(column => (\r\n                                            <TableCell\r\n                                                className={classes.tableCell}\r\n                                                key={column.orderPosition}\r\n                                            >\r\n                                                <div>\r\n                                                    <Button\r\n                                                        aria-controls=\"simple-menu\"\r\n                                                        aria-haspopup=\"true\"\r\n                                                        onClick={() => handleClickOpen(column.orderPosition)}\r\n                                                        variant=\"outlined\"\r\n                                                    >\r\n                                                        {column.title}\r\n                                                        <ArrowDropDownIcon/>\r\n                                                    </Button>\r\n\r\n                                                </div>\r\n                                            </TableCell>\r\n                                        ))}\r\n                                    </TableRow>\r\n\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {Array.from(Array(10).keys()).map(index => (\r\n                                        <TableRow\r\n                                            className={classes.tableRow}\r\n                                            key={index}\r\n                                            // selected={selectedUsers.indexOf(user.id) !== -1}\r\n                                        >\r\n                                            {location.state.columnsData.map(column => (\r\n                                                <TableCell\r\n                                                    className={classes.tableCell}\r\n                                                    key={column.orderPosition}\r\n                                                >\r\n                                                    {column.data[index]}\r\n                                                </TableCell>\r\n                                            ))}\r\n                                        </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                                <DialogTitle id=\"form-dialog-title\">Annonimize</DialogTitle>\r\n                                <DialogContent>\r\n                                    <DialogContentText>\r\n                                        Select the Annonimization type from the following:\r\n                                    </DialogContentText>\r\n                                    <Grid>\r\n\r\n                                        <Radio\r\n                                            checked={selectedValue === 'Masking'}\r\n                                            onChange={handleRadioChange}\r\n                                            value=\"Masking\"\r\n                                            name=\"radio-button-demo\"\r\n                                            inputProps={{ 'aria-label': 'Masking' }}\r\n                                        />\r\n                                        <label>Masking</label>\r\n                                    </Grid>\r\n                                    {selectedValue == 'Masking' &&\r\n                                    <Grid>\r\n\r\n\r\n                                        <label>Start</label>\r\n                                        <Radio\r\n                                            checked={selectedValue_Start === 'Left'}\r\n                                            onChange={handleRadioChange_Start}\r\n                                            value=\"Left\"\r\n                                            name=\"radio-button-demo\"\r\n                                            inputProps={{ 'aria-label': 'Left' }}\r\n                                        />\r\n                                        <label>Left</label>\r\n                                        <Radio\r\n                                            checked={selectedValue_Start === 'Right'}\r\n                                            onChange={handleRadioChange_Start}\r\n                                            value=\"Right\"\r\n                                            name=\"radio-button-demo\"\r\n                                            inputProps={{ 'aria-label': 'Right' }}\r\n                                        />\r\n                                        <label>Right</label>\r\n                                        <TextField\r\n                                            autoFocus\r\n                                            margin=\"dense\"\r\n                                            id=\"name\"\r\n                                            label=\"Pattern\"\r\n                                            onChange={handleRadioChangeMaskPat}\r\n                                            fullWidth\r\n                                            InputProps={{\r\n                                                readOnly: false\r\n                                            }}\r\n                                        />\r\n                                        <TextField\r\n                                            \r\n                                            margin=\"dense\"\r\n                                            \r\n                                            label=\"Range\"\r\n                                            type=\"Number\"\r\n                                            onChange={handleRadioChangeMaskRange}\r\n                                            fullWidth\r\n                                            InputProps={{\r\n                                                min: \"1\",\r\n                                                max: \"10\",\r\n                                                \r\n                                            }}\r\n                                        />\r\n\r\n                                    </Grid>\r\n\r\n                                    }\r\n                                    <Grid>\r\n                                        <Radio\r\n                                            checked={selectedValue === 'Hashing'}\r\n                                            onChange={handleRadioChange}\r\n                                            value=\"Hashing\"\r\n                                            name=\"radio-button-demo\"\r\n                                            inputProps={{ 'aria-label': 'Hashing' }}\r\n                                        />\r\n                                        <label>Hashing</label>\r\n                                        <span className={classes.spacer}/>\r\n                                    </Grid>\r\n                                    {selectedValue == 'Hashing' &&\r\n                                    <Grid>\r\n                                        <label>Cipher</label>\r\n                                        <Radio\r\n                                            checked={selectedValue_Cipher === 'SHA1'}\r\n                                            onChange={handleRadioChange_Cipher}\r\n                                            value=\"SHA1\"\r\n                                            name=\"radio-button-demo\"\r\n                                            inputProps={{ 'aria-label': 'SHA1' }}\r\n                                        />\r\n                                        <label>SHA1</label>\r\n                                        <Radio\r\n                                            checked={selectedValue_Cipher === 'SHA256'}\r\n                                            onChange={handleRadioChange_Cipher}\r\n                                            value=\"SHA256\"\r\n                                            name=\"radio-button-demo\"\r\n                                            inputProps={{ 'aria-label': 'SHA256' }}\r\n                                        />\r\n                                        <label>SHA256</label>\r\n\r\n                                    </Grid>}\r\n                                    <Grid>\r\n                                        <Radio\r\n                                            checked={selectedValue === 'HashingWithSalt'}\r\n                                            onChange={handleRadioChange}\r\n                                            value=\"HashingWithSalt\"\r\n                                            name=\"radio-button-demo\"\r\n                                            inputProps={{ 'aria-label': 'HashingWithSalt' }}\r\n                                        />\r\n                                        <label>Hashing With Salt</label>\r\n                                        <span className={classes.spacer}/>\r\n                                    </Grid>\r\n                                    {selectedValue == 'HashingWithSalt' &&\r\n                                    <Grid>\r\n                                        <label>Cipher</label>\r\n                                        <Radio\r\n                                            checked={selectedValue_Cipher === 'SHA1'}\r\n                                            onChange={handleRadioChange_Cipher}\r\n                                            value=\"SHA1\"\r\n                                            name=\"radio-button-demo\"\r\n                                            inputProps={{ 'aria-label': 'SHA1' }}\r\n                                        />\r\n                                        <label>SHA1</label>\r\n                                        <Radio\r\n                                            checked={selectedValue_Cipher === 'SHA256'}\r\n                                            onChange={handleRadioChange_Cipher}\r\n                                            value=\"SHA256\"\r\n                                            name=\"radio-button-demo\"\r\n                                            inputProps={{ 'aria-label': 'SHA256' }}\r\n                                        />\r\n                                        <label>SHA256</label>\r\n\r\n                                    </Grid>}\r\n\r\n                                    <Grid>\r\n                                        <Radio\r\n                                            checked={selectedValue === 'Random'}\r\n                                            onChange={handleRadioChange}\r\n                                            value=\"Random\"\r\n                                            name=\"radio-button-demo\"\r\n                                            inputProps={{ 'aria-label': 'Random' }}\r\n                                        />\r\n                                        <label>Random</label>\r\n                                        <span className={classes.spacer}/>\r\n                                    </Grid>\r\n                                    {selectedValue == 'Random'}\r\n                                    <Grid>\r\n                                        <Radio\r\n                                            checked={selectedValue === 'Generalization'}\r\n                                            onChange={handleRadioChange}\r\n                                            value=\"Generalization\"\r\n                                            name=\"radio-button-demo\"\r\n                                            inputProps={{ 'aria-label': 'Generalization' }}\r\n                                        />\r\n                                        <label>Generalization</label>\r\n                                        <span className={classes.spacer}/>\r\n                                    </Grid>\r\n                                    {selectedValue == 'Generalization' &&\r\n                                    <Grid>\r\n                                        <TextField\r\n                                            autoFocus\r\n                                            margin=\"dense\"\r\n                                            id=\"name\"\r\n                                            label=\"Step Size :\"\r\n                                            type=\"Number\"\r\n                                            onChange={handleRadioChangeGenStep}\r\n                                            fullWidth\r\n                                            InputProps={{\r\n                                                readOnly: false\r\n                                            }}\r\n                                        />\r\n\r\n                                    </Grid>\r\n                                    }\r\n\r\n                                    <Grid>\r\n                                        <Radio\r\n                                            checked={selectedValue === 'DeletetheColumn'}\r\n                                            onChange={handleRadioChange}\r\n                                            value=\"DeletetheColumn\"\r\n                                            name=\"radio-button-demo\"\r\n                                            inputProps={{ 'aria-label': 'DeletetheColumn' }}\r\n                                        />\r\n                                        <label>Delete the Column</label>\r\n                                        <span className={classes.spacer}/>\r\n                                    </Grid>\r\n\r\n\r\n                                </DialogContent>\r\n                                <DialogActions>\r\n                                    <Button onClick={handleClose} color=\"primary\">\r\n                                        Cancel\r\n                                    </Button>\r\n                                    <Button onClick={saveAnnonymization} color=\"primary\">\r\n                                        Save Annonimization Type\r\n                                    </Button>\r\n                                </DialogActions>\r\n                            </Dialog>\r\n                        </div>\r\n                    </PerfectScrollbar>\r\n                </CardContent>\r\n                <CardActions className={classes.actions}>\r\n                    {/* <TablePagination\r\n                component=\"div\"\r\n                count=\"10\"\r\n                onChangePage={handlePageChange}\r\n                onChangeRowsPerPage={handleRowsPerPageChange}\r\n                page={page}\r\n                rowsPerPage={rowsPerPage}\r\n                rowsPerPageOptions={[5, 10, 25]}\r\n            /> */}\r\n                </CardActions>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nEditorTable.propTypes = {\r\n    className: PropTypes.string,\r\n    users: PropTypes.array.isRequired\r\n};\r\n\r\nexport default EditorTable;\r\n"]},"metadata":{},"sourceType":"module"}