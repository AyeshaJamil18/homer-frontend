{"ast":null,"code":"'use strict';\n\nconst apiURL = () => {\n  return process.env.REACT_APP_BACKEND_API_URL;\n};\n\nconst get = (url, onSuccess, onError) => {\n  let token = process.env.REACT_APP_USER_JWT;\n  let header = new Headers();\n\n  if (token) {\n    header.append('Authorization', \"Bearer \".concat(token));\n  }\n\n  fetch(url, {\n    method: 'GET',\n    headers: header\n  }).then(resp => {\n    if (checkIfUnauthorized(resp)) {\n      window.location = '/#login';\n    } else {\n      return resp.json();\n    }\n  }).then(resp => {\n    if (resp.error) {\n      onError(resp.error);\n    } else {\n      if (resp.hasOwnProperty('token')) {\n        window.localStorage['jwtToken'] = resp.token;\n      }\n\n      onSuccess(resp);\n    }\n  }).catch(e => {\n    onError(e.message);\n  });\n};\n\nconst put = (url, data, onSuccess, onError) => {\n  let token = window.localStorage['jwtToken'];\n  let header = new Headers();\n\n  if (token) {\n    header.append('Authorization', \"JWT \".concat(token));\n  }\n\n  header.append('Content-Type', 'application/json');\n  fetch(url, {\n    method: 'PUT',\n    headers: header,\n    body: JSON.stringify(data)\n  }).then(resp => {\n    if (checkIfUnauthorized(resp)) {\n      window.location = '/#login';\n    } else {\n      return resp.json();\n    }\n  }).then(resp => {\n    if (resp.error) {\n      onError(resp.error);\n    } else {\n      if (resp.hasOwnProperty('token')) {\n        window.localStorage['jwtToken'] = resp.token;\n      }\n\n      onSuccess(resp);\n    }\n  }).catch(e => {\n    onError(e.message);\n  });\n};\n\nconst post = (url, data, onSuccess, onError) => {\n  // let token = window.localStorage['jwtToken'];\n  // TODO: when authentication is implemented, remove this with user jwt storage\n  let token = process.env.REACT_APP_USER_JWT;\n  let header = new Headers();\n\n  if (token) {\n    header.append('Authorization', \"Bearer \".concat(token));\n  }\n\n  header.append('Content-Type', 'application/json');\n  console.log(data);\n  fetch(url, {\n    method: 'POST',\n    headers: header,\n    body: JSON.stringify(data)\n  }).then(resp => {\n    if (checkIfUnauthorized(resp)) {\n      window.location = '/#login';\n    } else {\n      return resp.json();\n    }\n  }).then(resp => {\n    if (resp.error) {\n      onError(resp.error);\n    } else {\n      if (resp.hasOwnProperty('token')) {\n        window.localStorage['jwtToken'] = resp.token;\n      }\n\n      onSuccess(resp);\n    }\n  }).catch(e => {\n    onError(e.message);\n  });\n};\n\nconst remove = (url, onSuccess, onError) => {\n  let token = window.localStorage['jwtToken'];\n  let header = new Headers();\n\n  if (token) {\n    header.append('Authorization', \"JWT \".concat(token));\n  }\n\n  fetch(url, {\n    method: 'DELETE',\n    headers: header\n  }).then(resp => {\n    if (checkIfUnauthorized(resp)) {\n      window.location = '/#login';\n    } else {\n      return resp.json();\n    }\n  }).then(resp => {\n    if (resp.error) {\n      onError(resp.error);\n    } else {\n      onSuccess(resp);\n    }\n  }).catch(e => {\n    onError(e.message);\n  });\n};\n\nconst checkIfUnauthorized = res => {\n  if (res.status == 401) {\n    return true;\n  }\n\n  return false;\n};\n\nexport default {\n  get,\n  post,\n  put,\n  remove,\n  checkIfUnauthorized,\n  apiURL\n};","map":{"version":3,"sources":["C:/Users/ayesh/Desktop/TUM/semester 3/Final Presentation/dedas-frontend/src/service/HttpService.js"],"names":["apiURL","process","env","REACT_APP_BACKEND_API_URL","get","url","onSuccess","onError","token","REACT_APP_USER_JWT","header","Headers","append","fetch","method","headers","then","resp","checkIfUnauthorized","window","location","json","error","hasOwnProperty","localStorage","catch","e","message","put","data","body","JSON","stringify","post","console","log","remove","res","status"],"mappings":"AAAA;;AAEA,MAAMA,MAAM,GAAG,MAAM;AACjB,SAAOC,OAAO,CAACC,GAAR,CAAYC,yBAAnB;AACH,CAFD;;AAIA,MAAMC,GAAG,GAAG,CAACC,GAAD,EAAMC,SAAN,EAAiBC,OAAjB,KAA6B;AACrC,MAAIC,KAAK,GAAGP,OAAO,CAACC,GAAR,CAAYO,kBAAxB;AACA,MAAIC,MAAM,GAAG,IAAIC,OAAJ,EAAb;;AACA,MAAIH,KAAJ,EAAW;AACPE,IAAAA,MAAM,CAACE,MAAP,CAAc,eAAd,mBAAyCJ,KAAzC;AACH;;AAEDK,EAAAA,KAAK,CAACR,GAAD,EAAM;AACPS,IAAAA,MAAM,EAAE,KADD;AAEPC,IAAAA,OAAO,EAAEL;AAFF,GAAN,CAAL,CAGGM,IAHH,CAGSC,IAAD,IAAU;AACd,QAAIC,mBAAmB,CAACD,IAAD,CAAvB,EAA+B;AAC3BE,MAAAA,MAAM,CAACC,QAAP,GAAkB,SAAlB;AACH,KAFD,MAEO;AACH,aAAOH,IAAI,CAACI,IAAL,EAAP;AACH;AACJ,GATD,EASGL,IATH,CASSC,IAAD,IAAU;AACd,QAAIA,IAAI,CAACK,KAAT,EAAgB;AACZf,MAAAA,OAAO,CAACU,IAAI,CAACK,KAAN,CAAP;AACH,KAFD,MAEO;AACH,UAAIL,IAAI,CAACM,cAAL,CAAoB,OAApB,CAAJ,EAAkC;AAC9BJ,QAAAA,MAAM,CAACK,YAAP,CAAoB,UAApB,IAAkCP,IAAI,CAACT,KAAvC;AACH;;AACDF,MAAAA,SAAS,CAACW,IAAD,CAAT;AACH;AACJ,GAlBD,EAkBGQ,KAlBH,CAkBUC,CAAD,IAAO;AACZnB,IAAAA,OAAO,CAACmB,CAAC,CAACC,OAAH,CAAP;AACH,GApBD;AAqBH,CA5BD;;AA8BA,MAAMC,GAAG,GAAG,CAACvB,GAAD,EAAMwB,IAAN,EAAYvB,SAAZ,EAAuBC,OAAvB,KAAmC;AAC3C,MAAIC,KAAK,GAAGW,MAAM,CAACK,YAAP,CAAoB,UAApB,CAAZ;AACA,MAAId,MAAM,GAAG,IAAIC,OAAJ,EAAb;;AACA,MAAIH,KAAJ,EAAW;AACPE,IAAAA,MAAM,CAACE,MAAP,CAAc,eAAd,gBAAsCJ,KAAtC;AACH;;AACDE,EAAAA,MAAM,CAACE,MAAP,CAAc,cAAd,EAA8B,kBAA9B;AAEAC,EAAAA,KAAK,CAACR,GAAD,EAAM;AACPS,IAAAA,MAAM,EAAE,KADD;AAEPC,IAAAA,OAAO,EAAEL,MAFF;AAGPoB,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeH,IAAf;AAHC,GAAN,CAAL,CAIGb,IAJH,CAISC,IAAD,IAAU;AACd,QAAIC,mBAAmB,CAACD,IAAD,CAAvB,EAA+B;AAC3BE,MAAAA,MAAM,CAACC,QAAP,GAAkB,SAAlB;AAEH,KAHD,MAGO;AACH,aAAOH,IAAI,CAACI,IAAL,EAAP;AACH;AACJ,GAXD,EAWGL,IAXH,CAWSC,IAAD,IAAU;AACd,QAAIA,IAAI,CAACK,KAAT,EAAgB;AACZf,MAAAA,OAAO,CAACU,IAAI,CAACK,KAAN,CAAP;AACH,KAFD,MAEO;AACH,UAAIL,IAAI,CAACM,cAAL,CAAoB,OAApB,CAAJ,EAAkC;AAC9BJ,QAAAA,MAAM,CAACK,YAAP,CAAoB,UAApB,IAAkCP,IAAI,CAACT,KAAvC;AACH;;AACDF,MAAAA,SAAS,CAACW,IAAD,CAAT;AACH;AACJ,GApBD,EAoBGQ,KApBH,CAoBUC,CAAD,IAAO;AACZnB,IAAAA,OAAO,CAACmB,CAAC,CAACC,OAAH,CAAP;AACH,GAtBD;AAuBH,CA/BD;;AAiCA,MAAMM,IAAI,GAAG,CAAC5B,GAAD,EAAMwB,IAAN,EAAYvB,SAAZ,EAAuBC,OAAvB,KAAmC;AAC5C;AACA;AACA,MAAIC,KAAK,GAAGP,OAAO,CAACC,GAAR,CAAYO,kBAAxB;AACA,MAAIC,MAAM,GAAG,IAAIC,OAAJ,EAAb;;AACA,MAAIH,KAAJ,EAAW;AACPE,IAAAA,MAAM,CAACE,MAAP,CAAc,eAAd,mBAAyCJ,KAAzC;AACH;;AACDE,EAAAA,MAAM,CAACE,MAAP,CAAc,cAAd,EAA8B,kBAA9B;AACAsB,EAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AAEAhB,EAAAA,KAAK,CAACR,GAAD,EAAM;AACPS,IAAAA,MAAM,EAAE,MADD;AAEPC,IAAAA,OAAO,EAAEL,MAFF;AAGPoB,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeH,IAAf;AAHC,GAAN,CAAL,CAIGb,IAJH,CAISC,IAAD,IAAU;AACd,QAAIC,mBAAmB,CAACD,IAAD,CAAvB,EAA+B;AAC3BE,MAAAA,MAAM,CAACC,QAAP,GAAkB,SAAlB;AAEH,KAHD,MAGO;AACH,aAAOH,IAAI,CAACI,IAAL,EAAP;AACH;AACJ,GAXD,EAWGL,IAXH,CAWSC,IAAD,IAAU;AACd,QAAIA,IAAI,CAACK,KAAT,EAAgB;AACZf,MAAAA,OAAO,CAACU,IAAI,CAACK,KAAN,CAAP;AACH,KAFD,MAEO;AACH,UAAIL,IAAI,CAACM,cAAL,CAAoB,OAApB,CAAJ,EAAkC;AAC9BJ,QAAAA,MAAM,CAACK,YAAP,CAAoB,UAApB,IAAkCP,IAAI,CAACT,KAAvC;AACH;;AACDF,MAAAA,SAAS,CAACW,IAAD,CAAT;AACH;AACJ,GApBD,EAoBGQ,KApBH,CAoBUC,CAAD,IAAO;AACZnB,IAAAA,OAAO,CAACmB,CAAC,CAACC,OAAH,CAAP;AACH,GAtBD;AAuBH,CAlCD;;AAoCA,MAAMS,MAAM,GAAG,CAAC/B,GAAD,EAAMC,SAAN,EAAiBC,OAAjB,KAA6B;AACxC,MAAIC,KAAK,GAAGW,MAAM,CAACK,YAAP,CAAoB,UAApB,CAAZ;AACA,MAAId,MAAM,GAAG,IAAIC,OAAJ,EAAb;;AACA,MAAIH,KAAJ,EAAW;AACPE,IAAAA,MAAM,CAACE,MAAP,CAAc,eAAd,gBAAsCJ,KAAtC;AACH;;AAEDK,EAAAA,KAAK,CAACR,GAAD,EAAM;AACPS,IAAAA,MAAM,EAAE,QADD;AAEPC,IAAAA,OAAO,EAAEL;AAFF,GAAN,CAAL,CAGGM,IAHH,CAGSC,IAAD,IAAU;AACd,QAAIC,mBAAmB,CAACD,IAAD,CAAvB,EAA+B;AAC3BE,MAAAA,MAAM,CAACC,QAAP,GAAkB,SAAlB;AAEH,KAHD,MAGO;AACH,aAAOH,IAAI,CAACI,IAAL,EAAP;AACH;AACJ,GAVD,EAUGL,IAVH,CAUSC,IAAD,IAAU;AACd,QAAIA,IAAI,CAACK,KAAT,EAAgB;AACZf,MAAAA,OAAO,CAACU,IAAI,CAACK,KAAN,CAAP;AACH,KAFD,MAEO;AACHhB,MAAAA,SAAS,CAACW,IAAD,CAAT;AACH;AACJ,GAhBD,EAgBGQ,KAhBH,CAgBUC,CAAD,IAAO;AACZnB,IAAAA,OAAO,CAACmB,CAAC,CAACC,OAAH,CAAP;AACH,GAlBD;AAmBH,CA1BD;;AA4BA,MAAMT,mBAAmB,GAAImB,GAAD,IAAS;AACjC,MAAIA,GAAG,CAACC,MAAJ,IAAc,GAAlB,EAAuB;AACnB,WAAO,IAAP;AACH;;AACD,SAAO,KAAP;AACH,CALD;;AAOA,eAAe;AACXlC,EAAAA,GADW;AAEX6B,EAAAA,IAFW;AAGXL,EAAAA,GAHW;AAIXQ,EAAAA,MAJW;AAKXlB,EAAAA,mBALW;AAMXlB,EAAAA;AANW,CAAf","sourcesContent":["'use strict';\r\n\r\nconst apiURL = () => {\r\n    return process.env.REACT_APP_BACKEND_API_URL;\r\n};\r\n\r\nconst get = (url, onSuccess, onError) => {\r\n    let token = process.env.REACT_APP_USER_JWT;\r\n    let header = new Headers();\r\n    if (token) {\r\n        header.append('Authorization', `Bearer ${token}`);\r\n    }\r\n\r\n    fetch(url, {\r\n        method: 'GET',\r\n        headers: header\r\n    }).then((resp) => {\r\n        if (checkIfUnauthorized(resp)) {\r\n            window.location = '/#login';\r\n        } else {\r\n            return resp.json();\r\n        }\r\n    }).then((resp) => {\r\n        if (resp.error) {\r\n            onError(resp.error);\r\n        } else {\r\n            if (resp.hasOwnProperty('token')) {\r\n                window.localStorage['jwtToken'] = resp.token;\r\n            }\r\n            onSuccess(resp);\r\n        }\r\n    }).catch((e) => {\r\n        onError(e.message);\r\n    });\r\n};\r\n\r\nconst put = (url, data, onSuccess, onError) => {\r\n    let token = window.localStorage['jwtToken'];\r\n    let header = new Headers();\r\n    if (token) {\r\n        header.append('Authorization', `JWT ${token}`);\r\n    }\r\n    header.append('Content-Type', 'application/json');\r\n\r\n    fetch(url, {\r\n        method: 'PUT',\r\n        headers: header,\r\n        body: JSON.stringify(data)\r\n    }).then((resp) => {\r\n        if (checkIfUnauthorized(resp)) {\r\n            window.location = '/#login';\r\n\r\n        } else {\r\n            return resp.json();\r\n        }\r\n    }).then((resp) => {\r\n        if (resp.error) {\r\n            onError(resp.error);\r\n        } else {\r\n            if (resp.hasOwnProperty('token')) {\r\n                window.localStorage['jwtToken'] = resp.token;\r\n            }\r\n            onSuccess(resp);\r\n        }\r\n    }).catch((e) => {\r\n        onError(e.message);\r\n    });\r\n};\r\n\r\nconst post = (url, data, onSuccess, onError) => {\r\n    // let token = window.localStorage['jwtToken'];\r\n    // TODO: when authentication is implemented, remove this with user jwt storage\r\n    let token = process.env.REACT_APP_USER_JWT;\r\n    let header = new Headers();\r\n    if (token) {\r\n        header.append('Authorization', `Bearer ${token}`);\r\n    }\r\n    header.append('Content-Type', 'application/json');\r\n    console.log(data);\r\n\r\n    fetch(url, {\r\n        method: 'POST',\r\n        headers: header,\r\n        body: JSON.stringify(data)\r\n    }).then((resp) => {\r\n        if (checkIfUnauthorized(resp)) {\r\n            window.location = '/#login';\r\n\r\n        } else {\r\n            return resp.json();\r\n        }\r\n    }).then((resp) => {\r\n        if (resp.error) {\r\n            onError(resp.error);\r\n        } else {\r\n            if (resp.hasOwnProperty('token')) {\r\n                window.localStorage['jwtToken'] = resp.token;\r\n            }\r\n            onSuccess(resp);\r\n        }\r\n    }).catch((e) => {\r\n        onError(e.message);\r\n    });\r\n};\r\n\r\nconst remove = (url, onSuccess, onError) => {\r\n    let token = window.localStorage['jwtToken'];\r\n    let header = new Headers();\r\n    if (token) {\r\n        header.append('Authorization', `JWT ${token}`);\r\n    }\r\n\r\n    fetch(url, {\r\n        method: 'DELETE',\r\n        headers: header\r\n    }).then((resp) => {\r\n        if (checkIfUnauthorized(resp)) {\r\n            window.location = '/#login';\r\n\r\n        } else {\r\n            return resp.json();\r\n        }\r\n    }).then((resp) => {\r\n        if (resp.error) {\r\n            onError(resp.error);\r\n        } else {\r\n            onSuccess(resp);\r\n        }\r\n    }).catch((e) => {\r\n        onError(e.message);\r\n    });\r\n};\r\n\r\nconst checkIfUnauthorized = (res) => {\r\n    if (res.status == 401) {\r\n        return true;\r\n    }\r\n    return false;\r\n};\r\n\r\nexport default {\r\n    get,\r\n    post,\r\n    put,\r\n    remove,\r\n    checkIfUnauthorized,\r\n    apiURL\r\n};\r\n"]},"metadata":{},"sourceType":"module"}