{"ast":null,"code":"import AnonymizationFactoryService from './AnonymizationFactoryService';\n/**\r\n * Takes many assignments and applies them to the document\r\n */\n\nclass AnonymizationWorkerService {\n  constructor() {\n    this.finishedJobs = -2;\n    this.totalJobs = -1;\n\n    this.getCurrentStatus = () => this.finishedJobs / this.totalJobs;\n  }\n\n  process(assignments, document) {\n    this.finishedJobs = 0;\n    this.totalJobs = assignments.length;\n\n    for (let index = 0; index < assignments.length; ++index) {\n      AnonymizationFactoryService.getServiceForName(assignments[index].type).apply(assignments[index], document);\n    }\n  }\n\n}\n\nexport default AnonymizationWorkerService;","map":{"version":3,"sources":["C:/Users/ayesh/Desktop/TUM/semester 3/Final Presentation/dedas-frontend/src/service/Anonymization/AnonymizationWorkerService.js"],"names":["AnonymizationFactoryService","AnonymizationWorkerService","finishedJobs","totalJobs","getCurrentStatus","process","assignments","document","length","index","getServiceForName","type","apply"],"mappings":"AAAA,OAAOA,2BAAP,MAAwC,+BAAxC;AAEA;;;;AAGA,MAAMC,0BAAN,CAAiC;AAAA;AAAA,SAC7BC,YAD6B,GACd,CAAC,CADa;AAAA,SAE7BC,SAF6B,GAEjB,CAAC,CAFgB;;AAAA,SAe7BC,gBAf6B,GAeV,MAAM,KAAKF,YAAL,GAAoB,KAAKC,SAfrB;AAAA;;AAI7BE,EAAAA,OAAO,CAACC,WAAD,EAAyCC,QAAzC,EAAyD;AAC5D,SAAKL,YAAL,GAAoB,CAApB;AACA,SAAKC,SAAL,GAAiBG,WAAW,CAACE,MAA7B;;AAEA,SAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGH,WAAW,CAACE,MAAxC,EAAgD,EAAEC,KAAlD,EAAyD;AACrDT,MAAAA,2BAA2B,CAACU,iBAA5B,CAA8CJ,WAAW,CAACG,KAAD,CAAX,CAAmBE,IAAjE,EACKC,KADL,CACWN,WAAW,CAACG,KAAD,CADtB,EAC+BF,QAD/B;AAEH;AAEJ;;AAb4B;;AAkBjC,eAAeN,0BAAf","sourcesContent":["import AnonymizationFactoryService from './AnonymizationFactoryService';\r\n\r\n/**\r\n * Takes many assignments and applies them to the document\r\n */\r\nclass AnonymizationWorkerService {\r\n    finishedJobs = -2;\r\n    totalJobs = -1;\r\n\r\n    process(assignments: [AnonymizationAssignment], document): void {\r\n        this.finishedJobs = 0;\r\n        this.totalJobs = assignments.length;\r\n\r\n        for (let index = 0; index < assignments.length; ++index) {\r\n            AnonymizationFactoryService.getServiceForName(assignments[index].type)\r\n                .apply(assignments[index], document);\r\n        }\r\n\r\n    }\r\n\r\n    getCurrentStatus = () => this.finishedJobs / this.totalJobs;\r\n}\r\n\r\nexport default AnonymizationWorkerService;\r\n"]},"metadata":{},"sourceType":"module"}