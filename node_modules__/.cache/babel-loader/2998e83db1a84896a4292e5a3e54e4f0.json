{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\ayesh\\\\Desktop\\\\TUM\\\\semester 3\\\\Final Presentation\\\\dedas-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"C:\\\\Users\\\\ayesh\\\\Desktop\\\\TUM\\\\semester 3\\\\Final Presentation\\\\dedas-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\ayesh\\\\Desktop\\\\TUM\\\\semester 3\\\\Final Presentation\\\\dedas-frontend\\\\src\\\\views\\\\MyDocumentList\\\\components\\\\DocumentListToolbar\\\\DocumentListToolbar.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport Chip from '@material-ui/core/Chip';\nimport { SearchInput } from 'components';\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  row: {\n    height: '42px',\n    display: 'flex',\n    alignItems: 'center',\n    marginTop: theme.spacing(1)\n  },\n  spacer: {\n    flexGrow: 1\n  },\n  chip: {\n    marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    marginRight: theme.spacing(1)\n  },\n  searchInput: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst DocumentListToolbar = props => {\n  const className = props.className,\n        selectActiveChip = props.selectActiveChip,\n        privacyOptions = props.privacyOptions,\n        rest = _objectWithoutProperties(props, [\"className\", \"selectActiveChip\", \"privacyOptions\"]);\n\n  const classes = useStyles();\n  const PRIVATE = privacyOptions.PRIVATE;\n  const PUBLIC = privacyOptions.PUBLIC;\n  const SHARED = privacyOptions.SHARED;\n\n  const _React$useState = React.useState(PRIVATE),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        selectedChip = _React$useState2[0],\n        setSelectedChip = _React$useState2[1];\n\n  const handleClick = activeChip => {\n    setSelectedChip(activeChip);\n    selectActiveChip(activeChip);\n  };\n\n  return React.createElement(\"div\", Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(SearchInput, {\n    className: classes.searchInput,\n    placeholder: \"Search Document\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: classes.spacer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(Chip, {\n    className: classes.chip,\n    label: \"Not Shared\",\n    onClick: () => handleClick(PRIVATE),\n    variant: selectedChip == PRIVATE ? 'default' : 'outlined',\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(Chip, {\n    className: classes.chip,\n    label: \"Shared With Others\",\n    onClick: () => handleClick(SHARED),\n    variant: selectedChip == SHARED ? 'default' : 'outlined',\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), React.createElement(Chip, {\n    className: classes.chip,\n    label: \"Public\",\n    onClick: () => handleClick(PUBLIC),\n    variant: selectedChip == PUBLIC ? 'default' : 'outlined',\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  })));\n};\n\nDocumentListToolbar.propTypes = {\n  className: PropTypes.string\n};\nexport default DocumentListToolbar;","map":{"version":3,"sources":["C:/Users/ayesh/Desktop/TUM/semester 3/Final Presentation/dedas-frontend/src/views/MyDocumentList/components/DocumentListToolbar/DocumentListToolbar.js"],"names":["React","PropTypes","clsx","makeStyles","Chip","SearchInput","useStyles","theme","root","row","height","display","alignItems","marginTop","spacing","spacer","flexGrow","chip","marginRight","exportButton","searchInput","DocumentListToolbar","props","className","selectActiveChip","privacyOptions","rest","classes","PRIVATE","PUBLIC","SHARED","useState","selectedChip","setSelectedChip","handleClick","activeChip","propTypes","string"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Chip from '@material-ui/core/Chip';\r\n\r\nimport { SearchInput } from 'components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {},\r\n    row: {\r\n        height: '42px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        marginTop: theme.spacing(1)\r\n    },\r\n    spacer: {\r\n        flexGrow: 1\r\n    },\r\n    chip: {\r\n        marginRight: theme.spacing(1)\r\n    },\r\n    exportButton: {\r\n        marginRight: theme.spacing(1)\r\n    },\r\n    searchInput: {\r\n        marginRight: theme.spacing(1)\r\n    }\r\n}));\r\n\r\nconst DocumentListToolbar = props => {\r\n    const { className, selectActiveChip, privacyOptions, ...rest } = props;\r\n\r\n    const classes = useStyles();\r\n    const PRIVATE = privacyOptions.PRIVATE;\r\n    const PUBLIC = privacyOptions.PUBLIC;\r\n    const SHARED = privacyOptions.SHARED;\r\n    const [selectedChip, setSelectedChip] = React.useState(PRIVATE)\r\n\r\n    const handleClick = (activeChip) => {\r\n        setSelectedChip(activeChip);\r\n        selectActiveChip(activeChip);\r\n    };\r\n\r\n    return (\r\n        <div\r\n            {...rest}\r\n            className={clsx(classes.root, className)}\r\n        >\r\n            {/* <div className={classes.row}>\r\n        <span className={classes.spacer} />\r\n        <Button className={classes.importButton}>Import</Button>\r\n        <Button className={classes.exportButton}>Export</Button>\r\n        <Button\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n        >\r\n          Add user\r\n        </Button>\r\n      </div> */}\r\n            <div className={classes.row}>\r\n                <SearchInput\r\n                    className={classes.searchInput}\r\n                    placeholder=\"Search Document\"\r\n                />\r\n                <span className={classes.spacer} />\r\n                <Chip\r\n                    className={classes.chip}\r\n                    label=\"Not Shared\"\r\n                    onClick={() => handleClick(PRIVATE)}\r\n                    variant={selectedChip == PRIVATE ? 'default' : 'outlined'}\r\n                    color=\"primary\"\r\n                />\r\n                <Chip\r\n                    className={classes.chip}\r\n                    label=\"Shared With Others\"\r\n                    onClick={() => handleClick(SHARED)}\r\n                    variant={selectedChip == SHARED ? 'default' : 'outlined'}\r\n                    color=\"primary\"\r\n                />\r\n                <Chip\r\n                    className={classes.chip}\r\n                    label=\"Public\"\r\n                    onClick={() => handleClick(PUBLIC)}\r\n                    variant={selectedChip == PUBLIC ? 'default' : 'outlined'}\r\n                    color=\"primary\"\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nDocumentListToolbar.propTypes = {\r\n    className: PropTypes.string\r\n};\r\n\r\nexport default DocumentListToolbar;\r\n"]},"metadata":{},"sourceType":"module"}