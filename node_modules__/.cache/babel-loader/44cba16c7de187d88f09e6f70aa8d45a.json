{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\ayesh\\\\Desktop\\\\TUM\\\\semester 3\\\\Final Presentation\\\\dedas-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"C:\\\\Users\\\\ayesh\\\\Desktop\\\\TUM\\\\semester 3\\\\Final Presentation\\\\dedas-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\ayesh\\\\Desktop\\\\TUM\\\\semester 3\\\\Final Presentation\\\\dedas-frontend\\\\src\\\\views\\\\PublicDocuments\\\\components\\\\DocumentListTable\\\\DocumentListTable.js\";\nimport React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport { Avatar, Button, Card, CardActions, CardContent, Table, TableBody, TableCell, TableHead, TablePagination, TableRow, Typography } from '@material-ui/core';\nimport PersonIcon from '@material-ui/icons/Person';\nimport { DocumentService } from 'service';\nimport { saveAs } from 'file-saver';\nimport { useHistory } from 'react-router-dom';\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1050\n  },\n  nameContainer: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  avatar: {\n    marginRight: theme.spacing(1)\n  },\n  actions: {\n    justifyContent: 'flex-end'\n  },\n  tableCell: {\n    width: '70%'\n  }\n}));\n\nconst DocumentListTable = props => {\n  const className = props.className,\n        rest = _objectWithoutProperties(props, [\"className\"]);\n\n  const classes = useStyles();\n  let history = useHistory();\n\n  const _useState = useState(10),\n        _useState2 = _slicedToArray(_useState, 2),\n        rowsPerPage = _useState2[0],\n        setRowsPerPage = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        page = _useState4[0],\n        setPage = _useState4[1];\n\n  const _React$useState = React.useState([]),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        publicDocumentList = _React$useState2[0],\n        setPublicDocumentList = _React$useState2[1];\n\n  const handlePageChange = (event, myPage) => {\n    setPage(myPage);\n  };\n\n  const handleRowsPerPageChange = event => {\n    setPage(0);\n    setRowsPerPage(event.target.value);\n  };\n\n  useEffect(() => {\n    DocumentService.getPublicDocuments().then(resp => resp.json()).then(data => {\n      setPublicDocumentList(data.docs);\n    }).catch(e => {\n      console.log(e);\n    });\n  }, []);\n\n  const startDownload = documentId => {\n    DocumentService.downloadDocument(documentId).then(resp => resp.json()).then(data => {\n      var blob = new Blob([data.csvData], {\n        type: 'text/csv'\n      });\n      saveAs(blob, data.fileName);\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  const viewDocument = documentId => {\n    history.push({\n      pathname: \"/document/\" + documentId\n    });\n  };\n\n  return React.createElement(Card, Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    className: classes.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(PerfectScrollbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.inner,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(Table, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    className: classes.tableCell,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"Name\"), React.createElement(TableCell, {\n    className: classes.tableCell,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"Owner\"), React.createElement(TableCell, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"Upload Date\"), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, publicDocumentList.slice(page * rowsPerPage, (page + 1) * rowsPerPage).map(document => React.createElement(TableRow, {\n    className: classes.tableRow,\n    hover: true,\n    key: document.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    className: classes.tableCell,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.nameContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"body1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, document.title))), React.createElement(TableCell, {\n    className: classes.tableCell,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.nameContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    className: classes.avatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(PersonIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  })), React.createElement(Typography, {\n    variant: \"body1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, document.owner))), React.createElement(TableCell, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, moment(document.createdAt).format('DD/MM/YYYY')), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: () => viewDocument(document.id),\n    color: \"primary\",\n    variant: \"outlined\",\n    className: classes.importButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, \"View\")), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: () => startDownload(document.id),\n    color: \"primary\",\n    variant: \"outlined\",\n    className: classes.importButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, \"Download\"))))))))), React.createElement(CardActions, {\n    className: classes.actions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, React.createElement(TablePagination, {\n    component: \"div\",\n    count: publicDocumentList.length,\n    onChangePage: handlePageChange,\n    onChangeRowsPerPage: handleRowsPerPageChange,\n    page: page,\n    rowsPerPage: rowsPerPage,\n    rowsPerPageOptions: [5, 10, 25],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  })));\n};\n\nDocumentListTable.propTypes = {\n  className: PropTypes.string\n};\nexport default DocumentListTable;","map":{"version":3,"sources":["C:/Users/ayesh/Desktop/TUM/semester 3/Final Presentation/dedas-frontend/src/views/PublicDocuments/components/DocumentListTable/DocumentListTable.js"],"names":["React","useEffect","useState","clsx","PropTypes","moment","PerfectScrollbar","makeStyles","Avatar","Button","Card","CardActions","CardContent","Table","TableBody","TableCell","TableHead","TablePagination","TableRow","Typography","PersonIcon","DocumentService","saveAs","useHistory","useStyles","theme","root","content","padding","inner","minWidth","nameContainer","display","alignItems","avatar","marginRight","spacing","actions","justifyContent","tableCell","width","DocumentListTable","props","className","rest","classes","history","rowsPerPage","setRowsPerPage","page","setPage","publicDocumentList","setPublicDocumentList","handlePageChange","event","myPage","handleRowsPerPageChange","target","value","getPublicDocuments","then","resp","json","data","docs","catch","e","console","log","startDownload","documentId","downloadDocument","blob","Blob","csvData","type","fileName","viewDocument","push","pathname","slice","map","document","tableRow","id","title","owner","createdAt","format","importButton","length","propTypes","string"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n    Avatar,\r\n    Button,\r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TablePagination,\r\n    TableRow,\r\n    Typography\r\n} from '@material-ui/core';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\n\r\nimport { DocumentService } from 'service';\r\nimport { saveAs } from 'file-saver';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {},\r\n    content: {\r\n        padding: 0\r\n    },\r\n    inner: {\r\n        minWidth: 1050\r\n    },\r\n    nameContainer: {\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    },\r\n    avatar: {\r\n        marginRight: theme.spacing(1)\r\n    },\r\n    actions: {\r\n        justifyContent: 'flex-end'\r\n    },\r\n    tableCell: {\r\n        width: '70%'\r\n    }\r\n}));\r\n\r\nconst DocumentListTable = props => {\r\n    const { className, ...rest } = props;\r\n\r\n    const classes = useStyles();\r\n    let history = useHistory();\r\n\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n    const [page, setPage] = useState(0);\r\n    const [publicDocumentList, setPublicDocumentList] = React.useState([]);\r\n\r\n    const handlePageChange = (event, myPage) => {\r\n        setPage(myPage);\r\n    };\r\n\r\n    const handleRowsPerPageChange = event => {\r\n        setPage(0);\r\n        setRowsPerPage(event.target.value);\r\n    };\r\n\r\n    useEffect(() => {\r\n        DocumentService.getPublicDocuments()\r\n            .then(resp => resp.json())\r\n            .then(data => {\r\n                setPublicDocumentList(data.docs);\r\n            }).catch((e) => {\r\n            console.log(e);\r\n        });\r\n    }, []);\r\n\r\n    const startDownload = (documentId) => {\r\n        DocumentService.downloadDocument(documentId)\r\n            .then(resp => resp.json())\r\n            .then(data => {\r\n                var blob = new Blob([data.csvData], { type: 'text/csv' });\r\n                saveAs(blob, data.fileName);\r\n            }).catch((e) => {\r\n            console.log(e);\r\n        });\r\n    };\r\n\r\n    const viewDocument = (documentId) => {\r\n        history.push({\r\n            pathname: \"/document/\"+documentId\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Card\r\n            {...rest}\r\n            className={clsx(classes.root, className)}\r\n        >\r\n            <CardContent className={classes.content}>\r\n                <PerfectScrollbar>\r\n                    <div className={classes.inner}>\r\n                        <Table>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell className={classes.tableCell}>Name</TableCell>\r\n                                    <TableCell className={classes.tableCell}>Owner</TableCell>\r\n                                    <TableCell align=\"center\">Upload Date</TableCell>\r\n                                    <TableCell align=\"right\"></TableCell>\r\n                                    <TableCell align=\"right\"></TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {publicDocumentList.slice((page * rowsPerPage), ((page + 1) * rowsPerPage)).map(document => (\r\n                                    <TableRow\r\n                                        className={classes.tableRow}\r\n                                        hover\r\n                                        key={document.id}\r\n                                    >\r\n                                        <TableCell className={classes.tableCell}>\r\n                                            <div className={classes.nameContainer}>\r\n                                                <Typography variant=\"body1\">{document.title}</Typography>\r\n                                            </div>\r\n                                        </TableCell>\r\n                                        <TableCell className={classes.tableCell}>\r\n                                            <div className={classes.nameContainer}>\r\n                                                <Avatar className={classes.avatar}><PersonIcon /></Avatar>\r\n                                                <Typography variant=\"body1\">{document.owner}</Typography>\r\n                                            </div>\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            {moment(document.createdAt).format('DD/MM/YYYY')}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"right\">\r\n                                            <Button\r\n                                                onClick={() => viewDocument(document.id)}\r\n                                                color=\"primary\"\r\n                                                variant=\"outlined\"\r\n                                                className={classes.importButton}>\r\n                                                View\r\n                                            </Button>\r\n                                        </TableCell>\r\n                                        <TableCell align=\"right\">\r\n                                            <Button\r\n                                                onClick={() => startDownload(document.id)}\r\n                                                color=\"primary\"\r\n                                                variant=\"outlined\"\r\n                                                className={classes.importButton}>\r\n                                                Download\r\n                                            </Button>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </div>\r\n                </PerfectScrollbar>\r\n            </CardContent>\r\n            <CardActions className={classes.actions}>\r\n                <TablePagination\r\n                    component=\"div\"\r\n                    count={publicDocumentList.length}\r\n                    onChangePage={handlePageChange}\r\n                    onChangeRowsPerPage={handleRowsPerPageChange}\r\n                    page={page}\r\n                    rowsPerPage={rowsPerPage}\r\n                    rowsPerPageOptions={[5, 10, 25]}\r\n                />\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n};\r\n\r\nDocumentListTable.propTypes = {\r\n    className: PropTypes.string\r\n};\r\n\r\nexport default DocumentListTable;\r\n"]},"metadata":{},"sourceType":"module"}