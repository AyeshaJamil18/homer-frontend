{"ast":null,"code":"import HttpService from './HttpService';\nconst baseURL = process.env.REACT_APP_BACKEND_API_URL + '/document';\n\nconst createDocument = document => {\n  return new Promise((resolve, reject) => {\n    HttpService.post(baseURL, document, function (data) {\n      resolve(data);\n    }, function (textStatus) {\n      reject(textStatus);\n    });\n  });\n};\n\nconst getDocument = () => {\n  return new Promise((resolve, reject) => {\n    HttpService.get(baseURL, function (data) {\n      resolve(data);\n    }, function (textStatus) {\n      reject(textStatus);\n    });\n  });\n};\n\nconst downloadDocument = documentId => {\n  return new Promise((resolve, reject) => {\n    const url = baseURL + \"/\" + documentId + \"/download\";\n    HttpService.get(url, function (data) {\n      resolve(data);\n    }, function (textStatus) {\n      reject(textStatus);\n    });\n  });\n};\n\nconst getPublicDocuments = () => {\n  return new Promise((resolve, reject) => {\n    HttpService.get(baseURL + '/sharedPublic', function (data) {\n      resolve(data);\n    }, function (textStatus) {\n      reject(textStatus);\n    });\n  });\n};\n\nexport default {\n  createDocument,\n  getDocument,\n  downloadDocument,\n  getPublicDocuments\n};","map":{"version":3,"sources":["C:/Users/ayesh/Desktop/TUM/semester 3/Final Presentation/dedas-frontend/src/service/DocumentService.js"],"names":["HttpService","baseURL","process","env","REACT_APP_BACKEND_API_URL","createDocument","document","Promise","resolve","reject","post","data","textStatus","getDocument","get","downloadDocument","documentId","url","getPublicDocuments"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,eAAxB;AAEA,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,yBAAZ,GAAwC,WAAxD;;AAEA,MAAMC,cAAc,GAAIC,QAAD,IAAc;AACjC,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCT,IAAAA,WAAW,CAACU,IAAZ,CAAiBT,OAAjB,EAA0BK,QAA1B,EAAoC,UAASK,IAAT,EAAe;AAC/CH,MAAAA,OAAO,CAACG,IAAD,CAAP;AACH,KAFD,EAEG,UAASC,UAAT,EAAqB;AACpBH,MAAAA,MAAM,CAACG,UAAD,CAAN;AACH,KAJD;AAKH,GANM,CAAP;AAOH,CARD;;AAWA,MAAMC,WAAW,GAAG,MAAM;AACtB,SAAO,IAAIN,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCT,IAAAA,WAAW,CAACc,GAAZ,CAAgBb,OAAhB,EAAyB,UAASU,IAAT,EAAe;AACpCH,MAAAA,OAAO,CAACG,IAAD,CAAP;AACH,KAFD,EAEG,UAASC,UAAT,EAAqB;AACpBH,MAAAA,MAAM,CAACG,UAAD,CAAN;AACH,KAJD;AAKH,GANM,CAAP;AAOH,CARD;;AAUA,MAAMG,gBAAgB,GAAIC,UAAD,IAAgB;AACrC,SAAO,IAAIT,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,UAAMQ,GAAG,GAAGhB,OAAO,GAAG,GAAV,GAAgBe,UAAhB,GAA6B,WAAzC;AACAhB,IAAAA,WAAW,CAACc,GAAZ,CAAgBG,GAAhB,EAAqB,UAASN,IAAT,EAAe;AAChCH,MAAAA,OAAO,CAACG,IAAD,CAAP;AACH,KAFD,EAEG,UAASC,UAAT,EAAqB;AACpBH,MAAAA,MAAM,CAACG,UAAD,CAAN;AACH,KAJD;AAKH,GAPM,CAAP;AAQH,CATD;;AAWA,MAAMM,kBAAkB,GAAG,MAAM;AAC7B,SAAO,IAAIX,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCT,IAAAA,WAAW,CAACc,GAAZ,CAAgBb,OAAO,GAAG,eAA1B,EAA2C,UAASU,IAAT,EAAe;AACtDH,MAAAA,OAAO,CAACG,IAAD,CAAP;AACH,KAFD,EAEG,UAASC,UAAT,EAAqB;AACpBH,MAAAA,MAAM,CAACG,UAAD,CAAN;AACH,KAJD;AAKH,GANM,CAAP;AAOH,CARD;;AAUA,eAAe;AACXP,EAAAA,cADW;AAEXQ,EAAAA,WAFW;AAGXE,EAAAA,gBAHW;AAIXG,EAAAA;AAJW,CAAf","sourcesContent":["import HttpService from './HttpService';\r\n\r\nconst baseURL = process.env.REACT_APP_BACKEND_API_URL + '/document';\r\n\r\nconst createDocument = (document) => {\r\n    return new Promise((resolve, reject) => {\r\n        HttpService.post(baseURL, document, function(data) {\r\n            resolve(data);\r\n        }, function(textStatus) {\r\n            reject(textStatus);\r\n        });\r\n    });\r\n};\r\n\r\n\r\nconst getDocument = () => {\r\n    return new Promise((resolve, reject) => {\r\n        HttpService.get(baseURL, function(data) {\r\n            resolve(data);\r\n        }, function(textStatus) {\r\n            reject(textStatus);\r\n        });\r\n    });\r\n};\r\n\r\nconst downloadDocument = (documentId) => {\r\n    return new Promise((resolve, reject) => {\r\n        const url = baseURL + \"/\" + documentId + \"/download\"\r\n        HttpService.get(url, function(data) {\r\n            resolve(data);\r\n        }, function(textStatus) {\r\n            reject(textStatus);\r\n        });\r\n    });\r\n}\r\n\r\nconst getPublicDocuments = () => {\r\n    return new Promise((resolve, reject) => {\r\n        HttpService.get(baseURL + '/sharedPublic', function(data) {\r\n            resolve(data);\r\n        }, function(textStatus) {\r\n            reject(textStatus);\r\n        });\r\n    });\r\n}\r\n\r\nexport default {\r\n    createDocument,\r\n    getDocument,\r\n    downloadDocument,\r\n    getPublicDocuments\r\n};\r\n"]},"metadata":{},"sourceType":"module"}