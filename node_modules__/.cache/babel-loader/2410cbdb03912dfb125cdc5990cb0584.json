{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\ayesh\\\\Desktop\\\\TUM\\\\semester 3\\\\Final Presentation\\\\dedas-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"C:\\\\Users\\\\ayesh\\\\Desktop\\\\TUM\\\\semester 3\\\\Final Presentation\\\\dedas-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\ayesh\\\\Desktop\\\\TUM\\\\semester 3\\\\Final Presentation\\\\dedas-frontend\\\\src\\\\views\\\\MyDocumentList\\\\components\\\\DocumentListTable\\\\DocumentListTable.js\";\nimport React, { useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button, Card, CardActions, CardContent, Checkbox, Grid, Radio, Table, TableBody, TableCell, TableHead, TablePagination, TableRow, TextField, Typography } from '@material-ui/core';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { DocumentService } from 'service';\nimport { saveAs } from 'file-saver';\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1050\n  },\n  nameContainer: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  actions: {\n    justifyContent: 'flex-end'\n  },\n  tableCell: {\n    width: '70%'\n  }\n}));\n\nconst DocumentListTable = props => {\n  const className = props.className,\n        users = props.users,\n        activeDocumentList = props.activeDocumentList,\n        activePrivacy = props.activePrivacy,\n        privacyOptions = props.privacyOptions,\n        rest = _objectWithoutProperties(props, [\"className\", \"users\", \"activeDocumentList\", \"activePrivacy\", \"privacyOptions\"]);\n\n  const classes = useStyles();\n\n  const _useState = useState(10),\n        _useState2 = _slicedToArray(_useState, 2),\n        rowsPerPage = _useState2[0],\n        setRowsPerPage = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        page = _useState4[0],\n        setPage = _useState4[1];\n\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        open = _React$useState2[0],\n        setOpen = _React$useState2[1];\n\n  const _React$useState3 = React.useState(''),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        value = _React$useState4[0],\n        setValue = _React$useState4[1];\n\n  const _React$useState5 = React.useState('public'),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        selectedPrivacy = _React$useState6[0],\n        setSelectedPrivacy = _React$useState6[1];\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handlePageChange = (event, page) => {\n    setPage(page);\n  };\n\n  const handleRowsPerPageChange = event => {\n    setPage(0);\n    setRowsPerPage(event.target.value);\n  };\n\n  const handleRadioChange = event => {\n    setSelectedPrivacy(event.target.value);\n  };\n\n  const handleClickUrl = () => {\n    setValue('https://wwww.dedas.com/documents/id');\n  };\n\n  const startDownload = documentId => {\n    DocumentService.downloadDocument(documentId).then(data => {\n      var blob = new Blob([data.csvData], {\n        type: 'text/csv'\n      });\n      saveAs(blob, data.fileName);\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  return React.createElement(Card, Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    className: classes.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(PerfectScrollbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.inner,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(Table, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    className: classes.tableCell,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"Name\"), React.createElement(TableCell, {\n    className: classes.tableCell,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"Privacy\"), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"Upload Date\"), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, activeDocumentList.slice(page * rowsPerPage, (page + 1) * rowsPerPage).map(document => React.createElement(TableRow, {\n    className: classes.tableRow,\n    hover: true,\n    key: document.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    className: classes.tableCell,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.nameContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"body1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, document.title))), React.createElement(TableCell, {\n    className: classes.tableCell,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.nameContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"body1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, activePrivacy))), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, moment(document.createdAt).format('DD/MM/YYYY')), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(Button // onClick={handleClickOpen}\n  , {\n    onClick: () => alert('it will redirect to the editor :)'),\n    color: \"primary\",\n    variant: \"outlined\",\n    className: classes.importButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, \"Edit\")), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: handleClickOpen // onClick={() => alert('Url will be generated :)')}\n    ,\n    color: \"primary\",\n    variant: \"outlined\",\n    className: classes.importButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, \"Share\")), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, React.createElement(Button // onClick={handleClickOpen}\n  , {\n    onClick: () => startDownload(document.id),\n    color: \"primary\",\n    variant: \"outlined\",\n    className: classes.importButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, \"Download\")))))), React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, \"Sharing\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, React.createElement(DialogContentText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, \"To share this dataset(document.csv) to another user or publicly, please select privacy setting.\"), React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, \"Private\"), React.createElement(Radio, {\n    checked: selectedPrivacy === 'private',\n    onChange: handleRadioChange,\n    value: \"private\",\n    name: \"radio-button-demo\",\n    inputProps: {\n      'aria-label': 'Private'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, \"Public\"), React.createElement(Radio, {\n    checked: selectedPrivacy === 'public',\n    onChange: handleRadioChange,\n    value: \"public\",\n    name: \"radio-button-demo\",\n    inputProps: {\n      'aria-label': 'Public'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: classes.spacer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  })), selectedPrivacy == 'private' && React.createElement(Button, {\n    color: \"primary\",\n    onClick: handleClickUrl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, \"Create URL\"), selectedPrivacy == 'private' && React.createElement(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    value: value,\n    id: \"name\",\n    label: \"URL Address\",\n    type: \"email\",\n    fullWidth: true,\n    InputProps: {\n      readOnly: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  })), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }, \"Cancel\"), selectedPrivacy == 'public' && React.createElement(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }, \"Share\")))))), React.createElement(CardActions, {\n    className: classes.actions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    },\n    __self: this\n  }, React.createElement(TablePagination, {\n    component: \"div\",\n    count: activeDocumentList.length,\n    onChangePage: handlePageChange,\n    onChangeRowsPerPage: handleRowsPerPageChange,\n    page: page,\n    rowsPerPage: rowsPerPage,\n    rowsPerPageOptions: [5, 10, 25],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233\n    },\n    __self: this\n  })));\n};\n\nDocumentListTable.propTypes = {\n  className: PropTypes.string,\n  users: PropTypes.array.isRequired\n};\nexport default DocumentListTable;","map":{"version":3,"sources":["C:/Users/ayesh/Desktop/TUM/semester 3/Final Presentation/dedas-frontend/src/views/MyDocumentList/components/DocumentListTable/DocumentListTable.js"],"names":["React","useState","useEffect","clsx","PropTypes","moment","PerfectScrollbar","makeStyles","Button","Card","CardActions","CardContent","Checkbox","Grid","Radio","Table","TableBody","TableCell","TableHead","TablePagination","TableRow","TextField","Typography","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","DocumentService","saveAs","useStyles","theme","root","content","padding","inner","minWidth","nameContainer","display","alignItems","avatar","marginRight","spacing","actions","justifyContent","tableCell","width","DocumentListTable","props","className","users","activeDocumentList","activePrivacy","privacyOptions","rest","classes","rowsPerPage","setRowsPerPage","page","setPage","open","setOpen","value","setValue","selectedPrivacy","setSelectedPrivacy","handleClickOpen","handleClose","handlePageChange","event","handleRowsPerPageChange","target","handleRadioChange","handleClickUrl","startDownload","documentId","downloadDocument","then","data","blob","Blob","csvData","type","fileName","catch","e","console","log","slice","map","document","tableRow","id","title","createdAt","format","alert","importButton","spacer","readOnly","length","propTypes","string","array","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,gBAAP,MAA6B,yBAA7B;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SACIC,MADJ,EAEIC,IAFJ,EAGIC,WAHJ,EAIIC,WAJJ,EAKIC,QALJ,EAMIC,IANJ,EAOIC,KAPJ,EAQIC,KARJ,EASIC,SATJ,EAUIC,SAVJ,EAWIC,SAXJ,EAYIC,eAZJ,EAaIC,QAbJ,EAcIC,SAdJ,EAeIC,UAfJ,QAgBO,mBAhBP;AAkBA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AAEA,SAASC,eAAT,QAAgC,SAAhC;AACA,SAASC,MAAT,QAAuB,YAAvB;AAEA,MAAMC,SAAS,GAAGvB,UAAU,CAACwB,KAAK,KAAK;AACnCC,EAAAA,IAAI,EAAE,EAD6B;AAEnCC,EAAAA,OAAO,EAAE;AACLC,IAAAA,OAAO,EAAE;AADJ,GAF0B;AAKnCC,EAAAA,KAAK,EAAE;AACHC,IAAAA,QAAQ,EAAE;AADP,GAL4B;AAQnCC,EAAAA,aAAa,EAAE;AACXC,IAAAA,OAAO,EAAE,MADE;AAEXC,IAAAA,UAAU,EAAE;AAFD,GARoB;AAYnCC,EAAAA,MAAM,EAAE;AACJC,IAAAA,WAAW,EAAEV,KAAK,CAACW,OAAN,CAAc,CAAd;AADT,GAZ2B;AAenCC,EAAAA,OAAO,EAAE;AACLC,IAAAA,cAAc,EAAE;AADX,GAf0B;AAkBnCC,EAAAA,SAAS,EAAE;AACPC,IAAAA,KAAK,EAAE;AADA;AAlBwB,CAAL,CAAN,CAA5B;;AAuBA,MAAMC,iBAAiB,GAAGC,KAAK,IAAI;AAAA,QACvBC,SADuB,GAC0DD,KAD1D,CACvBC,SADuB;AAAA,QACZC,KADY,GAC0DF,KAD1D,CACZE,KADY;AAAA,QACLC,kBADK,GAC0DH,KAD1D,CACLG,kBADK;AAAA,QACeC,aADf,GAC0DJ,KAD1D,CACeI,aADf;AAAA,QAC8BC,cAD9B,GAC0DL,KAD1D,CAC8BK,cAD9B;AAAA,QACiDC,IADjD,4BAC0DN,KAD1D;;AAG/B,QAAMO,OAAO,GAAGzB,SAAS,EAAzB;;AAH+B,oBAKO7B,QAAQ,CAAC,EAAD,CALf;AAAA;AAAA,QAKxBuD,WALwB;AAAA,QAKXC,cALW;;AAAA,qBAMPxD,QAAQ,CAAC,CAAD,CAND;AAAA;AAAA,QAMxByD,IANwB;AAAA,QAMlBC,OANkB;;AAAA,0BAQP3D,KAAK,CAACC,QAAN,CAAe,KAAf,CARO;AAAA;AAAA,QAQxB2D,IARwB;AAAA,QAQlBC,OARkB;;AAAA,2BASL7D,KAAK,CAACC,QAAN,CAAe,EAAf,CATK;AAAA;AAAA,QASxB6D,KATwB;AAAA,QASjBC,QATiB;;AAAA,2BAUe/D,KAAK,CAACC,QAAN,CAAe,QAAf,CAVf;AAAA;AAAA,QAUxB+D,eAVwB;AAAA,QAUPC,kBAVO;;AAc/B,QAAMC,eAAe,GAAG,MAAM;AAC1BL,IAAAA,OAAO,CAAC,IAAD,CAAP;AACH,GAFD;;AAIA,QAAMM,WAAW,GAAG,MAAM;AACtBN,IAAAA,OAAO,CAAC,KAAD,CAAP;AACH,GAFD;;AAIA,QAAMO,gBAAgB,GAAG,CAACC,KAAD,EAAQX,IAAR,KAAiB;AACtCC,IAAAA,OAAO,CAACD,IAAD,CAAP;AACH,GAFD;;AAIA,QAAMY,uBAAuB,GAAGD,KAAK,IAAI;AACrCV,IAAAA,OAAO,CAAC,CAAD,CAAP;AACAF,IAAAA,cAAc,CAACY,KAAK,CAACE,MAAN,CAAaT,KAAd,CAAd;AACH,GAHD;;AAKA,QAAMU,iBAAiB,GAAIH,KAAD,IAAW;AACjCJ,IAAAA,kBAAkB,CAACI,KAAK,CAACE,MAAN,CAAaT,KAAd,CAAlB;AACH,GAFD;;AAIA,QAAMW,cAAc,GAAG,MAAM;AACzBV,IAAAA,QAAQ,CAAC,qCAAD,CAAR;AACH,GAFD;;AAIA,QAAMW,aAAa,GAAIC,UAAD,IAAgB;AAClC/C,IAAAA,eAAe,CAACgD,gBAAhB,CAAiCD,UAAjC,EAA6CE,IAA7C,CAAkDC,IAAI,IAAI;AACtD,UAAIC,IAAI,GAAG,IAAIC,IAAJ,CAAS,CAACF,IAAI,CAACG,OAAN,CAAT,EAAyB;AAACC,QAAAA,IAAI,EAAE;AAAP,OAAzB,CAAX;AACArD,MAAAA,MAAM,CAACkD,IAAD,EAAOD,IAAI,CAACK,QAAZ,CAAN;AACH,KAHD,EAGGC,KAHH,CAGUC,CAAD,IAAO;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH,KALD;AAMH,GAPD;;AASA,SACI,oBAAC,IAAD,oBACQ/B,IADR;AAEI,IAAA,SAAS,EAAEnD,IAAI,CAACoD,OAAO,CAACvB,IAAT,EAAeiB,SAAf,CAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAII,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAEM,OAAO,CAACtB,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAEsB,OAAO,CAACpB,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAEoB,OAAO,CAACV,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEI,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAEU,OAAO,CAACV,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ,EAGI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHJ,EAII,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAKI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,EAMI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CADJ,CADJ,EAWI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKM,kBAAkB,CAACqC,KAAnB,CAA0B9B,IAAI,GAAGF,WAAjC,EAAgD,CAACE,IAAI,GAAG,CAAR,IAAaF,WAA7D,EAA2EiC,GAA3E,CAA+EC,QAAQ,IACpF,oBAAC,QAAD;AACI,IAAA,SAAS,EAAEnC,OAAO,CAACoC,QADvB;AAEI,IAAA,KAAK,MAFT;AAGI,IAAA,GAAG,EAAED,QAAQ,CAACE,EAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAErC,OAAO,CAACV,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAEU,OAAO,CAAClB,aAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BqD,QAAQ,CAACG,KAAtC,CADJ,CADJ,CALJ,EAUI,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAEtC,OAAO,CAACV,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAEU,OAAO,CAAClB,aAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6Be,aAA7B,CADJ,CADJ,CAVJ,EAeI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK/C,MAAM,CAACqF,QAAQ,CAACI,SAAV,CAAN,CAA2BC,MAA3B,CAAkC,YAAlC,CADL,CAfJ,EAkBI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD,CACI;AADJ;AAEI,IAAA,OAAO,EAAE,MAAMC,KAAK,CAAC,mCAAD,CAFxB;AAGI,IAAA,KAAK,EAAC,SAHV;AAII,IAAA,OAAO,EAAC,UAJZ;AAKI,IAAA,SAAS,EAAEzC,OAAO,CAAC0C,YALvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CAlBJ,EA4BI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AACI,IAAA,OAAO,EAAE/B,eADb,CAEI;AAFJ;AAGI,IAAA,KAAK,EAAC,SAHV;AAII,IAAA,OAAO,EAAC,UAJZ;AAKI,IAAA,SAAS,EAAEX,OAAO,CAAC0C,YALvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,CA5BJ,EAsCI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD,CACI;AADJ;AAEI,IAAA,OAAO,EAAE,MAAMvB,aAAa,CAACgB,QAAQ,CAACE,EAAV,CAFhC;AAGI,IAAA,KAAK,EAAC,SAHV;AAII,IAAA,OAAO,EAAC,UAJZ;AAKI,IAAA,SAAS,EAAErC,OAAO,CAAC0C,YALvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CAtCJ,CADH,CADL,CAXJ,CADJ,EAkEI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAErC,IAAd;AAAoB,IAAA,OAAO,EAAEO,WAA7B;AAA0C,uBAAgB,mBAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,WAAD;AAAa,IAAA,EAAE,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uGADJ,EAKI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI,oBAAC,KAAD;AACI,IAAA,OAAO,EAAEH,eAAe,KAAK,SADjC;AAEI,IAAA,QAAQ,EAAEQ,iBAFd;AAGI,IAAA,KAAK,EAAC,SAHV;AAII,IAAA,IAAI,EAAC,mBAJT;AAKI,IAAA,UAAU,EAAE;AAAE,oBAAc;AAAhB,KALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ,EAUI,oBAAC,KAAD;AACI,IAAA,OAAO,EAAER,eAAe,KAAK,QADjC;AAEI,IAAA,QAAQ,EAAEQ,iBAFd;AAGI,IAAA,KAAK,EAAC,QAHV;AAII,IAAA,IAAI,EAAC,mBAJT;AAKI,IAAA,UAAU,EAAE;AAAE,oBAAc;AAAhB,KALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,EAiBI;AAAM,IAAA,SAAS,EAAEjB,OAAO,CAAC2C,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBJ,CALJ,EAwBKlC,eAAe,IAAI,SAAnB,IAAgC,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,OAAO,EAAES,cAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAxBrC,EA2BKT,eAAe,IAAI,SAAnB,IAAgC,oBAAC,SAAD;AAC7B,IAAA,SAAS,MADoB;AAE7B,IAAA,MAAM,EAAC,OAFsB;AAG7B,IAAA,KAAK,EAAEF,KAHsB;AAI7B,IAAA,EAAE,EAAC,MAJ0B;AAK7B,IAAA,KAAK,EAAC,aALuB;AAM7B,IAAA,IAAI,EAAC,OANwB;AAO7B,IAAA,SAAS,MAPoB;AAQ7B,IAAA,UAAU,EAAE;AACRqC,MAAAA,QAAQ,EAAE;AADF,KARiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3BrC,CAFJ,EA0CI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEhC,WAAjB;AAA8B,IAAA,KAAK,EAAC,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAIKH,eAAe,IAAI,QAAnB,IAA+B,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEG,WAAjB;AAA8B,IAAA,KAAK,EAAC,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJpC,CA1CJ,CAlEJ,CADJ,CADJ,CAJJ,EA8HI,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAEZ,OAAO,CAACZ,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,eAAD;AACI,IAAA,SAAS,EAAC,KADd;AAEI,IAAA,KAAK,EAAEQ,kBAAkB,CAACiD,MAF9B;AAGI,IAAA,YAAY,EAAEhC,gBAHlB;AAII,IAAA,mBAAmB,EAAEE,uBAJzB;AAKI,IAAA,IAAI,EAAEZ,IALV;AAMI,IAAA,WAAW,EAAEF,WANjB;AAOI,IAAA,kBAAkB,EAAE,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,CAPxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CA9HJ,CADJ;AA4IH,CA5LD;;AA8LAT,iBAAiB,CAACsD,SAAlB,GAA8B;AAC1BpD,EAAAA,SAAS,EAAE7C,SAAS,CAACkG,MADK;AAE1BpD,EAAAA,KAAK,EAAE9C,SAAS,CAACmG,KAAV,CAAgBC;AAFG,CAA9B;AAKA,eAAezD,iBAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    Checkbox,\r\n    Grid,\r\n    Radio,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TablePagination,\r\n    TableRow,\r\n    TextField,\r\n    Typography\r\n} from '@material-ui/core';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport { DocumentService } from 'service';\r\nimport { saveAs } from 'file-saver';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {},\r\n    content: {\r\n        padding: 0\r\n    },\r\n    inner: {\r\n        minWidth: 1050\r\n    },\r\n    nameContainer: {\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    },\r\n    avatar: {\r\n        marginRight: theme.spacing(2)\r\n    },\r\n    actions: {\r\n        justifyContent: 'flex-end'\r\n    },\r\n    tableCell: {\r\n        width: '70%'\r\n    }\r\n}));\r\n\r\nconst DocumentListTable = props => {\r\n    const { className, users, activeDocumentList, activePrivacy, privacyOptions, ...rest } = props;\r\n\r\n    const classes = useStyles();\r\n\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n    const [page, setPage] = useState(0);\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const [value, setValue] = React.useState('');\r\n    const [selectedPrivacy, setSelectedPrivacy] = React.useState('public');\r\n\r\n    \r\n    \r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handlePageChange = (event, page) => {\r\n        setPage(page);\r\n    };\r\n\r\n    const handleRowsPerPageChange = event => {\r\n        setPage(0);\r\n        setRowsPerPage(event.target.value);\r\n    };\r\n\r\n    const handleRadioChange = (event) => {\r\n        setSelectedPrivacy(event.target.value);\r\n    };\r\n\r\n    const handleClickUrl = () => {\r\n        setValue('https://wwww.dedas.com/documents/id');\r\n    };\r\n\r\n    const startDownload = (documentId) => {\r\n        DocumentService.downloadDocument(documentId).then(data => {\r\n            var blob = new Blob([data.csvData], {type: 'text/csv'});\r\n            saveAs(blob, data.fileName);\r\n        }).catch((e) => {\r\n            console.log(e);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Card\r\n            {...rest}\r\n            className={clsx(classes.root, className)}\r\n        >\r\n            <CardContent className={classes.content}>\r\n                <PerfectScrollbar>\r\n                    <div className={classes.inner}>\r\n                        <Table>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell className={classes.tableCell}>Name</TableCell>\r\n                                    <TableCell className={classes.tableCell}>Privacy</TableCell>\r\n                                    <TableCell align=\"right\">Upload Date</TableCell>\r\n                                    <TableCell align=\"right\"></TableCell>\r\n                                    <TableCell align=\"right\"></TableCell>\r\n                                    <TableCell align=\"right\"></TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {activeDocumentList.slice((page * rowsPerPage), ((page + 1) * rowsPerPage)).map(document => (\r\n                                    <TableRow\r\n                                        className={classes.tableRow}\r\n                                        hover\r\n                                        key={document.id}\r\n                                    >\r\n                                        <TableCell className={classes.tableCell}>\r\n                                            <div className={classes.nameContainer}>\r\n                                                <Typography variant=\"body1\">{document.title}</Typography>\r\n                                            </div>\r\n                                        </TableCell>\r\n                                        <TableCell className={classes.tableCell}>\r\n                                            <div className={classes.nameContainer}>\r\n                                                <Typography variant=\"body1\">{activePrivacy}</Typography>\r\n                                            </div>\r\n                                        </TableCell>\r\n                                        <TableCell align=\"right\">\r\n                                            {moment(document.createdAt).format('DD/MM/YYYY')}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"right\">\r\n                                            <Button\r\n                                                // onClick={handleClickOpen}\r\n                                                onClick={() => alert('it will redirect to the editor :)')}\r\n                                                color=\"primary\"\r\n                                                variant=\"outlined\"\r\n                                                className={classes.importButton}>\r\n                                                Edit\r\n                                            </Button>\r\n                                        </TableCell>\r\n                                        <TableCell align=\"right\">\r\n                                            <Button\r\n                                                onClick={handleClickOpen}\r\n                                                // onClick={() => alert('Url will be generated :)')}\r\n                                                color=\"primary\"\r\n                                                variant=\"outlined\"\r\n                                                className={classes.importButton}>\r\n                                                Share\r\n                                            </Button>\r\n                                        </TableCell>\r\n                                        <TableCell align=\"right\">\r\n                                            <Button\r\n                                                // onClick={handleClickOpen}\r\n                                                onClick={() => startDownload(document.id)}\r\n                                                color=\"primary\"\r\n                                                variant=\"outlined\"\r\n                                                className={classes.importButton}>\r\n                                                Download\r\n                                            </Button>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                        <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                            <DialogTitle id=\"form-dialog-title\">Sharing</DialogTitle>\r\n                            <DialogContent>\r\n                                <DialogContentText>\r\n                                    To share this dataset(document.csv) to another user or publicly, please select\r\n                                    privacy setting.\r\n                                </DialogContentText>\r\n                                <Grid>\r\n                                    <label>Private</label>\r\n                                    <Radio\r\n                                        checked={selectedPrivacy === 'private'}\r\n                                        onChange={handleRadioChange}\r\n                                        value=\"private\"\r\n                                        name=\"radio-button-demo\"\r\n                                        inputProps={{ 'aria-label': 'Private' }}\r\n                                    />\r\n                                    <label>Public</label>\r\n                                    <Radio\r\n                                        checked={selectedPrivacy === 'public'}\r\n                                        onChange={handleRadioChange}\r\n                                        value=\"public\"\r\n                                        name=\"radio-button-demo\"\r\n                                        inputProps={{ 'aria-label': 'Public' }}\r\n                                    />\r\n                                    <span className={classes.spacer}/>\r\n                                </Grid>\r\n                                {selectedPrivacy == 'private' && <Button color=\"primary\" onClick={handleClickUrl}>\r\n                                    Create URL\r\n                                </Button>}\r\n                                {selectedPrivacy == 'private' && <TextField\r\n                                    autoFocus\r\n                                    margin=\"dense\"\r\n                                    value={value}\r\n                                    id=\"name\"\r\n                                    label=\"URL Address\"\r\n                                    type=\"email\"\r\n                                    fullWidth\r\n                                    InputProps={{\r\n                                        readOnly: true\r\n                                    }}\r\n                                />}\r\n                            </DialogContent>\r\n                            <DialogActions>\r\n                                <Button onClick={handleClose} color=\"primary\">\r\n                                    Cancel\r\n                                </Button>\r\n                                {selectedPrivacy == 'public' && <Button onClick={handleClose} color=\"primary\">\r\n                                    Share\r\n                                </Button>}\r\n                            </DialogActions>\r\n                        </Dialog>\r\n                    </div>\r\n                </PerfectScrollbar>\r\n            </CardContent>\r\n            <CardActions className={classes.actions}>\r\n                <TablePagination\r\n                    component=\"div\"\r\n                    count={activeDocumentList.length}\r\n                    onChangePage={handlePageChange}\r\n                    onChangeRowsPerPage={handleRowsPerPageChange}\r\n                    page={page}\r\n                    rowsPerPage={rowsPerPage}\r\n                    rowsPerPageOptions={[5, 10, 25]}\r\n                />\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n};\r\n\r\nDocumentListTable.propTypes = {\r\n    className: PropTypes.string,\r\n    users: PropTypes.array.isRequired\r\n};\r\n\r\nexport default DocumentListTable;\r\n"]},"metadata":{},"sourceType":"module"}