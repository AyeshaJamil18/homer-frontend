{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\ayesh\\\\Desktop\\\\TUM\\\\semester 3\\\\Final Presentation\\\\dedas-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"C:\\\\Users\\\\ayesh\\\\Desktop\\\\TUM\\\\semester 3\\\\Final Presentation\\\\dedas-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\ayesh\\\\Desktop\\\\TUM\\\\semester 3\\\\Final Presentation\\\\dedas-frontend\\\\src\\\\views\\\\SignUp\\\\SignUp.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport { Link as RouterLink, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport validate from 'validate.js';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button, Checkbox, FormHelperText, Grid, IconButton, Link, TextField, Typography } from '@material-ui/core';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { AuthService } from '../../service';\nlet ErrorMessage = '';\nconst schema = {\n  userName: {\n    presence: {\n      allowEmpty: false,\n      message: 'is required'\n    },\n    length: {\n      maximum: 32\n    },\n    format: {\n      pattern: '^[a-zA-Z0-9_]*$',\n      flags: 'i',\n      message: 'can only contain English Alphabets and Numbers from 0-9'\n    }\n  },\n  firstName: {\n    presence: {\n      allowEmpty: false,\n      message: 'is required'\n    },\n    length: {\n      maximum: 32\n    }\n  },\n  lastName: {\n    presence: {\n      allowEmpty: false,\n      message: 'is required'\n    },\n    length: {\n      maximum: 32\n    }\n  },\n  email: {\n    presence: {\n      allowEmpty: false,\n      message: 'is required'\n    },\n    email: true,\n    length: {\n      maximum: 64\n    }\n  },\n  password: {\n    presence: {\n      allowEmpty: false,\n      message: 'is required'\n    },\n    format: {\n      pattern: '^(?=.*[a-z])(?=.*[A-Z])(?=.*\\\\d)(?=.*[@$!%*?&,.#\\\\+\\\\-\\\\=\\\\_~])[A-Za-z\\\\d@$!%*?&,.#\\\\+\\\\-\\\\=\\\\_~]{8,30}$',\n      flags: 'i',\n      message: 'must have a minimum of 8 characters, one capital letter, one number, one special character (@$!%*?&,.#+-=_~) and only English alphabets are allowed.'\n    },\n    length: {\n      maximum: 30,\n      minimum: 8,\n      message: 'Minimum 8 characters required'\n    }\n  },\n  policy: {\n    presence: {\n      allowEmpty: false,\n      message: 'is required'\n    },\n    checked: true\n  }\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: theme.palette.background.default,\n    height: '100%'\n  },\n  grid: {\n    height: '100%'\n  },\n  quoteContainer: {\n    [theme.breakpoints.down('md')]: {\n      display: 'none'\n    }\n  },\n  quote: {\n    backgroundColor: theme.palette.neutral,\n    height: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundImage: 'url(/images/auth.png)',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center'\n  },\n  quoteInner: {\n    textAlign: 'center',\n    flexBasis: '600px'\n  },\n  quoteText: {\n    color: theme.palette.white,\n    fontWeight: 300\n  },\n  name: {\n    marginTop: theme.spacing(3),\n    color: theme.palette.white\n  },\n  bio: {\n    color: theme.palette.white\n  },\n  contentContainer: {},\n  content: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  contentHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    paddingTop: theme.spacing(5),\n    paddingBototm: theme.spacing(2),\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2)\n  },\n  logoImage: {\n    marginLeft: theme.spacing(4)\n  },\n  contentBody: {\n    flexGrow: 1,\n    display: 'flex',\n    alignItems: 'center',\n    [theme.breakpoints.down('md')]: {\n      justifyContent: 'center'\n    }\n  },\n  form: {\n    paddingLeft: 100,\n    paddingRight: 100,\n    paddingBottom: 125,\n    flexBasis: 700,\n    [theme.breakpoints.down('sm')]: {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2)\n    }\n  },\n  title: {\n    marginTop: theme.spacing(3)\n  },\n  textField: {\n    marginTop: theme.spacing(2)\n  },\n  policy: {\n    marginTop: theme.spacing(1),\n    display: 'flex',\n    alignItems: 'center'\n  },\n  policyCheckbox: {\n    marginLeft: '-14px'\n  },\n  signUpButton: {\n    margin: theme.spacing(2, 0)\n  }\n}));\n\nconst SignUp = props => {\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        open = _React$useState2[0],\n        setOpen = _React$useState2[1];\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const history = props.history;\n  const classes = useStyles();\n\n  const _useState = useState({\n    isValid: false,\n    values: {},\n    touched: {},\n    errors: {}\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        formState = _useState2[0],\n        setFormState = _useState2[1];\n\n  useEffect(() => {\n    const errors = validate(formState.values, schema);\n    setFormState(formState => _objectSpread({}, formState, {\n      isValid: errors ? false : true,\n      errors: errors || {}\n    }));\n  }, [formState.values]);\n\n  const handleChange = event => {\n    event.persist();\n    setFormState(formState => _objectSpread({}, formState, {\n      values: _objectSpread({}, formState.values, {\n        [event.target.name]: event.target.type === 'checkbox' ? event.target.checked : event.target.value\n      }),\n      touched: _objectSpread({}, formState.touched, {\n        [event.target.name]: true\n      })\n    }));\n  };\n\n  const handleBack = () => {\n    history.goBack();\n  };\n\n  const handleSignUp = event => {\n    event.preventDefault();\n    AuthService.register(formState.values.userName, formState.values.email, formState.values.firstName, formState.values.lastName, formState.values.password).then(() => {\n      history.push({\n        pathname: '/dashboard'\n      });\n    }).catch(response => {\n      if (response && response.status) {\n        if (response.status === 404) {\n          ErrorMessage = 'Did not find Server';\n          handleClickOpen();\n        } else if (response.status === 409) {\n          return response.json().then(res => {\n            console.log(res);\n\n            if (res) {\n              //ErrorMessage = e;\n              if (res.error === 'Username exists') {\n                ErrorMessage = 'Entered User Name ' + formState.values.userName + ' Already Exists';\n              } else if (res.error === 'Email exists') {\n                ErrorMessage = 'Entered Email ' + formState.values.email + ' Already Exists';\n              } else {\n                ErrorMessage = 'Internal Server Error';\n              }\n\n              handleClickOpen();\n            }\n          });\n        } else if (response.status === 500) {\n          return response.text().then(message => {\n            ErrorMessage = 'Internal server error with message ' + message;\n            handleClickOpen();\n          });\n        }\n      }\n    });\n  };\n\n  const hasError = field => formState.touched[field] && formState.errors[field] ? true : false;\n\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266\n    },\n    __self: this\n  }, React.createElement(Dialog, {\n    \"aria-describedby\": \"alert-dialog-description\",\n    \"aria-labelledby\": \"alert-dialog-title\",\n    onClose: handleClose,\n    open: open,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"alert-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274\n    },\n    __self: this\n  }, 'Sign up Error'), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275\n    },\n    __self: this\n  }, React.createElement(DialogContentText, {\n    id: \"alert-dialog-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276\n    },\n    __self: this\n  }, ErrorMessage)), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282\n    },\n    __self: this\n  }, React.createElement(Button, {\n    autoFocus: true,\n    color: \"primary\",\n    onClick: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283\n    },\n    __self: this\n  }, \"Close\"))), React.createElement(Grid, {\n    className: classes.grid,\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    className: classes.quoteContainer,\n    item: true,\n    lg: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.quote,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.quoteInner,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.quoteText,\n    variant: \"h1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303\n    },\n    __self: this\n  }, \"A platform to anonymize your dataset and share it with others\")))), React.createElement(Grid, {\n    className: classes.content,\n    item: true,\n    lg: 7,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.contentHeader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    onClick: handleBack,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321\n    },\n    __self: this\n  }, React.createElement(ArrowBackIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: classes.contentBody,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: classes.form,\n    onSubmit: handleSignUp,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.title,\n    variant: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330\n    },\n    __self: this\n  }, \"Create new account\"), React.createElement(Typography, {\n    color: \"textSecondary\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336\n    },\n    __self: this\n  }, \"Use your email to create new account\"), React.createElement(TextField, {\n    className: classes.textField,\n    error: hasError('userName'),\n    fullWidth: true,\n    helperText: hasError('userName') ? formState.errors.userName[0] : null,\n    label: \"User Name\",\n    name: \"userName\",\n    onChange: handleChange,\n    type: \"text\",\n    value: formState.values.userName || '',\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    className: classes.textField,\n    error: hasError('firstName'),\n    fullWidth: true,\n    helperText: hasError('firstName') ? formState.errors.firstName[0] : null,\n    label: \"First name\",\n    name: \"firstName\",\n    onChange: handleChange,\n    type: \"text\",\n    value: formState.values.firstName || '',\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    className: classes.textField,\n    error: hasError('lastName'),\n    fullWidth: true,\n    helperText: hasError('lastName') ? formState.errors.lastName[0] : null,\n    label: \"Last name\",\n    name: \"lastName\",\n    onChange: handleChange,\n    type: \"text\",\n    value: formState.values.lastName || '',\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    className: classes.textField,\n    error: hasError('email'),\n    fullWidth: true,\n    helperText: hasError('email') ? formState.errors.email[0] : null,\n    label: \"Email address\",\n    name: \"email\",\n    onChange: handleChange,\n    type: \"text\",\n    value: formState.values.email || '',\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    className: classes.textField,\n    error: hasError('password'),\n    fullWidth: true,\n    helperText: hasError('password') ? formState.errors.password[0] : null,\n    label: \"Password\",\n    name: \"password\",\n    onChange: handleChange,\n    type: \"password\",\n    value: formState.values.password || '',\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.policy,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412\n    },\n    __self: this\n  }, React.createElement(Checkbox, {\n    checked: formState.values.policy || false,\n    className: classes.policyCheckbox,\n    color: \"primary\",\n    name: \"policy\",\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    className: classes.policyText,\n    color: \"textSecondary\",\n    variant: \"body1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420\n    },\n    __self: this\n  }, \"I have read the\", ' ', React.createElement(Link, {\n    color: \"primary\",\n    component: RouterLink,\n    to: \"#\",\n    underline: \"always\",\n    variant: \"h6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426\n    },\n    __self: this\n  }, \"Terms and Conditions\"))), hasError('policy') && React.createElement(FormHelperText, {\n    error: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438\n    },\n    __self: this\n  }, formState.errors.policy[0]), React.createElement(Button, {\n    className: classes.signUpButton,\n    color: \"primary\",\n    disabled: !formState.isValid,\n    fullWidth: true,\n    size: \"large\",\n    type: \"submit\",\n    variant: \"contained\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442\n    },\n    __self: this\n  }, \"Sign up now\"), React.createElement(Typography, {\n    color: \"textSecondary\",\n    variant: \"body1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453\n    },\n    __self: this\n  }, \"Have an account?\", ' ', React.createElement(Link, {\n    component: RouterLink,\n    to: \"/sign-in\",\n    variant: \"h6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458\n    },\n    __self: this\n  }, \"Sign in\"))))))));\n};\n\nSignUp.propTypes = {\n  history: PropTypes.object\n};\nexport default withRouter(SignUp);","map":{"version":3,"sources":["C:/Users/ayesh/Desktop/TUM/semester 3/Final Presentation/dedas-frontend/src/views/SignUp/SignUp.js"],"names":["React","useEffect","useState","Link","RouterLink","withRouter","PropTypes","validate","makeStyles","Button","Checkbox","FormHelperText","Grid","IconButton","TextField","Typography","ArrowBackIcon","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","AuthService","ErrorMessage","schema","userName","presence","allowEmpty","message","length","maximum","format","pattern","flags","firstName","lastName","email","password","minimum","policy","checked","useStyles","theme","root","backgroundColor","palette","background","default","height","grid","quoteContainer","breakpoints","down","display","quote","neutral","justifyContent","alignItems","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","quoteInner","textAlign","flexBasis","quoteText","color","white","fontWeight","name","marginTop","spacing","bio","contentContainer","content","flexDirection","contentHeader","paddingTop","paddingBototm","paddingLeft","paddingRight","logoImage","marginLeft","contentBody","flexGrow","form","paddingBottom","title","textField","policyCheckbox","signUpButton","margin","SignUp","props","open","setOpen","handleClickOpen","handleClose","history","classes","isValid","values","touched","errors","formState","setFormState","handleChange","event","persist","target","type","value","handleBack","goBack","handleSignUp","preventDefault","register","then","push","pathname","catch","response","status","json","res","console","log","error","text","hasError","field","policyText","propTypes","object"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Link as RouterLink, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport validate from 'validate.js';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Button, Checkbox, FormHelperText, Grid, IconButton, Link, TextField, Typography } from '@material-ui/core';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport { AuthService } from '../../service';\r\n\r\nlet ErrorMessage = '';\r\n\r\nconst schema = {\r\n    userName: {\r\n        presence: { allowEmpty: false, message: 'is required' },\r\n        length: {\r\n            maximum: 32\r\n        },\r\n        format: {\r\n            pattern: '^[a-zA-Z0-9_]*$',\r\n            flags: 'i',\r\n            message: 'can only contain English Alphabets and Numbers from 0-9'\r\n        }\r\n    },\r\n    firstName: {\r\n        presence: { allowEmpty: false, message: 'is required' },\r\n        length: {\r\n            maximum: 32\r\n        }\r\n    },\r\n    lastName: {\r\n        presence: { allowEmpty: false, message: 'is required' },\r\n        length: {\r\n            maximum: 32\r\n        }\r\n    },\r\n    email: {\r\n        presence: { allowEmpty: false, message: 'is required' },\r\n        email: true,\r\n        length: {\r\n            maximum: 64\r\n        }\r\n    },\r\n    password: {\r\n        presence: { allowEmpty: false, message: 'is required' },\r\n        format: {\r\n            pattern: '^(?=.*[a-z])(?=.*[A-Z])(?=.*\\\\d)(?=.*[@$!%*?&,.#\\\\+\\\\-\\\\=\\\\_~])[A-Za-z\\\\d@$!%*?&,.#\\\\+\\\\-\\\\=\\\\_~]{8,30}$',\r\n            flags: 'i',\r\n            message: 'must have a minimum of 8 characters, one capital letter, one number, one special character (@$!%*?&,.#+-=_~) and only English alphabets are allowed.'\r\n        },\r\n        length: {\r\n            maximum: 30,\r\n            minimum: 8,\r\n            message: 'Minimum 8 characters required'\r\n        }\r\n    },\r\n    policy: {\r\n        presence: { allowEmpty: false, message: 'is required' },\r\n        checked: true\r\n    }\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        backgroundColor: theme.palette.background.default,\r\n        height: '100%'\r\n    },\r\n    grid: {\r\n        height: '100%'\r\n    },\r\n    quoteContainer: {\r\n        [theme.breakpoints.down('md')]: {\r\n            display: 'none'\r\n        }\r\n    },\r\n    quote: {\r\n        backgroundColor: theme.palette.neutral,\r\n        height: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        backgroundImage: 'url(/images/auth.png)',\r\n        backgroundSize: 'cover',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundPosition: 'center'\r\n    },\r\n    quoteInner: {\r\n        textAlign: 'center',\r\n        flexBasis: '600px'\r\n    },\r\n    quoteText: {\r\n        color: theme.palette.white,\r\n        fontWeight: 300\r\n    },\r\n    name: {\r\n        marginTop: theme.spacing(3),\r\n        color: theme.palette.white\r\n    },\r\n    bio: {\r\n        color: theme.palette.white\r\n    },\r\n    contentContainer: {},\r\n    content: {\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column'\r\n    },\r\n    contentHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        paddingTop: theme.spacing(5),\r\n        paddingBototm: theme.spacing(2),\r\n        paddingLeft: theme.spacing(2),\r\n        paddingRight: theme.spacing(2)\r\n    },\r\n    logoImage: {\r\n        marginLeft: theme.spacing(4)\r\n    },\r\n    contentBody: {\r\n        flexGrow: 1,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        [theme.breakpoints.down('md')]: {\r\n            justifyContent: 'center'\r\n        }\r\n    },\r\n    form: {\r\n        paddingLeft: 100,\r\n        paddingRight: 100,\r\n        paddingBottom: 125,\r\n        flexBasis: 700,\r\n        [theme.breakpoints.down('sm')]: {\r\n            paddingLeft: theme.spacing(2),\r\n            paddingRight: theme.spacing(2)\r\n        }\r\n    },\r\n    title: {\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    textField: {\r\n        marginTop: theme.spacing(2)\r\n    },\r\n    policy: {\r\n        marginTop: theme.spacing(1),\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    },\r\n    policyCheckbox: {\r\n        marginLeft: '-14px'\r\n    },\r\n    signUpButton: {\r\n        margin: theme.spacing(2, 0)\r\n    }\r\n}));\r\n\r\nconst SignUp = props => {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const { history } = props;\r\n\r\n    const classes = useStyles();\r\n\r\n    const [formState, setFormState] = useState({\r\n        isValid: false,\r\n        values: {},\r\n        touched: {},\r\n        errors: {}\r\n    });\r\n\r\n    useEffect(() => {\r\n        const errors = validate(formState.values, schema);\r\n\r\n        setFormState(formState => ({\r\n            ...formState,\r\n            isValid: errors ? false : true,\r\n            errors: errors || {}\r\n        }));\r\n    }, [formState.values]);\r\n\r\n    const handleChange = event => {\r\n        event.persist();\r\n\r\n        setFormState(formState => ({\r\n            ...formState,\r\n            values: {\r\n                ...formState.values,\r\n                [event.target.name]:\r\n                    event.target.type === 'checkbox'\r\n                        ? event.target.checked\r\n                        : event.target.value\r\n            },\r\n            touched: {\r\n                ...formState.touched,\r\n                [event.target.name]: true\r\n            }\r\n        }));\r\n    };\r\n\r\n    const handleBack = () => {\r\n        history.goBack();\r\n    };\r\n\r\n    const handleSignUp = event => {\r\n        event.preventDefault();\r\n\r\n        AuthService.register(formState.values.userName,\r\n            formState.values.email,\r\n            formState.values.firstName,\r\n            formState.values.lastName,\r\n            formState.values.password)\r\n            .then(() => {\r\n                history.push({\r\n                    pathname: '/dashboard'\r\n                });\r\n\r\n            }).catch(response => {\r\n                if (response && response.status) {\r\n                    if (response.status === 404) {\r\n                        ErrorMessage = 'Did not find Server';\r\n                        handleClickOpen();\r\n                    } else if (response.status === 409) {\r\n                        return response.json().then((res) => {\r\n                            console.log(res);\r\n                            if (res) {\r\n                                //ErrorMessage = e;\r\n                                if (res.error === 'Username exists') {\r\n                                    ErrorMessage = 'Entered User Name ' + formState.values.userName + ' Already Exists';\r\n                                } else if (res.error === 'Email exists') {\r\n                                    ErrorMessage = 'Entered Email ' + formState.values.email + ' Already Exists';\r\n                                } else {\r\n                                    ErrorMessage = 'Internal Server Error';\r\n                                }\r\n\r\n                                handleClickOpen();\r\n                            }\r\n                        });\r\n                    } else if (response.status === 500) {\r\n\r\n                        return response.text().then(message =>\r\n                        {\r\n                            ErrorMessage = 'Internal server error with message ' + message;\r\n                            handleClickOpen();\r\n                        })\r\n\r\n                    }\r\n                }\r\n            });\r\n    };\r\n\r\n    const hasError = field =>\r\n        formState.touched[field] && formState.errors[field] ? true : false;\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Dialog\r\n                aria-describedby=\"alert-dialog-description\"\r\n                aria-labelledby=\"alert-dialog-title\"\r\n\r\n                onClose={handleClose}\r\n                open={open}\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">{'Sign up Error'}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n\r\n                        {ErrorMessage}\r\n\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        autoFocus\r\n                        color=\"primary\"\r\n                        onClick={handleClose}\r\n                    >\r\n                        Close\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <Grid\r\n                className={classes.grid}\r\n                container\r\n            >\r\n                <Grid\r\n                    className={classes.quoteContainer}\r\n                    item\r\n                    lg={5}\r\n                >\r\n                    <div className={classes.quote}>\r\n                        <div className={classes.quoteInner}>\r\n                            <Typography\r\n                                className={classes.quoteText}\r\n                                variant=\"h1\"\r\n                            >\r\n                                A platform to anonymize your dataset and share it with others\r\n                            </Typography>\r\n\r\n                        </div>\r\n                    </div>\r\n                </Grid>\r\n                <Grid\r\n                    className={classes.content}\r\n                    item\r\n                    lg={7}\r\n                    xs={12}\r\n                >\r\n                    <div className={classes.content}>\r\n                        <div className={classes.contentHeader}>\r\n                            <IconButton onClick={handleBack}>\r\n                                <ArrowBackIcon/>\r\n                            </IconButton>\r\n                        </div>\r\n                        <div className={classes.contentBody}>\r\n                            <form\r\n                                className={classes.form}\r\n                                onSubmit={handleSignUp}\r\n                            >\r\n                                <Typography\r\n                                    className={classes.title}\r\n                                    variant=\"h2\"\r\n                                >\r\n                                    Create new account\r\n                                </Typography>\r\n                                <Typography\r\n                                    color=\"textSecondary\"\r\n                                    gutterBottom\r\n                                >\r\n                                    Use your email to create new account\r\n                                </Typography>\r\n                                <TextField\r\n                                    className={classes.textField}\r\n                                    error={hasError('userName')}\r\n                                    fullWidth\r\n                                    helperText={\r\n                                        hasError('userName') ? formState.errors.userName[0] : null\r\n                                    }\r\n                                    label=\"User Name\"\r\n                                    name=\"userName\"\r\n                                    onChange={handleChange}\r\n                                    type=\"text\"\r\n                                    value={formState.values.userName || ''}\r\n                                    variant=\"outlined\"\r\n                                />\r\n                                <TextField\r\n                                    className={classes.textField}\r\n                                    error={hasError('firstName')}\r\n                                    fullWidth\r\n                                    helperText={\r\n                                        hasError('firstName') ? formState.errors.firstName[0] : null\r\n                                    }\r\n                                    label=\"First name\"\r\n                                    name=\"firstName\"\r\n                                    onChange={handleChange}\r\n                                    type=\"text\"\r\n                                    value={formState.values.firstName || ''}\r\n                                    variant=\"outlined\"\r\n                                />\r\n                                <TextField\r\n                                    className={classes.textField}\r\n                                    error={hasError('lastName')}\r\n                                    fullWidth\r\n                                    helperText={\r\n                                        hasError('lastName') ? formState.errors.lastName[0] : null\r\n                                    }\r\n                                    label=\"Last name\"\r\n                                    name=\"lastName\"\r\n                                    onChange={handleChange}\r\n                                    type=\"text\"\r\n                                    value={formState.values.lastName || ''}\r\n                                    variant=\"outlined\"\r\n                                />\r\n                                <TextField\r\n                                    className={classes.textField}\r\n                                    error={hasError('email')}\r\n                                    fullWidth\r\n                                    helperText={\r\n                                        hasError('email') ? formState.errors.email[0] : null\r\n                                    }\r\n                                    label=\"Email address\"\r\n                                    name=\"email\"\r\n                                    onChange={handleChange}\r\n                                    type=\"text\"\r\n                                    value={formState.values.email || ''}\r\n                                    variant=\"outlined\"\r\n                                />\r\n                                <TextField\r\n                                    className={classes.textField}\r\n                                    error={hasError('password')}\r\n                                    fullWidth\r\n                                    helperText={\r\n                                        hasError('password') ? formState.errors.password[0] : null\r\n                                    }\r\n                                    label=\"Password\"\r\n                                    name=\"password\"\r\n                                    onChange={handleChange}\r\n                                    type=\"password\"\r\n                                    value={formState.values.password || ''}\r\n                                    variant=\"outlined\"\r\n                                />\r\n                                <div className={classes.policy}>\r\n                                    <Checkbox\r\n                                        checked={formState.values.policy || false}\r\n                                        className={classes.policyCheckbox}\r\n                                        color=\"primary\"\r\n                                        name=\"policy\"\r\n                                        onChange={handleChange}\r\n                                    />\r\n                                    <Typography\r\n                                        className={classes.policyText}\r\n                                        color=\"textSecondary\"\r\n                                        variant=\"body1\"\r\n                                    >\r\n                                        I have read the{' '}\r\n                                        <Link\r\n                                            color=\"primary\"\r\n                                            component={RouterLink}\r\n                                            to=\"#\"\r\n                                            underline=\"always\"\r\n                                            variant=\"h6\"\r\n                                        >\r\n                                            Terms and Conditions\r\n                                        </Link>\r\n                                    </Typography>\r\n                                </div>\r\n                                {hasError('policy') && (\r\n                                    <FormHelperText error>\r\n                                        {formState.errors.policy[0]}\r\n                                    </FormHelperText>\r\n                                )}\r\n                                <Button\r\n                                    className={classes.signUpButton}\r\n                                    color=\"primary\"\r\n                                    disabled={!formState.isValid}\r\n                                    fullWidth\r\n                                    size=\"large\"\r\n                                    type=\"submit\"\r\n                                    variant=\"contained\"\r\n                                >\r\n                                    Sign up now\r\n                                </Button>\r\n                                <Typography\r\n                                    color=\"textSecondary\"\r\n                                    variant=\"body1\"\r\n                                >\r\n                                    Have an account?{' '}\r\n                                    <Link\r\n                                        component={RouterLink}\r\n                                        to=\"/sign-in\"\r\n                                        variant=\"h6\"\r\n                                    >\r\n                                        Sign in\r\n                                    </Link>\r\n                                </Typography>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n};\r\n\r\nSignUp.propTypes = {\r\n    history: PropTypes.object\r\n};\r\n\r\nexport default withRouter(SignUp);\r\n"]},"metadata":{},"sourceType":"module"}