{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\ayesh\\\\Desktop\\\\TUM\\\\semester 3\\\\Final Presentation\\\\dedas-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"C:\\\\Users\\\\ayesh\\\\Desktop\\\\TUM\\\\semester 3\\\\Final Presentation\\\\dedas-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"C:\\\\Users\\\\ayesh\\\\Desktop\\\\TUM\\\\semester 3\\\\Final Presentation\\\\dedas-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\ayesh\\\\Desktop\\\\TUM\\\\semester 3\\\\Final Presentation\\\\dedas-frontend\\\\src\\\\views\\\\Editor\\\\components\\\\UsersToolbar\\\\UsersToolbar.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button, Grid, TextField } from '@material-ui/core';\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  row: {\n    height: '42px',\n    display: 'flex',\n    alignItems: 'center',\n    marginTop: theme.spacing(1)\n  },\n  spacer: {\n    flexGrow: 1\n  },\n  importButton: {\n    marginLeft: theme.spacing(2),\n    marginTop: theme.spacing(3)\n  },\n  selection: {\n    marginRight: theme.spacing(2),\n    marginTop: theme.spacing(3),\n    width: '220px'\n  },\n  exportButton: {\n    marginRight: theme.spacing(1)\n  },\n  searchInput: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst UsersToolbar = props => {\n  const className = props.className,\n        rest = _objectWithoutProperties(props, [\"className\"]);\n\n  const classes = useStyles();\n\n  const _useState = useState({\n    column: 'Name',\n    anonymization: 'Making'\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        values = _useState2[0],\n        setValues = _useState2[1];\n\n  const handleChange = event => {\n    setValues(_objectSpread({}, values, {\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  const columnNames = [{\n    value: 'name',\n    label: 'Name'\n  }, {\n    value: 'email',\n    label: 'Email'\n  }, {\n    value: 'location',\n    label: 'Location'\n  }, {\n    value: 'phone',\n    label: 'Phone'\n  }, {\n    value: 'date',\n    label: 'Registration Date'\n  }, {\n    value: 'roomName',\n    label: 'Room Name'\n  }, {\n    value: 'latitude',\n    label: 'Latitude'\n  }, {\n    value: 'longitude',\n    label: 'Longitude'\n  }];\n  const anonymizationTechniques = [{\n    value: 'masking',\n    label: 'Masking'\n  }, {\n    value: 'hashing',\n    label: 'Hashing'\n  }, {\n    value: 'random',\n    label: 'Random'\n  }, {\n    value: 'Generalization',\n    label: 'Hashing'\n  }];\n  return React.createElement(\"div\", Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: classes.spacer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }), React.createElement(Button, {\n    color: \"primary\",\n    variant: \"contained\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"Save Dataset\")), React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    className: classes.selection,\n    label: \"Select Columns\",\n    margin: \"dense\",\n    name: \"column\",\n    onChange: handleChange,\n    required: true,\n    select: true // eslint-disable-next-line react/jsx-sort-props\n    ,\n    SelectProps: {\n      native: true\n    },\n    value: values.columnNames,\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, columnNames.map(option => React.createElement(\"option\", {\n    key: option.value,\n    value: option.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, option.label))), React.createElement(TextField, {\n    className: classes.selection,\n    label: \"Select Anonymization\",\n    margin: \"dense\",\n    name: \"anoymization\",\n    onChange: handleChange,\n    required: true,\n    select: true // eslint-disable-next-line react/jsx-sort-props\n    ,\n    SelectProps: {\n      native: true\n    },\n    value: values.anonymizationTechniques,\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, anonymizationTechniques.map(option => React.createElement(\"option\", {\n    key: option.value,\n    value: option.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, option.label))), React.createElement(Button, {\n    onClick: () => alert('This is not implemented yet :)'),\n    color: \"primary\",\n    variant: \"contained\",\n    className: classes.importButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, \"Apply\")));\n};\n\nUsersToolbar.propTypes = {\n  className: PropTypes.string\n};\nexport default UsersToolbar;","map":{"version":3,"sources":["C:/Users/ayesh/Desktop/TUM/semester 3/Final Presentation/dedas-frontend/src/views/Editor/components/UsersToolbar/UsersToolbar.js"],"names":["React","useState","PropTypes","clsx","makeStyles","Button","Grid","TextField","useStyles","theme","root","row","height","display","alignItems","marginTop","spacing","spacer","flexGrow","importButton","marginLeft","selection","marginRight","width","exportButton","searchInput","UsersToolbar","props","className","rest","classes","column","anonymization","values","setValues","handleChange","event","target","name","value","columnNames","label","anonymizationTechniques","native","map","option","alert","propTypes","string"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Button, Grid, TextField } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {},\r\n    row: {\r\n        height: '42px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        marginTop: theme.spacing(1)\r\n    },\r\n    spacer: {\r\n        flexGrow: 1\r\n    },\r\n    importButton: {\r\n        marginLeft: theme.spacing(2),\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    selection: {\r\n        marginRight: theme.spacing(2),\r\n        marginTop: theme.spacing(3),\r\n        width: '220px'\r\n    },\r\n    exportButton: {\r\n        marginRight: theme.spacing(1)\r\n    },\r\n    searchInput: {\r\n        marginRight: theme.spacing(1)\r\n    }\r\n}));\r\n\r\nconst UsersToolbar = props => {\r\n    const { className, ...rest } = props;\r\n\r\n    const classes = useStyles();\r\n    const [values, setValues] = useState({\r\n        column: 'Name',\r\n        anonymization: 'Making'\r\n    });\r\n\r\n    const handleChange = event => {\r\n        setValues({\r\n            ...values,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    };\r\n\r\n    const columnNames = [\r\n        {\r\n            value: 'name',\r\n            label: 'Name'\r\n        },\r\n        {\r\n            value: 'email',\r\n            label: 'Email'\r\n        },\r\n        {\r\n            value: 'location',\r\n            label: 'Location'\r\n        },\r\n        {\r\n            value: 'phone',\r\n            label: 'Phone'\r\n        },\r\n        {\r\n            value: 'date',\r\n            label: 'Registration Date'\r\n        },\r\n        {\r\n            value: 'roomName',\r\n            label: 'Room Name'\r\n        },\r\n        {\r\n            value: 'latitude',\r\n            label: 'Latitude'\r\n        },\r\n        {\r\n            value: 'longitude',\r\n            label: 'Longitude'\r\n        }\r\n    ];\r\n\r\n    const anonymizationTechniques = [\r\n        {\r\n            value: 'masking',\r\n            label: 'Masking'\r\n        },\r\n        {\r\n            value: 'hashing',\r\n            label: 'Hashing'\r\n        },\r\n        {\r\n            value: 'random',\r\n            label: 'Random'\r\n        },\r\n        {\r\n            value: 'Generalization',\r\n            label: 'Hashing'\r\n        }\r\n    ];\r\n\r\n    return (\r\n        <div\r\n            {...rest}\r\n            className={clsx(classes.root, className)}\r\n        >\r\n            <div className={classes.row}>\r\n                <span className={classes.spacer}/>\r\n                {/* <Button className={classes.importButton}>Import</Button>\r\n        <Button className={classes.exportButton}>Export</Button> */}\r\n                <Button\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                >\r\n                    Save Dataset\r\n                </Button>\r\n            </div>\r\n            {/* <div className={classes.row}>\r\n        <SearchInput\r\n          className={classes.searchInput}\r\n          placeholder=\"Search Data Field\"\r\n        />\r\n      </div> */}\r\n            <Grid\r\n                item\r\n                md={6}\r\n                xs={12}\r\n            >\r\n                <TextField\r\n                    className={classes.selection}\r\n                    label=\"Select Columns\"\r\n                    margin=\"dense\"\r\n                    name=\"column\"\r\n                    onChange={handleChange}\r\n                    required\r\n                    select\r\n                    // eslint-disable-next-line react/jsx-sort-props\r\n                    SelectProps={{ native: true }}\r\n                    value={values.columnNames}\r\n                    variant=\"outlined\"\r\n                >\r\n                    {columnNames.map(option => (\r\n                        <option\r\n                            key={option.value}\r\n                            value={option.value}\r\n                        >\r\n                            {option.label}\r\n                        </option>\r\n                    ))}\r\n                </TextField>\r\n                <TextField\r\n                    className={classes.selection}\r\n                    label=\"Select Anonymization\"\r\n                    margin=\"dense\"\r\n                    name=\"anoymization\"\r\n                    onChange={handleChange}\r\n                    required\r\n                    select\r\n                    // eslint-disable-next-line react/jsx-sort-props\r\n                    SelectProps={{ native: true }}\r\n                    value={values.anonymizationTechniques}\r\n                    variant=\"outlined\"\r\n                >\r\n                    {anonymizationTechniques.map(option => (\r\n                        <option\r\n                            key={option.value}\r\n                            value={option.value}\r\n                        >\r\n                            {option.label}\r\n                        </option>\r\n                    ))}\r\n                </TextField>\r\n                <Button\r\n                    onClick={() => alert('This is not implemented yet :)')}\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    className={classes.importButton}>Apply</Button>\r\n            </Grid>\r\n        </div>\r\n    );\r\n};\r\n\r\nUsersToolbar.propTypes = {\r\n    className: PropTypes.string\r\n};\r\n\r\nexport default UsersToolbar;\r\n"]},"metadata":{},"sourceType":"module"}