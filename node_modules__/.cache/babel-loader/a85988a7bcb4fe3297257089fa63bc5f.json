{"ast":null,"code":"'use strict';\n\nimport HttpService from './HttpService';\nconst baseURL = process.env.REACT_APP_BACKEND_API_URL + '/stats';\n\nconst abstractGetStats = url => HttpService.get(url).then(resp => {\n  if (resp.status === 200) {\n    return resp.json().then(obj => Promise.resolve(obj.count));\n  } else {\n    return Promise.reject();\n  }\n});\n\nconst getTotalUserCount = () => abstractGetStats(baseURL + '/totalUserCount');\n\nconst getTotalDocumentCount = () => abstractGetStats(baseURL + '/totalDocumentCount');\n\nconst getTotalPublicDocumentCount = () => abstractGetStats(baseURL + '/totalPublicDocumentCount');\n\nexport default {\n  getTotalUserCount,\n  getTotalDocumentCount,\n  getTotalPublicDocumentCount\n};","map":{"version":3,"sources":["C:/Users/ayesh/Desktop/TUM/semester 3/Final Presentation/dedas-frontend/src/service/StatsService.js"],"names":["HttpService","baseURL","process","env","REACT_APP_BACKEND_API_URL","abstractGetStats","url","get","then","resp","status","json","obj","Promise","resolve","count","reject","getTotalUserCount","getTotalDocumentCount","getTotalPublicDocumentCount"],"mappings":"AAAA;;AAEA,OAAOA,WAAP,MAAwB,eAAxB;AAEA,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,yBAAZ,GAAwC,QAAxD;;AAEA,MAAMC,gBAAgB,GAAIC,GAAD,IAASN,WAAW,CAACO,GAAZ,CAAgBD,GAAhB,EAC7BE,IAD6B,CACxBC,IAAI,IAAI;AACV,MAAIA,IAAI,CAACC,MAAL,KAAgB,GAApB,EAAyB;AACrB,WAAOD,IAAI,CAACE,IAAL,GAAYH,IAAZ,CAAiBI,GAAG,IAAIC,OAAO,CAACC,OAAR,CAAgBF,GAAG,CAACG,KAApB,CAAxB,CAAP;AACH,GAFD,MAEO;AACH,WAAOF,OAAO,CAACG,MAAR,EAAP;AACH;AACJ,CAP6B,CAAlC;;AASA,MAAMC,iBAAiB,GAAG,MACtBZ,gBAAgB,CAACJ,OAAO,GAAG,iBAAX,CADpB;;AAGA,MAAMiB,qBAAqB,GAAG,MAC1Bb,gBAAgB,CAACJ,OAAO,GAAG,qBAAX,CADpB;;AAGA,MAAMkB,2BAA2B,GAAG,MAChCd,gBAAgB,CAACJ,OAAO,GAAG,2BAAX,CADpB;;AAGA,eAAe;AACXgB,EAAAA,iBADW;AAEXC,EAAAA,qBAFW;AAGXC,EAAAA;AAHW,CAAf","sourcesContent":["'use strict';\r\n\r\nimport HttpService from './HttpService';\r\n\r\nconst baseURL = process.env.REACT_APP_BACKEND_API_URL + '/stats';\r\n\r\nconst abstractGetStats = (url) => HttpService.get(url)\r\n    .then(resp => {\r\n        if (resp.status === 200) {\r\n            return resp.json().then(obj => Promise.resolve(obj.count));\r\n        } else {\r\n            return Promise.reject();\r\n        }\r\n    });\r\n\r\nconst getTotalUserCount = () =>\r\n    abstractGetStats(baseURL + '/totalUserCount');\r\n\r\nconst getTotalDocumentCount = () =>\r\n    abstractGetStats(baseURL + '/totalDocumentCount');\r\n\r\nconst getTotalPublicDocumentCount = () =>\r\n    abstractGetStats(baseURL + '/totalPublicDocumentCount');\r\n\r\nexport default {\r\n    getTotalUserCount,\r\n    getTotalDocumentCount,\r\n    getTotalPublicDocumentCount\r\n};\r\n"]},"metadata":{},"sourceType":"module"}