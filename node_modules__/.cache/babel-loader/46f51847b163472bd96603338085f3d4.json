{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\ayesh\\\\Desktop\\\\TUM\\\\semester 3\\\\Final Presentation\\\\dedas-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"C:\\\\Users\\\\ayesh\\\\Desktop\\\\TUM\\\\semester 3\\\\Final Presentation\\\\dedas-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\ayesh\\\\Desktop\\\\TUM\\\\semester 3\\\\Final Presentation\\\\dedas-frontend\\\\src\\\\views\\\\Dashboard\\\\components\\\\GenericDocumentListDisplay\\\\GenericDocumentListDisplay.js\";\nimport React, { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button, Card, CardActions, CardContent, CardHeader, Divider, Table, TableBody, TableCell, TableHead, TableRow } from '@material-ui/core';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\nimport LoadingSpinner from 'react-loader-spinner';\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 200\n  },\n  statusContainer: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  status: {\n    marginRight: theme.spacing(1)\n  },\n  actions: {\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst GenericDocumentListDisplay = props => {\n  const className = props.className,\n        promise = props.promise,\n        documentCount = props.documentCount,\n        tableRows = props.tableRows,\n        title = props.title,\n        headerBackgroundColor = props.headerBackgroundColor,\n        buttonLink = props.buttonLink,\n        rest = _objectWithoutProperties(props, [\"className\", \"promise\", \"documentCount\", \"tableRows\", \"title\", \"headerBackgroundColor\", \"buttonLink\"]);\n\n  const classes = useStyles();\n  const history = useHistory();\n\n  const _React$useState = React.useState(undefined),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        DocumentList = _React$useState2[0],\n        setDocumentList = _React$useState2[1]; // simple counter for list entry keys\n\n\n  let counter = 0;\n  useEffect(() => {\n    props.promise.then(data => {\n      setDocumentList(data.slice(0, documentCount));\n    }).catch(e => console.log(e));\n  }, []);\n\n  const handleButtonClick = () => {\n    history.push({\n      pathname: buttonLink\n    });\n  };\n\n  return React.createElement(Card, Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(CardHeader, {\n    style: {\n      backgroundColor: headerBackgroundColor,\n      color: 'white'\n    },\n    title: title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    className: classes.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(PerfectScrollbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.inner,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, !DocumentList ? React.createElement(LoadingSpinner, {\n    type: \"ThreeDots\",\n    height: 60,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }) : React.createElement(Table, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    key: 'headerRow',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, tableRows.map(row => React.createElement(TableCell, {\n    key: row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, row)))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, DocumentList.map(doc => React.createElement(TableRow, {\n    className: classes.tableRow,\n    hover: true,\n    key: counter++,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, tableRows.map(row => React.createElement(TableCell, {\n    className: classes.tableCell,\n    key: counter++,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.nameContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, doc[row])))))))))), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }), React.createElement(CardActions, {\n    className: classes.actions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    size: \"small\",\n    variant: \"text\",\n    onClick: handleButtonClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"View all \", React.createElement(ArrowRightIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }))));\n};\n\nGenericDocumentListDisplay.propTypes = {\n  className: PropTypes.string\n};\nexport default GenericDocumentListDisplay;","map":{"version":3,"sources":["C:/Users/ayesh/Desktop/TUM/semester 3/Final Presentation/dedas-frontend/src/views/Dashboard/components/GenericDocumentListDisplay/GenericDocumentListDisplay.js"],"names":["React","useEffect","useHistory","clsx","PerfectScrollbar","PropTypes","makeStyles","Button","Card","CardActions","CardContent","CardHeader","Divider","Table","TableBody","TableCell","TableHead","TableRow","ArrowRightIcon","LoadingSpinner","useStyles","theme","root","content","padding","inner","minWidth","statusContainer","display","alignItems","status","marginRight","spacing","actions","justifyContent","GenericDocumentListDisplay","props","className","promise","documentCount","tableRows","title","headerBackgroundColor","buttonLink","rest","classes","history","useState","undefined","DocumentList","setDocumentList","counter","then","data","slice","catch","e","console","log","handleButtonClick","push","pathname","backgroundColor","color","map","row","doc","tableRow","tableCell","nameContainer","propTypes","string"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    CardHeader,\r\n    Divider,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TableRow\r\n} from '@material-ui/core';\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\r\nimport LoadingSpinner from 'react-loader-spinner';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {},\r\n    content: {\r\n        padding: 0\r\n    },\r\n    inner: {\r\n        minWidth: 200\r\n    },\r\n    statusContainer: {\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    },\r\n    status: {\r\n        marginRight: theme.spacing(1)\r\n    },\r\n    actions: {\r\n        justifyContent: 'flex-end'\r\n    }\r\n}));\r\n\r\nconst GenericDocumentListDisplay = props => {\r\n    const { className, promise, documentCount, tableRows, title, headerBackgroundColor, buttonLink, ...rest } = props;\r\n    const classes = useStyles();\r\n\r\n    const history = useHistory();\r\n\r\n    const [DocumentList, setDocumentList] =\r\n        React.useState(undefined);\r\n\r\n    // simple counter for list entry keys\r\n    let counter = 0;\r\n\r\n    useEffect(() => {\r\n        props.promise\r\n            .then(data => {\r\n                setDocumentList(data.slice(0, documentCount));\r\n            })\r\n            .catch(e => console.log(e));\r\n    }, []);\r\n\r\n    const handleButtonClick = () => {\r\n        history.push({\r\n            pathname: buttonLink\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Card\r\n            {...rest}\r\n            className={clsx(classes.root, className)}\r\n        >\r\n            <CardHeader style={{ backgroundColor: headerBackgroundColor, color: 'white' }}\r\n                        title={title}\r\n            />\r\n            <Divider/>\r\n            <CardContent className={classes.content}>\r\n                <PerfectScrollbar>\r\n                    <div className={classes.inner}>\r\n                        {!DocumentList ? <LoadingSpinner type=\"ThreeDots\" height={60}/> : (\r\n                            <Table>\r\n                                <TableHead>\r\n                                    <TableRow\r\n                                        key={'headerRow'}>\r\n                                        {tableRows.map(row => (\r\n                                            <TableCell\r\n                                                key={row}\r\n                                            >{row}\r\n                                            </TableCell>\r\n                                        ))}\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {DocumentList.map(doc => (\r\n                                        <TableRow\r\n                                            className={classes.tableRow}\r\n                                            hover\r\n                                            key={counter++}\r\n                                        >{tableRows.map(row => (\r\n                                            <TableCell\r\n                                                className={classes.tableCell}\r\n                                                key={counter++}\r\n                                            >\r\n                                                <div className={classes.nameContainer}>\r\n                                                    {doc[row]}\r\n                                                </div>\r\n                                            </TableCell>\r\n                                        ))}\r\n                                        </TableRow>\r\n                                    ))\r\n                                    }\r\n                                </TableBody>\r\n                            </Table>\r\n                        )}\r\n\r\n                    </div>\r\n                </PerfectScrollbar>\r\n            </CardContent>\r\n            <Divider/>\r\n            <CardActions className={classes.actions}>\r\n                <Button\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    variant=\"text\"\r\n                    onClick={handleButtonClick}\r\n                >\r\n                    View all <ArrowRightIcon/>\r\n                </Button>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n};\r\n\r\nGenericDocumentListDisplay.propTypes = {\r\n    className: PropTypes.string\r\n};\r\n\r\nexport default GenericDocumentListDisplay;\r\n"]},"metadata":{},"sourceType":"module"}