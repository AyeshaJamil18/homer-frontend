"use strict";

require("core-js/modules/es.symbol");

require("core-js/modules/es.array.concat");

require("core-js/modules/es.array.filter");

require("core-js/modules/es.array.for-each");

require("core-js/modules/es.object.define-property");

require("core-js/modules/es.object.get-own-property-descriptor");

require("core-js/modules/es.object.keys");

require("core-js/modules/web.dom-collections.for-each");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SaverButton = exports.ChooserButton = void 0;

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var BaseButton = {
  functional: true,
  render: function render(createElement, context) {
    return createElement('button', _objectSpread({}, context.data, {
      // passing attributes and event handlers
      domProps: {
        textContent: context.props.title
      }
    }));
  }
};

var ChooserButton = _objectSpread({}, BaseButton, {
  name: 'Chooser',
  props: {
    title: {
      type: String,
      default: 'Choose a file'
    }
  }
});

exports.ChooserButton = ChooserButton;

var SaverButton = _objectSpread({}, BaseButton, {
  name: 'Saver',
  props: {
    title: {
      type: String,
      default: 'Save a file'
    }
  }
});

exports.SaverButton = SaverButton;