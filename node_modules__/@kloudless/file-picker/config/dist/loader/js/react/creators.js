"use strict";

require("core-js/modules/es.symbol");

require("core-js/modules/es.symbol.description");

require("core-js/modules/es.symbol.iterator");

require("core-js/modules/es.array.concat");

require("core-js/modules/es.array.filter");

require("core-js/modules/es.array.for-each");

require("core-js/modules/es.array.index-of");

require("core-js/modules/es.array.iterator");

require("core-js/modules/es.array.reduce");

require("core-js/modules/es.function.name");

require("core-js/modules/es.object.assign");

require("core-js/modules/es.object.define-property");

require("core-js/modules/es.object.get-own-property-descriptor");

require("core-js/modules/es.object.get-prototype-of");

require("core-js/modules/es.object.keys");

require("core-js/modules/es.object.set-prototype-of");

require("core-js/modules/es.object.to-string");

require("core-js/modules/es.string.iterator");

require("core-js/modules/web.dom-collections.for-each");

require("core-js/modules/web.dom-collections.iterator");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.createSaver = exports.createChooser = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _hoistNonReactStatics = _interopRequireDefault(require("hoist-non-react-statics"));

var _interface = _interopRequireDefault(require("../interface"));

var _constants = require("./constants");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var DefaultButton = function DefaultButton(_ref) {
  var onClick = _ref.onClick,
      title = _ref.title,
      fileExplorerType = _ref.fileExplorerType,
      disabled = _ref.disabled,
      className = _ref.className;
  return _react.default.createElement("button", {
    className: className,
    type: "button",
    onClick: onClick,
    disabled: disabled
  }, title || (fileExplorerType === 'chooser' ? 'Choose a file' : 'Save a file'));
};

DefaultButton.propTypes = {
  onClick: _propTypes.default.func.isRequired,
  title: _propTypes.default.string,
  fileExplorerType: _propTypes.default.string.isRequired,
  disabled: _propTypes.default.bool,
  className: _propTypes.default.string
};
DefaultButton.defaultProps = {
  disabled: false,
  className: '',
  title: ''
};

var create = function create(fileExplorerType) {
  return function () {
    var WrappedComponent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DefaultButton;
    var isChooser = fileExplorerType === 'chooser';
    var useDefaultButton = WrappedComponent === DefaultButton;

    var Wrapper =
    /*#__PURE__*/
    function (_React$Component) {
      _inherits(Wrapper, _React$Component);

      function Wrapper(props) {
        var _this;

        _classCallCheck(this, Wrapper);

        _this = _possibleConstructorReturn(this, _getPrototypeOf(Wrapper).call(this, props));
        _this.explorer = null;
        _this.onWrappedCompClick = _this.onWrappedCompClick.bind(_assertThisInitialized(_this));
        _this.initExplorer = _this.initExplorer.bind(_assertThisInitialized(_this));
        _this.onRaw = _this.onRaw.bind(_assertThisInitialized(_this));
        return _this;
      }

      _createClass(Wrapper, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          var options = this.props.options;
          this.initExplorer(options);
        }
      }, {
        key: "componentWillReceiveProps",
        value: function componentWillReceiveProps(nextProps) {
          var options = this.props.options;

          if (nextProps.options !== options) {
            this.explorer.destroy();
            this.initExplorer(nextProps.options);
          }
        }
      }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
          this.explorer.destroy();
        }
      }, {
        key: "onWrappedCompClick",
        value: function onWrappedCompClick() {
          var onClick = this.props.onClick;
          onClick.apply(void 0, arguments);

          if (isChooser) {
            this.explorer.choose();
          } else {
            this.explorer.save();
          }
        }
      }, {
        key: "onRaw",
        value: function onRaw(_ref2) {
          var action = _ref2.action,
              data = _ref2.data;
          var eventHandler = _constants.EVENT_HANDLER_MAPPING[action]; // eslint-disable-next-line react/destructuring-assignment

          this.props[eventHandler](data);
        }
      }, {
        key: "initExplorer",
        value: function initExplorer(options) {
          var deepClonedOptions = JSON.parse(JSON.stringify(options));

          var explorer = _interface.default.explorer(deepClonedOptions);

          explorer.on('raw', this.onRaw);
          this.explorer = explorer;
        }
      }, {
        key: "render",
        value: function render() {
          // do not pass options and event handlers to the wrapped component
          var _this$props = this.props,
              options = _this$props.options,
              restProps = _objectWithoutProperties(_this$props, ["options"]);

          _constants.EVENT_HANDLERS.forEach(function (eventHandler) {
            return delete restProps[eventHandler];
          });

          if (useDefaultButton) {
            restProps.fileExplorerType = fileExplorerType;
          }

          return _react.default.createElement(WrappedComponent, _extends({}, restProps, {
            onClick: this.onWrappedCompClick
          }));
        }
      }]);

      return Wrapper;
    }(_react.default.Component); // Set display name


    var displayName = WrappedComponent.displayName || WrappedComponent.name || fileExplorerType;
    Wrapper.displayName = "create".concat(isChooser ? 'Chooser' : 'Saver', "(").concat(displayName, ")"); // hoist non-react static methods

    (0, _hoistNonReactStatics.default)(Wrapper, WrappedComponent); // set prop type

    Wrapper.propTypes = _objectSpread({}, _constants.EVENT_HANDLERS.reduce(function (result, key) {
      result[key] = _propTypes.default.func;
      return result;
    }, {}), {
      options: _propTypes.default.shape({
        app_id: _propTypes.default.string.isRequired
      }).isRequired,
      onSuccess: _propTypes.default.func.isRequired
    }); // set default props

    Wrapper.defaultProps = _objectSpread({
      onClick: function onClick() {}
    }, _constants.EVENT_HANDLERS.reduce(function (result, key) {
      result[key] = function () {};

      return result;
    }, {}));
    return Wrapper;
  };
};

var createChooser = create('chooser');
exports.createChooser = createChooser;
var createSaver = create('saver');
exports.createSaver = createSaver;
var _default = {
  createChooser: createChooser,
  createSaver: createSaver
};
exports.default = _default;